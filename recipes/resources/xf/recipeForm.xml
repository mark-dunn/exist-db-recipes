<xf:xform xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:rest="http://exquery.org/ns/restxq" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:r="http://ns.datacraft.co.uk/recipe" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xf="http://www.w3.org/2002/xforms">
    
    <!-- 
    
    weird behaviours in eXist 3.0
    
    1. this file was not read properly unless xmlns:r was declared on the root element!
    2. xforms namespace prefix must be bound (not just xf)
    
    -->
    <xf:model id="m-recipes">
        <!-- 
            Make the default (first) instance
            a small data field.
            
            (If 'all' is the default
            we can accidentally submit
            a huge data set.)
        -->
        <xf:instance id="i-current-id">
            <id/>
        </xf:instance>
        
        <xf:instance id="all">
            <r:recipes>
                <r:recipe>
                    <r:id>2</r:id>
                    <r:title>Orange and ginger chicken</r:title>
                    <r:ingredients>
                        <r:ingredient>chicken</r:ingredient>
                        <r:ingredient>ginger</r:ingredient>
                        <r:ingredient>orange</r:ingredient>
                    </r:ingredients>
                    <r:method>
                        <r:step>cook</r:step>
                        <r:step>cook more</r:step>
                    </r:method>
                </r:recipe>
            </r:recipes>
        </xf:instance>
        
        <xf:instance id="i-reindex-status">
            <reindex-status/>
        </xf:instance>
        
        <xf:instance id="i-search-recipes">
            <parameters>
                <query/>
                <field>ingredient</field>
            </parameters>
        </xf:instance>
        
        <!-- empty <ingredient> to insert -->
        <xf:instance id="i-new-ingredient">
            <r:ingredient/>
        </xf:instance>
        
        <!-- empty <step> to insert -->
        <xf:instance id="i-new-step">
            <r:step/>
        </xf:instance>

        <!-- empty recipe -->
        <xf:instance id="i-new-recipe">
            <r:recipes>
                <r:recipe>
                    <r:id/>
                    <r:title/>
                    <r:ingredients>
                        <r:ingredient/>
                    </r:ingredients>
                    <r:method>
                        <r:step/>
                    </r:method>
                </r:recipe>
            </r:recipes>
        </xf:instance>
        
        
        <xf:bind id="has-title" nodeset="instance('all')/r:recipe[1]/r:title" relevant="text() != ''"/>
        
        <!-- Load all recipes -->
        <xf:submission id="load" resource="/exist/restxq/recipes" method="get" replace="instance" instance="all">
            <xf:action ev:event="xforms-submit-done">
                <xf:refresh/>
            </xf:action>
        </xf:submission>
            
        
        <!-- must submit an element, to be turned into a KEV query (name = text content) -->
        <!-- for some reason does not work with DELETE method -->
        <xf:submission id="delete-recipe" resource="/exist/restxq/delete-recipe" method="put" instance="all" ref="instance('all')/r:recipe[index('recipe-repeat')]/r:id">
            <!-- when delete is done, we clear the form for a new recipe -->
            <xf:action ev:event="xforms-submit-done">
                <xf:setindex repeat="recipe-repeat" index="1"/>
                <xf:insert nodeset="instance('all')" origin="instance('i-new-recipe')"/>
                <xf:send submission="get-id"/>
            </xf:action>
        </xf:submission>
        
        <!-- confusion with previously registered RESTXQ resource "/search" in demo app !!! 
        changed to "/search-recipes"
        -->
        <xf:submission id="search" resource="/exist/restxq/search-recipes" ref="instance('i-search-recipes')" instance="all" replace="instance" method="get" serialization="application/x-www-form-urlencoded">
            <xf:action ev:event="xforms-submit-done">
                <xf:refresh/>
            </xf:action>
        </xf:submission> 
        
        <xf:submission id="reindex" resource="/exist/restxq/reindex-recipes" method="get" ref="instance('i-reindex-status')" instance="i-reindex-status">
            <xf:message ev:event="xforms-submit-done" level="ephemeral">Recipe collection reindexed.</xf:message>
        </xf:submission>
        
        <xf:submission id="save" resource="/exist/restxq/recipe" method="put" mediatype="application/xml" instance="all" ref="instance('all')/r:recipe[index('recipe-repeat')]"/>
        
        
        <!-- 
            "get-id" is called when a new recipe is started
            It generates a new ID and puts it in the 
            new recipe's r:id field
            Then it puts the ID into the 'i-current-id' instance
        
        -->
        <xf:submission id="get-id" resource="/exist/restxq/get-id" method="put" mediatype="application/xml" instance="all" ref="instance('all')/r:recipe[index('recipe-repeat')]/r:id" targetref="instance('all')/r:recipe[index('recipe-repeat')]/r:id" replace="text">
            <xf:action ev:event="xforms-submit-done">
                <xf:insert nodeset="instance('i-current-id')" origin="instance('all')/r:recipe[index('recipe-repeat')]/r:id"/>
                <xf:message level="ephemeral">Current recipe ID: <xf:output ref="instance('i-current-id')"/></xf:message>
            </xf:action>
        </xf:submission>    
        
    </xf:model>
    
    
    <div id="content" class="dcContentBlock">
        <h2>Manage Recipes</h2>
        
        <xf:trigger>
            <xf:label>Get recipe ID (test)</xf:label>
            <xf:action ev:event="DOMActivate">
                <xf:send submission="get-id"/>
                <xf:message level="ephemeral">ID of selected recipe: <xf:output ref="instance('all')/r:recipe[index('recipe-repeat')]/r:id/text()"/></xf:message>
            </xf:action>
        </xf:trigger>
        
        <xf:select1 ref="instance('i-search-recipes')/field">
            <xf:label>Choose field:</xf:label>
            <xf:item>
                <xf:label>Ingredient</xf:label>
                <xf:value>ingredient</xf:value>
            </xf:item>
            <xf:item>
                <xf:label>Title</xf:label>
                <xf:value>title</xf:value>
            </xf:item>
        </xf:select1>
        
        <xf:input class="search" ref="instance('i-search-recipes')/query" incremental="true">
            <xf:label/>
            <xf:hint>Filter displayed recipes by entering a few characters contained in an ingredient.</xf:hint>
            <xf:send submission="search" ev:event="xforms-value-changed"/>
        </xf:input>
        
        <xf:submit submission="search">
            <xf:label>Search</xf:label>
        </xf:submit>
        
        <xf:group appearance="minimal" class="action-buttons">
            <xf:trigger>
                <xf:label>Load all recipes</xf:label>
                <xf:action ev:event="DOMActivate">
                    <xf:send submission="load"/>
                </xf:action>
            </xf:trigger>
            
            
            <xf:submit submission="reindex">
                <xf:label>Reindex</xf:label>
            </xf:submit>
            
            <!--<xf:trigger>
                <xf:label>Rebuild</xf:label>
                <xf:action ev:event="DOMActivate">
                    <xf:rebuild model="m-recipes"/>
                </xf:action>
            </xf:trigger>-->
        </xf:group>
        
       
        
        
        <h3>Recipe list</h3>
        <!-- https://www.w3.org/TR/xforms11/#ui-repeat -->
        <xf:repeat id="recipe-repeat" nodeset="instance('all')/r:recipe">
            <xf:output ref="r:title" class="recipe-title"/>
            <xf:output bind="has-title" value="'Ingredients:'" class="recipe-subheading"/>
            <xf:repeat id="ingredient-repeat" nodeset="r:ingredients/r:ingredient">
                <xf:output ref="text()" class="recipe-ingredient"/>
            </xf:repeat>
        <xf:output bind="has-title" value="'Method:'" class="recipe-subheading"/>
            <xf:repeat id="method-repeat" nodeset="r:method/r:step">
                <xf:output ref="text()" class="recipe-ingredient"/>
            </xf:repeat>
        </xf:repeat>  
        
        <h3>Edit recipe</h3>
        
        
        <xf:trigger>
            <xf:label>New recipe</xf:label>
            <xf:action ev:event="DOMActivate">
                <xf:setindex repeat="recipe-repeat" index="1"/>
                <xf:insert nodeset="instance('all')" origin="instance('i-new-recipe')"/>
                <xf:send submission="get-id"/>
            </xf:action>
        </xf:trigger>
        
        
        <!-- inside <xf:group> it got hit by "refreshElementsUsingIndexFunction-JS" and the @data-submit attribute was lost -->
        <xf:submit submission="save">
            <xf:label>Save recipe</xf:label>
        </xf:submit>
        
        
        <xf:trigger>
            <xf:label>Delete recipe</xf:label>
            <xf:action ev:event="DOMActivate">
                <xf:send submission="delete-recipe"/>
            </xf:action>
       </xf:trigger>
        
        <xf:group ref="instance('all')/r:recipe[index('recipe-repeat')]" appearance="full" class="edit">
            <xf:input ref="r:title">
                <xf:label>Recipe Name:</xf:label>
            </xf:input>
            <xf:repeat id="edit-ingredient-repeat" nodeset="r:ingredients/r:ingredient">
                <xf:input ref="." id="edit-ingredient-repeat-input">
                    <xf:label>Ingredient:</xf:label>
                </xf:input>
            </xf:repeat>
            
            
            <!-- http://wiki.orbeon.com/forms/how-to/logic/repeat-insert-position -->
            <xf:repeat id="edit-step-repeat" nodeset="r:method/r:step">
                <xf:input ref="." id="edit-step-repeat-input">
                    <xf:label>Step:</xf:label>
                </xf:input>
            </xf:repeat>
            
            <!-- http://wiki.orbeon.com/forms/how-to/logic/repeat-insert-position -->
            <xf:trigger>
                <xf:label>Add ingredient after selected item</xf:label>
                <xf:action ev:event="DOMActivate">
                    <xf:insert context="." nodeset="r:ingredients/r:ingredient" at="index('edit-ingredient-repeat')" position="after" origin="instance('i-new-ingredient')"/>
                    <xf:setfocus control="edit-ingredient-repeat-input"/>
                </xf:action>
            </xf:trigger>
            
            <xf:trigger>
                <xf:label>Delete selected ingredient</xf:label>
                <xf:action ev:event="DOMActivate">
                    <xf:delete context="." nodeset="r:ingredients/r:ingredient" at="index('edit-ingredient-repeat')"/>
                    <xf:setindex repeat="edit-ingredient-repeat" index="index('edit-ingredient-repeat') - 1" if="index('edit-ingredient-repeat') != 1"/>
                    <xf:insert context="./r:ingredients" if="not(r:ingredient)" nodeset="r:ingredient" origin="instance('i-new-ingredient')"/>
                    <xf:setfocus control="edit-ingredient-repeat-input"/>
                </xf:action>
            </xf:trigger>
            
            
            
            <xf:trigger>
                <xf:label>Move selected ingredient Up</xf:label>
                <!-- xf:action groups a sequence of actions -->
                <xf:action ev:event="DOMActivate" if="index('edit-ingredient-repeat') != 1">
                    <!-- insert changes "focus" index to the newly inserted node -->
                    <xf:insert context="." nodeset="r:ingredients/r:ingredient" at="index('edit-ingredient-repeat') - 1" position="before" origin="r:ingredients/r:ingredient[index('edit-ingredient-repeat')]"/>
                    <!-- original node is now at index() + 2 -->
                    <xf:delete context="." nodeset="r:ingredients/r:ingredient" at="index('edit-ingredient-repeat') + 2"/>
                    <xf:setfocus control="edit-ingredient-repeat-input"/>
                </xf:action>
            </xf:trigger>
            
            <xf:trigger>
                <xf:label>Move selected ingredient Down</xf:label>
                <!-- xf:action groups a sequence of actions 
                     
                     tried position() instead of index('edit-ingredient-repeat') but didn't work
                     possibly because focus was on a different row from where 'Down' was clicked
                     -->
                <xf:action ev:event="DOMActivate" if="index('edit-ingredient-repeat') != count(r:ingredients/r:ingredient)">
                    <!-- insert changes "focus" index to the newly inserted node -->
                    <xf:insert context="." nodeset="r:ingredients/r:ingredient" at="index('edit-ingredient-repeat') + 1" position="after" origin="r:ingredients/r:ingredient[index('edit-ingredient-repeat')]"/>
                    <!-- original node is now at index() - 2 -->
                    <xf:delete context="." nodeset="r:ingredients/r:ingredient" at="index('edit-ingredient-repeat') - 2"/>
                    <!-- copy of original node is now at index() - 1 -->
                    <xf:setindex repeat="edit-ingredient-repeat" index="index('edit-ingredient-repeat') - 1"/>
                    <xf:setfocus control="edit-ingredient-repeat-input"/>
                </xf:action>
            </xf:trigger>
            
        <xf:trigger>
                <xf:label>Add step after selected item</xf:label>
                <xf:action ev:event="DOMActivate">
                    <xf:insert context="." nodeset="r:method/r:step" at="index('edit-step-repeat')" position="after" origin="instance('i-new-step')"/>
                    <xf:setfocus control="edit-step-repeat-input"/>
                </xf:action>
            </xf:trigger>
            
            <xf:trigger>
                <xf:label>Delete selected step</xf:label>
                <xf:action ev:event="DOMActivate">
                    <xf:delete context="." nodeset="r:method/r:step" at="index('edit-step-repeat')"/>
                    <xf:setindex repeat="edit-step-repeat" index="index('edit-ingredient-repeat') - 1" if="index('edit-step-repeat') != 1"/>
                    <xf:insert context="./r:method" if="not(r:step)" nodeset="r:step" origin="instance('i-new-step')"/>
                    <xf:setfocus control="edit-step-repeat-input"/>
                </xf:action>
            </xf:trigger>
            
            
            
            <xf:trigger>
                <xf:label>Move selected step Up</xf:label>
                <xf:action ev:event="DOMActivate" if="index('edit-step-repeat') != 1">
                    <xf:insert context="." nodeset="r:method/r:step" at="index('edit-step-repeat') - 1" position="before" origin="r:method/r:step[index('edit-step-repeat')]"/>
                    <xf:delete context="." nodeset="r:method/r:step" at="index('edit-step-repeat') + 2"/>
                    <xf:setfocus control="edit-step-repeat-input"/>
                </xf:action>
            </xf:trigger>
            
            <xf:trigger>
                <xf:label>Move selected step Down</xf:label>
                <xf:action ev:event="DOMActivate" if="index('edit-step-repeat') != count(r:ingredients/r:ingredient)">
                    <xf:insert context="." nodeset="r:method/r:step" at="index('edit-step-repeat') + 1" position="after" origin="r:method/r:step[index('edit-step-repeat')]"/>
                    <xf:delete context="." nodeset="r:method/r:step" at="index('edit-step-repeat') - 2"/>
                    <xf:setindex repeat="edit-step-repeat" index="index('edit-step-repeat') - 1"/>
                    <xf:setfocus control="edit-step-repeat-input"/>
                </xf:action>
            </xf:trigger>
        </xf:group>
        
        </div>
    
</xf:xform>