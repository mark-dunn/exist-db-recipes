<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="true">
 <co id="0" binds="1 2 3 4 5 6 7">
  <template name="Q{}action-insert" flags="os" line="3771" module="saxon-xforms.xsl" slots="8">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3772">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3773" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="3774" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3776" var="ref" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="3777" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3793" var="instanceXML2" as="element()" slot="5" eval="7">
       <choose line="3795">
        <and op="and">
         <vc op="eq" onEmpty="0" comp="CCC">
          <ufCall line="3791" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
           <varRef name="ref" slot="3"/>
          </ufCall>
          <str val="saxon-forms-default"/>
         </vc>
         <fn name="exists">
          <varRef name="instanceXML" slot="1"/>
         </fn>
        </and>
        <check line="3796" card="1" diag="3|0|XTTE0570|instanceXML2">
         <varRef name="instanceXML" slot="1"/>
        </check>
        <true/>
        <check line="3799" card="1" diag="3|0|XTTE0570|instanceXML2">
         <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="2" eval="6">
          <varRef name="ref" slot="3"/>
         </ufCall>
        </check>
       </choose>
       <let line="3804" var="insert-node" as="node()" slot="6" eval="7">
        <treat line="3805" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|insert-node">
         <check card="1" diag="3|0|XTTE0570|insert-node">
          <evaluate dxns="">
           <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="4">
            <check card="1" diag="0|0||xforms:impose">
             <choose line="3789">
              <fn name="exists">
               <varRef name="ref" slot="3"/>
              </fn>
              <choose>
               <fn name="exists">
                <varRef name="at" slot="4"/>
               </fn>
               <fn name="concat">
                <varRef name="ref" slot="3"/>
                <str val="["/>
                <varRef name="at" slot="4"/>
                <str val="]"/>
               </fn>
               <true/>
               <varRef name="ref" slot="3"/>
              </choose>
             </choose>
            </check>
           </ufCall>
           <varRef role="cxt" name="instanceXML2" slot="5"/>
           <varRef role="nsCxt" name="instanceXML2" slot="5"/>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
         </check>
        </treat>
        <let line="3808" var="instance-with-insert" as="element()" slot="7" eval="7">
         <treat line="3809" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|instance-with-insert">
          <check card="1" diag="3|0|XTTE0570|instance-with-insert">
           <applyT mode="Q{}insert-node" bSlot="4">
            <varRef role="select" name="instanceXML2" slot="5"/>
            <withParam name="Q{}insert-node" flags="t" as="node()">
             <varRef line="3810" name="insert-node" slot="6"/>
            </withParam>
            <withParam name="Q{}position-relative" flags="t" as="xs:string?">
             <treat line="3778" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|position">
              <check card="?" diag="3|0|XTTE0570|position">
               <cvUntyped to="xs:string">
                <data>
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="action-map" slot="0"/>
                  <str val="@position"/>
                 </ifCall>
                </data>
               </cvUntyped>
              </check>
             </treat>
            </withParam>
           </applyT>
          </check>
         </treat>
         <sequence line="3815">
          <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="5" eval="6 6">
           <varRef name="ref" slot="3"/>
           <varRef name="instance-with-insert" slot="7"/>
          </ufCall>
          <callT line="3816" name="xforms-rebuild" bSlot="6" flags="t"/>
         </sequence>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="8" binds="1 2 3 4 9 6 7">
  <template name="Q{}action-delete" flags="os" line="3829" module="saxon-xforms.xsl" slots="11">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3830">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3831" name="Q{}instanceXML" slot="1" flags="ti" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="1" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="3832" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3834" var="ref" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="3835" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3845" var="ref-qualified" as="xs:string?" slot="5" eval="7">
       <choose>
        <fn name="exists">
         <varRef name="ref" slot="3"/>
        </fn>
        <choose>
         <fn name="exists">
          <varRef name="at" slot="4"/>
         </fn>
         <fn name="concat">
          <varRef name="ref" slot="3"/>
          <str val="["/>
          <varRef name="at" slot="4"/>
          <str val="]"/>
         </fn>
         <true/>
         <varRef name="ref" slot="3"/>
        </choose>
       </choose>
       <let line="3849" var="instanceXML2" as="element()" slot="6" eval="7">
        <choose line="3851">
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <ufCall line="3847" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
            <varRef name="ref" slot="3"/>
           </ufCall>
           <str val="saxon-forms-default"/>
          </vc>
          <fn name="exists">
           <varRef name="instanceXML" slot="1"/>
          </fn>
         </and>
         <varRef line="3852" name="instanceXML" slot="1"/>
         <true/>
         <check line="3855" card="1" diag="3|0|XTTE0570|instanceXML2">
          <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="2" eval="6">
           <varRef name="ref" slot="3"/>
          </ufCall>
         </check>
        </choose>
        <let line="3860" var="ifVar" as="xs:string?" slot="7" eval="7">
         <choose line="628">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
           <varRef line="3860" name="action-map" slot="0"/>
           <str val="@if"/>
          </ifCall>
          <treat line="629" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
           <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
            <cvUntyped to="xs:string">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <varRef line="3860" name="action-map" slot="0"/>
               <str val="@if"/>
              </ifCall>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </choose>
         <let line="3863" var="delete-node" as="node()?" slot="8" eval="7">
          <choose line="3865">
           <and op="and">
            <fn name="exists">
             <varRef name="ref-qualified" slot="5"/>
            </fn>
            <fn name="not">
             <gc op="=" card="1:1" comp="CCC">
              <varRef name="ref-qualified" slot="5"/>
              <str val=""/>
             </gc>
            </fn>
           </and>
           <treat line="3866" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|delete-node">
            <check card="?" diag="3|0|XTTE0570|delete-node">
             <evaluate dxns="">
              <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="7">
               <check card="1" diag="0|0||xforms:impose">
                <varRef name="ref-qualified" slot="5"/>
               </check>
              </ufCall>
              <varRef role="cxt" name="instanceXML2" slot="6"/>
              <varRef role="nsCxt" name="instanceXML2" slot="6"/>
              <str role="sa" val="no"/>
              <map role="wp" size="0"/>
             </evaluate>
            </check>
           </treat>
          </choose>
          <let line="3871" var="ifExecuted" as="xs:boolean" slot="9" eval="7">
           <choose line="3873">
            <fn name="exists">
             <varRef name="ifVar" slot="7"/>
            </fn>
            <treat line="3874" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|ifExecuted">
             <check card="1" diag="3|0|XTTE0570|ifExecuted">
              <cvUntyped to="xs:boolean">
               <data>
                <evaluate dxns="">
                 <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
                  <varRef name="ifVar" slot="7"/>
                 </check>
                 <varRef role="cxt" name="delete-node" slot="8"/>
                 <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
                  <varRef name="delete-node" slot="8"/>
                 </check>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <true/>
            <true/>
           </choose>
           <choose line="3882">
            <varRef name="ifExecuted" slot="9"/>
            <let line="3883" var="instance-with-delete" as="element()" slot="10" eval="7">
             <treat line="3884" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|instance-with-delete">
              <check card="1" diag="3|0|XTTE0570|instance-with-delete">
               <applyT mode="Q{}delete-node" bSlot="4">
                <varRef role="select" name="instanceXML2" slot="6"/>
                <withParam name="Q{}delete-node" flags="t" as="node()?">
                 <varRef line="3885" name="delete-node" slot="8"/>
                </withParam>
               </applyT>
              </check>
             </treat>
             <sequence line="3889">
              <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="5" eval="6 6">
               <varRef name="ref" slot="3"/>
               <varRef name="instance-with-delete" slot="10"/>
              </ufCall>
              <callT line="3890" name="xforms-rebuild" bSlot="6" flags="t"/>
             </sequence>
            </let>
           </choose>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="10" binds="11">
  <mode name="Q{}xforms-action-map" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="2058" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2002/xforms}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2002/xforms'"/>
     <gc ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2058" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <literal count="15">
       <str val="setvalue"/>
       <str val="insert"/>
       <str val="delete"/>
       <str val="setindex"/>
       <str val="toggle"/>
       <str val="setfocus"/>
       <str val="dispatch"/>
       <str val="rebuild"/>
       <str val="recalculate"/>
       <str val="revalidate"/>
       <str val="refresh"/>
       <str val="reset"/>
       <str val="load"/>
       <str val="send"/>
       <str val="message"/>
      </literal>
      <fn name="local-name">
       <dot type="Q{http://www.w3.org/2002/xforms}*"/>
      </fn>
     </gc>
    </p.withPredicate>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2060">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <ifCall line="2062" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
      <fn name="local-name">
       <dot type="Q{http://www.w3.org/2002/xforms}*"/>
      </fn>
      <let line="2063" var="array" as="map(*)*" slot="1" eval="8">
       <treat line="2064" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|array">
        <forEach>
         <currentGroup/>
         <applyT line="2065" bSlot="0">
          <dot role="select"/>
         </applyT>
        </forEach>
       </treat>
       <ifCall line="2068" name="Q{http://www.w3.org/2005/xpath-functions/array}_from-sequence" type="array(*)">
        <varRef name="array" slot="1"/>
       </ifCall>
      </let>
     </ifCall>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="12" binds="12 13 12 12 13">
  <mode name="Q{}form-check" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="10" flags="s" line="2261" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2262">
     <param name="Q{}curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="2263" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <param line="2264" name="Q{}pendingUpdates" slot="2" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="2270" var="updatedPath" as="xs:string" slot="3" eval="7">
      <choose>
       <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="position" slot="1"/>
        </data>
        <int val="0"/>
       </gc>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="name">
         <dot type="element()"/>
        </fn>
        <str val="["/>
        <atomSing card="?" diag="0|3||fn:concat">
         <varRef name="position" slot="1"/>
        </atomSing>
        <str val="]"/>
       </fn>
       <true/>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="name">
         <dot type="element()"/>
        </fn>
       </fn>
      </choose>
      <copy line="2278" flags="cin">
       <sequence role="content">
        <applyT mode="Q{}form-check" bSlot="0">
         <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <withParam name="Q{}curPath" as="xs:string">
          <fn line="2279" name="concat">
           <varRef name="updatedPath" slot="3"/>
           <str val="/"/>
          </fn>
         </withParam>
        </applyT>
        <let line="2285" var="associated-form-control" as="node()*" slot="4" eval="8">
         <slash>
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
          <fn name="key">
           <str val="Q{http://saxon.sf.net/}kk102"/>
           <varRef name="updatedPath" slot="3"/>
           <dot type="document-node()"/>
          </fn>
         </slash>
         <sequence line="2289">
          <choose>
           <fn name="exists">
            <varRef name="associated-form-control" slot="4"/>
           </fn>
           <valueOf line="2293" flags="l">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <applyT mode="Q{}get-field" bSlot="1">
                 <varRef role="select" name="associated-form-control" slot="4"/>
                </applyT>
               </mergeAdj>
              </data>
             </convert>
             <str val=""/>
            </fn>
           </valueOf>
           <and line="2296" op="and">
            <fn name="exists">
             <varRef name="pendingUpdates" slot="2"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
             <check card="1" diag="0|0||map:contains">
              <varRef name="pendingUpdates" slot="2"/>
             </check>
             <varRef name="updatedPath" slot="3"/>
            </ifCall>
           </and>
           <valueOf line="2304" flags="l">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
             <check card="1" diag="0|0||map:get">
              <varRef name="pendingUpdates" slot="2"/>
             </check>
             <varRef name="updatedPath" slot="3"/>
            </ifCall>
           </valueOf>
           <true/>
           <valueOf line="2313" flags="l">
            <fn name="normalize-space">
             <fn name="string-join">
              <data>
               <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
              </data>
              <str val=""/>
             </fn>
            </fn>
           </valueOf>
          </choose>
          <forEachGroup line="2318" algorithm="by">
           <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           <fn role="key" name="local-name">
            <dot type="element()"/>
           </fn>
           <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
           <let role="content" line="2320" var="updatedChildPath" as="xs:string" slot="5" eval="8">
            <fn name="concat">
             <varRef name="updatedPath" slot="3"/>
             <str val="/"/>
             <check card="?" diag="0|2||fn:concat">
              <currentGroupingKey/>
             </check>
            </fn>
            <let line="2325" var="vv:v0" as="xs:string" slot="6" eval="13">
             <fn name="concat">
              <varRef name="updatedChildPath" slot="5"/>
              <str val="["/>
             </fn>
             <let var="dataRefWithFilter" as="element()*" slot="7" eval="8">
              <filter flags="b">
               <slash simple="1">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <fn name="starts-with">
                <cvUntyped to="xs:string">
                 <attVal name="Q{}data-ref" chk="0"/>
                </cvUntyped>
                <varRef name="vv:v0" slot="6"/>
               </fn>
              </filter>
              <choose line="2328">
               <or op="or">
                <fn name="exists">
                 <tail start="2">
                  <currentGroup/>
                 </tail>
                </fn>
                <fn name="exists">
                 <varRef name="dataRefWithFilter" slot="7"/>
                </fn>
               </or>
               <let line="2331" var="vv:v1" as="xs:string" slot="8" eval="13">
                <fn name="concat">
                 <varRef name="updatedPath" slot="3"/>
                 <str val="/"/>
                </fn>
                <forEach line="2329">
                 <currentGroup/>
                 <applyT line="2330" mode="Q{}form-check" bSlot="2">
                  <dot role="select"/>
                  <withParam name="Q{}curPath" as="xs:string">
                   <varRef line="2331" name="vv:v1" slot="8"/>
                  </withParam>
                  <withParam name="Q{}position" as="xs:integer">
                   <fn line="2332" name="position"/>
                  </withParam>
                 </applyT>
                </forEach>
               </let>
               <true/>
               <let line="2340" var="vv:v2" as="xs:string" slot="9" eval="13">
                <fn name="concat">
                 <varRef name="updatedPath" slot="3"/>
                 <str val="/"/>
                </fn>
                <forEach line="2338">
                 <currentGroup/>
                 <applyT line="2339" mode="Q{}form-check" bSlot="3">
                  <dot role="select"/>
                  <withParam name="Q{}curPath" as="xs:string">
                   <varRef line="2340" name="vv:v2" slot="9"/>
                  </withParam>
                 </applyT>
                </forEach>
               </let>
              </choose>
             </let>
            </let>
           </let>
          </forEachGroup>
         </sequence>
        </let>
       </sequence>
      </copy>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="4" flags="s" line="2478" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2479">
     <param name="Q{}curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="2480" name="Q{}pendingUpdates" slot="1" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <let line="2481" var="updatedPath" as="xs:string" slot="2" eval="8">
      <fn name="concat">
       <atomSing card="?" diag="0|0||fn:concat">
        <varRef name="curPath" slot="0"/>
       </atomSing>
       <str val="@"/>
       <fn name="local-name">
        <dot type="attribute()"/>
       </fn>
      </fn>
      <let line="2490" var="associated-form-control" as="node()*" slot="3" eval="8">
       <slash>
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
        <fn name="key">
         <str val="Q{http://saxon.sf.net/}kk102"/>
         <varRef name="updatedPath" slot="2"/>
         <dot type="document-node()"/>
        </fn>
       </slash>
       <choose line="2493">
        <fn name="exists">
         <varRef name="associated-form-control" slot="3"/>
        </fn>
        <compAtt line="2496">
         <fn role="name" name="local-name">
          <dot type="attribute()"/>
         </fn>
         <fn role="select" line="2497" name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <mergeAdj>
             <applyT mode="Q{}get-field" bSlot="4">
              <varRef role="select" name="associated-form-control" slot="3"/>
             </applyT>
            </mergeAdj>
           </data>
          </convert>
          <str val=""/>
         </fn>
        </compAtt>
        <and line="2500" op="and">
         <fn name="exists">
          <varRef name="pendingUpdates" slot="1"/>
         </fn>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <check card="1" diag="0|0||map:contains">
           <varRef name="pendingUpdates" slot="1"/>
          </check>
          <varRef name="updatedPath" slot="2"/>
         </ifCall>
        </and>
        <compAtt line="2501">
         <fn role="name" name="local-name">
          <dot type="attribute()"/>
         </fn>
         <ifCall role="select" line="2502" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <check card="1" diag="0|0||map:get">
           <varRef name="pendingUpdates" slot="1"/>
          </check>
          <varRef name="updatedPath" slot="2"/>
         </ifCall>
        </compAtt>
        <true/>
        <forEach line="2506">
         <dot type="attribute()"/>
         <copy flags="cin">
          <empty role="content"/>
         </copy>
        </forEach>
       </choose>
      </let>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="14" binds="12">
  <mode name="Q{}form-check-initial" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="2227" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2228">
     <param name="Q{}instance-id" slot="0" as="xs:string">
      <str role="select" val="saxon-forms-default"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
       <check card="1" diag="8|0|XTTE0590|instance-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="2229" name="Q{}pendingUpdates" slot="1" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <copy line="2247" flags="cin">
      <applyT role="content" mode="Q{}form-check" bSlot="0">
       <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       <withParam name="Q{}curPath" as="xs:string">
        <choose line="2237">
         <vc op="eq" onEmpty="0" comp="CCC">
          <varRef name="instance-id" slot="0"/>
          <str val="saxon-forms-default"/>
         </vc>
         <str val=""/>
         <true/>
         <cvUntyped line="2241" to="xs:string">
          <cast as="xs:untypedAtomic" emptiable="0">
           <fn name="concat">
            <str val="instance('"/>
            <varRef name="instance-id" slot="0"/>
            <str val="')/"/>
           </fn>
          </cast>
         </cvUntyped>
        </choose>
       </withParam>
      </applyT>
     </copy>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="15" binds="">
  <template name="Q{}action-reset" flags="os" line="3918" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3919">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="3921">
     <valueOf role="select">
      <str val="[action-reset] Reset triggered!"/>
     </valueOf>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="16" binds="16">
  <mode name="Q{}update-ref" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="2" flags="s" line="1683" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1684">
     <param name="Q{}path" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|path">
       <check card="1" diag="8|0|XTTE0590|path">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1685" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <copy line="1688" flags="cin">
      <applyT role="content" mode="Q{}update-ref" bSlot="0">
       <sequence role="select">
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </sequence>
       <withParam name="Q{}path" as="xs:string">
        <varRef line="1689" name="path" slot="0"/>
       </withParam>
       <withParam name="Q{}position">
        <varRef line="1690" name="position" slot="1"/>
       </withParam>
      </applyT>
     </copy>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="3" flags="s" line="1664" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1665">
     <param name="Q{}path" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|path">
       <check card="1" diag="8|0|XTTE0590|path">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1666" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <let line="1668" var="path-updated" as="xs:string" slot="2" eval="7">
      <choose>
       <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="position" slot="1"/>
        </data>
        <int val="0"/>
       </gc>
       <fn name="concat">
        <varRef name="path" slot="0"/>
        <str val="["/>
        <atomSing card="?" diag="0|2||fn:concat">
         <varRef name="position" slot="1"/>
        </atomSing>
        <str val="]"/>
       </fn>
       <true/>
       <varRef name="path" slot="0"/>
      </choose>
      <choose line="1672">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="substring">
         <cvUntyped to="xs:string">
          <data>
           <dot type="attribute()"/>
          </data>
         </cvUntyped>
         <int val="1"/>
         <fn line="1669" name="string-length">
          <varRef name="path" slot="0"/>
         </fn>
        </fn>
        <varRef name="path" slot="0"/>
       </vc>
       <compAtt line="1673">
        <fn role="name" line="1667" name="name">
         <dot type="attribute()"/>
        </fn>
        <convert role="select" line="1674" from="xs:untypedAtomic" to="xs:string">
         <cast as="xs:untypedAtomic" emptiable="0">
          <fn name="concat">
           <varRef name="path-updated" slot="2"/>
           <fn name="substring">
            <cvUntyped to="xs:string">
             <data>
              <dot type="attribute()"/>
             </data>
            </cvUntyped>
            <arith op="+" calc="i+i">
             <fn name="string-length">
              <varRef name="path-updated" slot="2"/>
             </fn>
             <int val="1"/>
            </arith>
           </fn>
          </fn>
         </cast>
        </convert>
       </compAtt>
       <true/>
       <copyOf line="1678" flags="vc">
        <dot type="attribute()"/>
       </copyOf>
      </choose>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="2.0" seq="0" rank="1" minImp="0" slots="3" flags="s" line="1650" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute(Q{}data-action)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name==='data-action'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1651">
     <param name="Q{}path" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|path">
       <check card="1" diag="8|0|XTTE0590|path">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1652" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <let line="1654" var="myid" as="xs:string" slot="2" eval="8">
      <fn name="concat">
       <fn name="generate-id">
        <dot type="attribute(Q{}data-action)"/>
       </fn>
       <atomSing card="?" diag="0|1||fn:concat">
        <varRef name="position" slot="1"/>
       </atomSing>
      </fn>
      <sequence line="1656">
       <att name="data-old-action">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="attribute(Q{}data-action)"/>
         </data>
        </convert>
       </att>
       <att line="1659" name="data-action">
        <convert from="xs:untypedAtomic" to="xs:string">
         <cast as="xs:untypedAtomic" emptiable="0">
          <choose>
           <fn name="exists">
            <slash>
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
             <fn name="key">
              <str val="Q{http://saxon.sf.net/}kk101"/>
              <varRef name="myid" slot="2"/>
              <dot type="document-node()"/>
             </fn>
            </slash>
           </fn>
           <fn name="concat">
            <fn name="generate-id">
             <dot type="attribute(Q{}data-action)"/>
            </fn>
            <fn name="generate-id">
             <dot type="attribute(Q{}data-action)"/>
            </fn>
           </fn>
           <true/>
           <varRef name="myid" slot="2"/>
          </choose>
         </cast>
        </convert>
       </att>
      </sequence>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="17" binds="14 3 2 6 18 19 20">
  <template name="Q{}xforms-value-changed" flags="os" line="3436" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3437">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="3439" var="refi" as="attribute(Q{}data-ref)?" slot="1" eval="8">
     <slash simple="1">
      <varRef name="form-control" slot="0"/>
      <axis name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
     </slash>
     <let line="3443" var="actions" as="item()?" slot="2" eval="8">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getAction"/>
       <arrayBlock>
        <fn name="string">
         <slash simple="1">
          <varRef name="form-control" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
         </slash>
        </fn>
       </arrayBlock>
      </ifCall>
      <let line="3447" var="updatedInstanceXML" as="element()" slot="3" eval="7">
       <treat line="3448" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
        <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
         <applyT mode="Q{}form-check-initial" bSlot="0">
          <check role="select" line="3446" card="1" diag="3|0|XTTE0570|instanceXML">
           <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="1" eval="7">
            <check card="1" diag="0|0||xforms:getInstance-JS">
             <cvUntyped to="xs:string">
              <data>
               <varRef name="refi" slot="1"/>
              </data>
             </cvUntyped>
            </check>
           </ufCall>
          </check>
          <withParam name="Q{}instance-id" as="xs:string">
           <ufCall line="3442" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="2" eval="7">
            <check card="1" diag="0|0||xforms:getInstanceId">
             <cvUntyped to="xs:string">
              <data>
               <varRef name="refi" slot="1"/>
              </data>
             </cvUntyped>
            </check>
           </ufCall>
          </withParam>
         </applyT>
        </check>
       </treat>
       <sequence line="3454">
        <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="3" eval="7 6">
         <check card="1" diag="0|0||xforms:setInstance-JS">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="refi" slot="1"/>
           </data>
          </cvUntyped>
         </check>
         <varRef name="updatedInstanceXML" slot="3"/>
        </ufCall>
        <ifCall line="3461" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setPendingUpdates"/>
         <arrayBlock>
          <treat line="3458" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||pendingInstanceUpdates">
           <map size="0"/>
          </treat>
         </arrayBlock>
        </ifCall>
        <ifCall line="3462" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setUpdates"/>
         <arrayBlock>
          <treat line="3459" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||instanceUpdates">
           <map size="0"/>
          </treat>
         </arrayBlock>
        </ifCall>
        <forEach line="3464">
         <varRef name="actions" slot="2"/>
         <let line="3465" var="action-map" as="item()" slot="4" eval="7">
          <dot/>
          <choose line="3467">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:contains">
             <varRef name="action-map" slot="4"/>
            </treat>
            <str val="@event"/>
           </ifCall>
           <choose line="3468">
            <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:get">
                <varRef name="action-map" slot="4"/>
               </treat>
               <str val="@event"/>
              </ifCall>
             </data>
             <str val="xforms-value-changed"/>
            </gc>
            <callT line="3470" name="applyActions" bSlot="4">
             <withParam name="Q{}action-map" flags="t" as="item()">
              <varRef line="3471" name="action-map" slot="4"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string">
              <check line="3472" card="1" diag="8|0|XTTE0590|nodeset">
               <cvUntyped to="xs:string">
                <data>
                 <varRef name="refi" slot="1"/>
                </data>
               </cvUntyped>
              </check>
             </withParam>
             <withParam name="Q{}instanceXML" flags="t" as="element()">
              <varRef line="3473" name="updatedInstanceXML" slot="3"/>
             </withParam>
            </callT>
           </choose>
          </choose>
         </let>
        </forEach>
        <callT line="3479" name="xforms-recalculate" bSlot="5"/>
        <ufCall line="3481" name="Q{http://www.w3.org/2002/xforms}checkRelevantFields" tailCall="false" bSlot="6" eval="4">
         <check card="1" diag="0|0||xforms:checkRelevantFields">
          <cvUntyped to="xs:string">
           <data>
            <slash line="3440" simple="1">
             <varRef name="form-control" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}data-element)" jsTest="return item.name==='data-element'"/>
            </slash>
           </data>
          </cvUntyped>
         </check>
        </ufCall>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="21" binds="22 23 23">
  <template name="Q{}getReferencedInstanceField" flags="os" line="2902" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2903">
    <param name="Q{}refi" slot="0" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|refi">
      <check card="1" diag="8|0|XTTE0590|refi">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="2905" var="field" as="node()*" slot="1" eval="8">
     <choose line="2907">
      <varRef name="refi" slot="0"/>
      <let line="2908" var="instance-map" as="map(xs:string, xs:string)" slot="2" eval="7">
       <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
        <varRef name="refi" slot="0"/>
       </ufCall>
       <let line="2915" var="this-instance" as="element()?" slot="3" eval="9">
        <callT line="2916" name="getInstance" bSlot="1">
         <withParam name="Q{}instance-id" flags="c" as="xs:string">
          <check line="2917" card="1" diag="8|0|XTTE0590|instance-id">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="instance-map" slot="2"/>
            <str val="instance-id"/>
           </ifCall>
          </check>
         </withParam>
        </callT>
        <treat line="2921" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|field">
         <evaluate dxns="">
          <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="instance-map" slot="2"/>
            <str val="xpath"/>
           </ifCall>
          </check>
          <varRef role="cxt" name="this-instance" slot="3"/>
          <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
           <varRef name="this-instance" slot="3"/>
          </check>
          <str role="sa" val="no"/>
          <map role="wp" size="0"/>
         </evaluate>
        </treat>
       </let>
      </let>
      <true/>
      <let line="2926" var="default-instance" as="element()?" slot="4" eval="9">
       <callT line="2927" name="getInstance" bSlot="2">
        <withParam name="Q{}instance-id" flags="c" as="xs:string">
         <str val="saxon-forms-default"/>
        </withParam>
       </callT>
       <varRef line="2931" name="default-instance" slot="4"/>
      </let>
     </choose>
     <varRef line="2936" name="field" slot="1"/>
    </let>
   </sequence>
  </template>
 </co>
 <co id="24" binds="">
  <template name="Q{}action-message" flags="os" line="3902" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3903">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="3907">
     <sequence role="select">
      <valueOf>
       <str val="[action-message] Message reads &#34;"/>
      </valueOf>
      <valueOf>
       <treat line="3905" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|message-value">
        <check card="1" diag="3|0|XTTE0570|message-value">
         <cvUntyped to="xs:string">
          <data>
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="action-map" slot="0"/>
            <str val="value"/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </valueOf>
      <valueOf flags="S">
       <str val="&#34;"/>
      </valueOf>
     </sequence>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="1" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" line="666" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:string" slots="5">
   <arg name="base" as="xs:string"/>
   <arg name="relative" as="xs:string"/>
   <choose role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="671">
    <fn name="starts-with">
     <varRef name="relative" slot="1"/>
     <str val="/"/>
    </fn>
    <varRef line="672" name="relative" slot="1"/>
    <fn line="674" name="starts-with">
     <varRef name="relative" slot="1"/>
     <str val="instance("/>
    </fn>
    <varRef line="675" name="relative" slot="1"/>
    <fn line="677" name="not">
     <varRef name="base" slot="0"/>
    </fn>
    <varRef line="678" name="relative" slot="1"/>
    <fn line="680" name="not">
     <varRef name="relative" slot="1"/>
    </fn>
    <varRef line="681" name="base" slot="0"/>
    <true/>
    <let line="685" var="parentCallCount" as="xs:integer" slot="2" eval="7">
     <choose>
      <fn name="contains">
       <varRef name="relative" slot="1"/>
       <str val="/"/>
      </fn>
      <fn name="count">
       <filter flags="b">
        <fn name="tokenize">
         <varRef name="relative" slot="1"/>
         <str val="/"/>
         <str val=""/>
        </fn>
        <vc op="eq" comp="CCC">
         <dot type="xs:string"/>
         <str val=".."/>
        </vc>
       </filter>
      </fn>
      <fn name="contains">
       <varRef name="relative" slot="1"/>
       <str val=".."/>
      </fn>
      <int val="1"/>
      <true/>
      <int val="0"/>
     </choose>
     <let line="688" var="slashes" as="xs:integer*" slot="3" eval="3">
      <choose>
       <fn name="contains">
        <varRef name="base" slot="0"/>
        <str val="/"/>
       </fn>
       <fn name="index-of">
        <fn name="string-to-codepoints">
         <varRef name="base" slot="0"/>
        </fn>
        <int val="47"/>
       </fn>
       <true/>
       <int val="0"/>
      </choose>
      <choose line="720">
       <compareToInt op="gt" val="0">
        <varRef name="parentCallCount" slot="2"/>
       </compareToInt>
       <fn line="724" name="concat">
        <fn name="substring">
         <varRef name="base" slot="0"/>
         <int val="1"/>
         <choose line="699">
          <and op="and">
           <vc op="ge" onEmpty="0" comp="CAVC">
            <fn name="count">
             <varRef name="slashes" slot="3"/>
            </fn>
            <varRef name="parentCallCount" slot="2"/>
           </vc>
           <compareToInt op="gt" val="0">
            <varRef name="parentCallCount" slot="2"/>
           </compareToInt>
          </and>
          <let line="700" var="vv:v0" as="xs:integer" slot="4" eval="13">
           <arith op="-" calc="i-i">
            <varRef name="parentCallCount" slot="2"/>
            <int val="1"/>
           </arith>
           <check card="1" diag="3|0|XTTE0570|parentSlash">
            <filter flags="p">
             <varRef name="slashes" slot="3"/>
             <arith op="-" calc="i-i">
              <fn name="last"/>
              <varRef name="vv:v0" slot="4"/>
             </arith>
            </filter>
           </check>
          </let>
          <true/>
          <check line="703" card="1" diag="3|0|XTTE0570|parentSlash">
           <lastOf>
            <varRef name="slashes" slot="3"/>
           </lastOf>
          </check>
         </choose>
        </fn>
        <fn name="replace">
         <varRef name="relative" slot="1"/>
         <str val="\.\./"/>
         <str val=""/>
         <str val=""/>
        </fn>
       </fn>
       <true/>
       <fn line="727" name="concat">
        <varRef name="base" slot="0"/>
        <str val="/"/>
        <varRef name="relative" slot="1"/>
       </fn>
      </choose>
     </let>
    </let>
   </choose>
  </function>
 </co>
 <co id="25" binds="">
  <function name="Q{http://saxonica.com/ns/forms-local}current-date" line="103" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:string" slots="0">
   <treat role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="104" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|today">
    <check card="1" diag="3|0|XTTE0570|today">
     <cvUntyped to="xs:string">
      <data>
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getCurrentDate"/>
        <arrayBlock/>
       </ifCall>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </function>
 </co>
 <co id="26" binds="1 2 4 4 27 14 3 6 28">
  <template name="Q{}action-setvalue" flags="os" line="3683" module="saxon-xforms.xsl" slots="10">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3684">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3685" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="3686" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3690" var="refz" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="3692" var="instance-id" as="xs:string" slot="4" eval="7">
      <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
       <varRef name="refz" slot="3"/>
      </ufCall>
      <let line="3705" var="valuez" as="document-node()" slot="5" eval="7">
       <doc line="3707" validation="preserve">
        <choose>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <varRef name="action-map" slot="0"/>
          <str val="@value"/>
         </ifCall>
         <let line="3708" var="contexti" as="node()" slot="6" eval="8">
          <evaluate line="3709" as="node()" dxns="">
           <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="2" eval="6">
            <varRef name="nodeset" slot="2"/>
           </ufCall>
           <varRef role="cxt" name="instanceXML" slot="1"/>
           <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
            <varRef name="instanceXML" slot="1"/>
           </check>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
          <evaluate line="3712" dxns="">
           <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="7">
            <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:impose">
             <check card="1" diag="0|0||xforms:impose">
              <cvUntyped to="xs:string">
               <data>
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="action-map" slot="0"/>
                 <str val="@value"/>
                </ifCall>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </ufCall>
           <varRef role="cxt" name="contexti" slot="6"/>
           <varRef role="nsCxt" name="contexti" slot="6"/>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
         </let>
         <ifCall line="3715" name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:contains">
           <dot flags="a"/>
          </treat>
          <str val="value"/>
         </ifCall>
         <ifCall line="3716" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="action-map" slot="0"/>
          <str val="value"/>
         </ifCall>
         <true/>
         <str val=""/>
        </choose>
       </doc>
       <sequence line="3726">
        <choose>
         <fn name="exists">
          <varRef name="refz" slot="3"/>
         </fn>
         <let line="3728" var="associated-form-control" as="node()?" slot="7" eval="7">
          <check card="?" diag="3|0|XTTE0570|associated-form-control">
           <slash>
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            <fn name="key">
             <str val="Q{http://saxon.sf.net/}kk102"/>
             <varRef name="refz" slot="3"/>
             <dot type="document-node()"/>
            </fn>
           </slash>
          </check>
          <choose line="3730">
           <fn name="exists">
            <varRef name="associated-form-control" slot="7"/>
           </fn>
           <sequence line="3731">
            <applyT mode="Q{}set-field" bSlot="4">
             <varRef role="select" name="associated-form-control" slot="7"/>
             <withParam name="Q{}value" flags="t" as="xs:string">
              <cast line="3732" as="xs:string" emptiable="0">
               <data>
                <varRef name="valuez" slot="5"/>
               </data>
              </cast>
             </withParam>
            </applyT>
            <ifCall line="3734" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="setUpdates"/>
             <arrayBlock>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}put" type="map(*)">
               <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:put">
                <check card="1" diag="0|0||map:put">
                 <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="getUpdates"/>
                  <arrayBlock/>
                 </ifCall>
                </check>
               </treat>
               <varRef name="refz" slot="3"/>
               <cast as="xs:string" emptiable="0">
                <data>
                 <varRef name="valuez" slot="5"/>
                </data>
               </cast>
              </ifCall>
             </arrayBlock>
            </ifCall>
           </sequence>
           <true/>
           <ifCall line="3737" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="setPendingUpdates"/>
            <arrayBlock>
             <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}put" type="map(*)">
              <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:put">
               <check card="1" diag="0|0||map:put">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                 <check card="1" diag="0|0||ixsl:call">
                  <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                 </check>
                 <str val="getPendingUpdates"/>
                 <arrayBlock/>
                </ifCall>
               </check>
              </treat>
              <varRef name="refz" slot="3"/>
              <cast as="xs:string" emptiable="0">
               <data>
                <varRef name="valuez" slot="5"/>
               </data>
              </cast>
             </ifCall>
            </arrayBlock>
           </ifCall>
          </choose>
         </let>
        </choose>
        <choose line="3743">
         <and op="and">
          <fn name="exists">
           <varRef name="refz" slot="3"/>
          </fn>
          <vc op="ne" onEmpty="1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <varRef name="refz" slot="3"/>
           <str val=""/>
          </vc>
         </and>
         <let line="3745" var="pendingUpdates" as="map(xs:string, xs:string)?" slot="8" eval="7">
          <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|pendingUpdates">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="getPendingUpdates"/>
            <arrayBlock/>
           </ifCall>
          </treat>
          <let line="3747" var="updatedInstanceXML" as="element()" slot="9" eval="7">
           <treat line="3748" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
            <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
             <applyT mode="Q{}form-check-initial" bSlot="5">
              <choose role="select" line="3696">
               <and op="and">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <varRef name="instance-id" slot="4"/>
                 <str val="saxon-forms-default"/>
                </vc>
                <fn name="exists">
                 <varRef name="instanceXML" slot="1"/>
                </fn>
               </and>
               <check line="3697" card="1" diag="3|0|XTTE0570|instanceXML2">
                <varRef name="instanceXML" slot="1"/>
               </check>
               <true/>
               <check line="3700" card="1" diag="3|0|XTTE0570|instanceXML2">
                <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="6" eval="6">
                 <varRef name="refz" slot="3"/>
                </ufCall>
               </check>
              </choose>
              <withParam name="Q{}instance-id" as="xs:string">
               <varRef line="3749" name="instance-id" slot="4"/>
              </withParam>
              <withParam name="Q{}pendingUpdates" flags="t" as="map(xs:string, xs:string)?">
               <varRef line="3750" name="pendingUpdates" slot="8"/>
              </withParam>
             </applyT>
            </check>
           </treat>
           <sequence line="3755">
            <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="7" eval="6 6">
             <varRef name="refz" slot="3"/>
             <varRef name="updatedInstanceXML" slot="9"/>
            </ufCall>
            <callT line="3756" name="refreshOutputs-JS" bSlot="8" flags="t"/>
           </sequence>
          </let>
         </let>
        </choose>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="29" binds="">
  <globalVariable name="Q{}default-submission-id" type="xs:string" line="65" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="saxon-forms-default-submission"/>
  </globalVariable>
 </co>
 <co id="18" binds="2 3 4 26 0 8 24 30">
  <template name="Q{}applyActions" flags="os" line="3036" module="saxon-xforms.xsl" slots="11">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3037">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3038" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="3039" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3041" var="ref" as="xs:string?" slot="3" eval="7">
     <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|ref">
      <check card="?" diag="3|0|XTTE0570|ref">
       <cvUntyped to="xs:string">
        <data>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="action-map" slot="0"/>
          <str val="@ref"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line="3042" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3055" var="ref-qualified" as="xs:string?" slot="5" eval="7">
       <choose>
        <fn name="exists">
         <varRef name="ref" slot="3"/>
        </fn>
        <choose>
         <fn name="exists">
          <varRef name="at" slot="4"/>
         </fn>
         <fn name="concat">
          <varRef name="ref" slot="3"/>
          <str val="["/>
          <varRef name="at" slot="4"/>
          <str val="]"/>
         </fn>
         <true/>
         <varRef name="ref" slot="3"/>
        </choose>
       </choose>
       <let line="3059" var="instanceXML2" as="element()" slot="6" eval="7">
        <choose line="3061">
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <ufCall line="3057" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="0" eval="7">
            <check card="1" diag="0|0||xforms:getInstanceId">
             <varRef name="ref" slot="3"/>
            </check>
           </ufCall>
           <str val="saxon-forms-default"/>
          </vc>
          <fn name="exists">
           <varRef name="instanceXML" slot="1"/>
          </fn>
         </and>
         <check line="3062" card="1" diag="3|0|XTTE0570|instanceXML2">
          <varRef name="instanceXML" slot="1"/>
         </check>
         <true/>
         <check line="3065" card="1" diag="3|0|XTTE0570|instanceXML2">
          <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="1" eval="7">
           <check card="1" diag="0|0||xforms:getInstance-JS">
            <varRef name="ref-qualified" slot="5"/>
           </check>
          </ufCall>
         </check>
        </choose>
        <sequence line="3070">
         <message>
          <sequence role="select">
           <valueOf>
            <str val="[applyActions] evaluating action = "/>
           </valueOf>
           <valueOf>
            <fn name="serialize">
             <varRef name="action-map" slot="0"/>
            </fn>
           </valueOf>
          </sequence>
          <str role="terminate" val="no"/>
          <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
         </message>
         <let line="3072" var="context" as="node()?" slot="7" eval="7">
          <choose line="3074">
           <and op="and">
            <and op="and">
             <fn name="exists">
              <varRef name="ref-qualified" slot="5"/>
             </fn>
             <fn name="not">
              <gc op="=" card="1:1" comp="CCC">
               <varRef name="ref-qualified" slot="5"/>
               <str val=""/>
              </gc>
             </fn>
            </and>
            <fn name="exists">
             <varRef name="instanceXML2" slot="6"/>
            </fn>
           </and>
           <treat line="3075" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|context">
            <check card="?" diag="3|0|XTTE0570|context">
             <evaluate dxns="">
              <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="2" eval="7">
               <check card="1" diag="0|0||xforms:impose">
                <varRef name="ref-qualified" slot="5"/>
               </check>
              </ufCall>
              <varRef role="cxt" name="instanceXML2" slot="6"/>
              <varRef role="nsCxt" name="instanceXML2" slot="6"/>
              <str role="sa" val="no"/>
              <map role="wp" size="0"/>
             </evaluate>
            </check>
           </treat>
          </choose>
          <let line="3082" var="ifVar" as="xs:string?" slot="8" eval="7">
           <choose line="628">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
             <varRef line="3082" name="action-map" slot="0"/>
             <str val="@if"/>
            </ifCall>
            <treat line="629" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
             <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
              <cvUntyped to="xs:string">
               <data>
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef line="3082" name="action-map" slot="0"/>
                 <str val="@if"/>
                </ifCall>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </choose>
           <let line="3086" var="ifExecuted" as="xs:boolean" slot="9" eval="7">
            <choose line="3088">
             <and op="and">
              <fn name="exists">
               <varRef name="ifVar" slot="8"/>
              </fn>
              <fn name="exists">
               <varRef name="context" slot="7"/>
              </fn>
             </and>
             <treat line="3089" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|ifExecuted">
              <check card="1" diag="3|0|XTTE0570|ifExecuted">
               <cvUntyped to="xs:boolean">
                <data>
                 <evaluate dxns="">
                  <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
                   <varRef name="ifVar" slot="8"/>
                  </check>
                  <varRef role="cxt" name="context" slot="7"/>
                  <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
                   <varRef name="context" slot="7"/>
                  </check>
                  <str role="sa" val="no"/>
                  <map role="wp" size="0"/>
                 </evaluate>
                </data>
               </cvUntyped>
              </check>
             </treat>
             <true/>
             <true/>
            </choose>
            <choose line="3097">
             <varRef name="ifExecuted" slot="9"/>
             <let line="3098" var="action-name" as="xs:string" slot="10" eval="7">
              <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|action-name">
               <check card="1" diag="3|0|XTTE0570|action-name">
                <cvUntyped to="xs:string">
                 <data>
                  <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                   <varRef name="action-map" slot="0"/>
                   <str val="name"/>
                  </ifCall>
                 </data>
                </cvUntyped>
               </check>
              </treat>
              <sequence line="3101">
               <choose>
                <vc op="eq" onEmpty="0" comp="CCC">
                 <varRef name="action-name" slot="10"/>
                 <str val="setvalue"/>
                </vc>
                <callT line="3102" name="action-setvalue" bSlot="3">
                 <withParam name="Q{}nodeset" flags="t" as="xs:string">
                  <check line="3103" card="1" diag="8|0|XTTE0590|nodeset">
                   <varRef name="ref" slot="3"/>
                  </check>
                 </withParam>
                 <withParam name="Q{}instanceXML" flags="t" as="element()">
                  <varRef line="3104" name="instanceXML2" slot="6"/>
                 </withParam>
                </callT>
                <vc line="3107" op="eq" onEmpty="0" comp="CCC">
                 <varRef name="action-name" slot="10"/>
                 <str val="insert"/>
                </vc>
                <callT line="3108" name="action-insert" bSlot="4">
                 <withParam name="Q{}nodeset" flags="t" as="xs:string">
                  <check line="3109" card="1" diag="8|0|XTTE0590|nodeset">
                   <varRef name="ref-qualified" slot="5"/>
                  </check>
                 </withParam>
                 <withParam name="Q{}instanceXML" flags="t" as="element()">
                  <varRef line="3110" name="instanceXML2" slot="6"/>
                 </withParam>
                </callT>
                <vc line="3113" op="eq" onEmpty="0" comp="CCC">
                 <varRef name="action-name" slot="10"/>
                 <str val="delete"/>
                </vc>
                <callT line="3114" name="action-delete" bSlot="5">
                 <withParam name="Q{}nodeset" flags="t" as="xs:string">
                  <check line="3115" card="1" diag="8|0|XTTE0590|nodeset">
                   <varRef name="ref-qualified" slot="5"/>
                  </check>
                 </withParam>
                 <withParam name="Q{}instanceXML" flags="t" as="element()">
                  <varRef line="3116" name="instanceXML2" slot="6"/>
                 </withParam>
                </callT>
                <vc line="3119" op="eq" onEmpty="0" comp="CCC">
                 <varRef name="action-name" slot="10"/>
                 <str val="message"/>
                </vc>
                <callT line="3120" name="action-message" bSlot="6"/>
                <true/>
                <message line="3123">
                 <sequence role="select">
                  <valueOf>
                   <str val="[applyActions] action '"/>
                  </valueOf>
                  <valueOf>
                   <varRef name="action-name" slot="10"/>
                  </valueOf>
                  <valueOf>
                   <str val="' not yet handled!"/>
                  </valueOf>
                 </sequence>
                 <str role="terminate" val="no"/>
                 <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
                </message>
               </choose>
               <forEach line="3127">
                <literal count="15">
                 <str val="setvalue"/>
                 <str val="insert"/>
                 <str val="delete"/>
                 <str val="setindex"/>
                 <str val="toggle"/>
                 <str val="setfocus"/>
                 <str val="dispatch"/>
                 <str val="rebuild"/>
                 <str val="recalculate"/>
                 <str val="revalidate"/>
                 <str val="refresh"/>
                 <str val="reset"/>
                 <str val="load"/>
                 <str val="send"/>
                 <str val="message"/>
                </literal>
                <choose line="3128">
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
                  <varRef name="action-map" slot="0"/>
                  <dot type="xs:string"/>
                 </ifCall>
                 <callT line="3129" name="applyNestedActions" bSlot="7">
                  <withParam name="Q{}action-name" flags="c" as="xs:string">
                   <dot line="3130" type="xs:string"/>
                  </withParam>
                 </callT>
                </choose>
               </forEach>
              </sequence>
             </let>
            </choose>
           </let>
          </let>
         </let>
        </sequence>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="5" binds="5">
  <mode name="Q{}insert-node" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="1599" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1600">
     <param name="Q{}insert-node" slot="0" flags="ti" as="node()">
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|insert-node">
       <check card="1" diag="8|0|XTTE0590|insert-node">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="1601" name="Q{}position-relative" slot="1" flags="t" as="xs:string?">
      <str role="select" val="after"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position-relative">
       <check card="?" diag="8|0|XTTE0590|position-relative">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="1604">
      <and op="and">
       <is op="is">
        <dot type="element()"/>
        <varRef name="insert-node" slot="0"/>
       </is>
       <gc op="=" card="1:1" comp="CCC">
        <varRef name="position-relative" slot="1"/>
        <str val="before"/>
       </gc>
      </and>
      <sequence line="1605">
       <message>
        <sequence role="select">
         <valueOf>
          <str val="[insert-node mode] Found! "/>
         </valueOf>
         <valueOf>
          <fn name="serialize">
           <varRef name="insert-node" slot="0"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <copyOf line="1606" flags="vc">
        <varRef name="insert-node" slot="0"/>
       </copyOf>
      </sequence>
     </choose>
     <copy line="1609" flags="cin">
      <sequence role="content">
       <copyOf flags="vc">
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </copyOf>
       <applyT line="1610" mode="Q{}insert-node" bSlot="0">
        <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </applyT>
      </sequence>
     </copy>
     <choose line="1612">
      <and op="and">
       <is op="is">
        <dot type="element()"/>
        <varRef name="insert-node" slot="0"/>
       </is>
       <gc op="=" card="1:1" comp="CCC">
        <varRef name="position-relative" slot="1"/>
        <str val="after"/>
       </gc>
      </and>
      <copyOf line="1613" flags="vc">
       <varRef name="insert-node" slot="0"/>
      </copyOf>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="31" binds="32">
  <function name="Q{http://www.w3.org/2002/xforms}convert-json-to-xml" line="2152" module="saxon-xforms.xsl" eval="7" flags="pU" as="node()" slots="2">
   <arg name="jinstance" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2158" var="result" as="document-node()" slot="1" eval="7">
    <doc line="2160" validation="preserve">
     <applyT mode="Q{}jxml-xml" bSlot="0">
      <doc role="select" line="2155" validation="preserve">
       <fn name="json-to-xml">
        <varRef name="jinstance" slot="0"/>
       </fn>
      </doc>
     </applyT>
    </doc>
    <varRef line="2163" name="result" slot="1"/>
   </let>
  </function>
 </co>
 <co id="33" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}hasClass" line="2622" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:boolean" slots="2">
   <arg name="class" as="attribute(Q{}class)"/>
   <arg name="string" as="xs:string"/>
   <gc role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2625" op="=" card="N:1" comp="CCC">
    <fn name="tokenize">
     <cvUntyped to="xs:string">
      <data>
       <varRef name="class" slot="0"/>
      </data>
     </cvUntyped>
    </fn>
    <varRef line="2627" name="string" slot="1"/>
   </gc>
  </function>
 </co>
 <co id="34" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-instance-id" type="item()*" line="54" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="xforms-jinstance"/>
  </globalParam>
 </co>
 <co id="35" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getIfStatement" line="625" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:string?" slots="1">
   <arg name="map" as="map(*)"/>
   <choose role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="628">
    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
     <varRef name="map" slot="0"/>
     <str val="@if"/>
    </ifCall>
    <treat line="629" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="map" slot="0"/>
         <str val="@if"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </choose>
  </function>
 </co>
 <co id="36" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getClass" line="2641" module="saxon-xforms.xsl" eval="7" flags="pU" as="attribute(Q{}class)?" slots="3">
   <arg name="element" as="element()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2644" var="class" as="xs:string?" slot="1" eval="7">
    <choose line="2645">
     <fn name="exists">
      <slash simple="1">
       <varRef name="element" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
      </slash>
     </fn>
     <cvUntyped line="2646" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <slash simple="1">
           <varRef name="element" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
          </slash>
         </data>
        </convert>
       </fn>
      </cast>
     </cvUntyped>
    </choose>
    <let line="2649" var="class-mod" as="xs:string?" slot="2" eval="7">
     <choose line="2651">
      <fn name="exists">
       <slash simple="1">
        <varRef name="element" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
       </slash>
      </fn>
      <cvUntyped line="2652" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <sequence>
          <varRef name="class" slot="1"/>
          <str val="incremental"/>
         </sequence>
         <str val=" "/>
        </fn>
       </cast>
      </cvUntyped>
      <true/>
      <varRef line="2655" name="class" slot="1"/>
     </choose>
     <choose line="2659">
      <fn name="exists">
       <varRef name="class-mod" slot="2"/>
      </fn>
      <treat line="2660" as="attribute(Q{}class)" jsTest="return item.name==='class'" diag="5|0|XTTE0780|xforms:getClass">
       <att name="class">
        <varRef name="class-mod" slot="2"/>
       </att>
      </treat>
     </choose>
    </let>
   </let>
  </function>
 </co>
 <co id="28" binds="37 22 22 4">
  <template name="Q{}refreshOutputs-JS" flags="os" line="2944" module="saxon-xforms.xsl" slots="7">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2951" var="output-keys" as="item()?" slot="0" eval="8">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="getOutputKeys"/>
     <arrayBlock/>
    </ifCall>
    <forEach line="2953">
     <varRef name="output-keys" slot="0"/>
     <let line="2954" var="this-key" as="xs:string" slot="1" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|this-key">
       <check card="1" diag="3|0|XTTE0570|this-key">
        <cvUntyped to="xs:string">
         <data>
          <dot/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="2955" var="this-output" as="map(*)" slot="2" eval="7">
       <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|this-output">
        <check card="1" diag="3|0|XTTE0570|this-output">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
          <check card="1" diag="0|0||ixsl:call">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
          </check>
          <str val="getOutput"/>
          <arrayBlock>
           <varRef name="this-key" slot="1"/>
          </arrayBlock>
         </ifCall>
        </check>
       </treat>
       <let line="2986" var="contexti" as="element()?" slot="3" eval="7">
        <ufCall line="2987" name="Q{http://www.w3.org/2002/xforms}instance" tailCall="false" bSlot="0" eval="7">
         <check line="2974" card="1" diag="3|0|XTTE0570|this-instance-id">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <choose>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
             <varRef name="this-output" slot="2"/>
             <str val="@ref"/>
            </ifCall>
            <ufCall line="2976" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="1" eval="7">
             <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:getInstanceMap">
              <check card="1" diag="0|0||xforms:getInstanceMap">
               <cvUntyped to="xs:string">
                <data>
                 <ifCall line="2975" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="this-output" slot="2"/>
                  <str val="@ref"/>
                 </ifCall>
                </data>
               </cvUntyped>
              </check>
             </treat>
            </ufCall>
            <true/>
            <ufCall line="2979" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="2" eval="0">
             <str val="saxon-forms-default"/>
            </ufCall>
           </choose>
           <str val="instance-id"/>
          </ifCall>
         </check>
        </ufCall>
        <let line="2994" var="namespace-context-item" as="element()" slot="4" eval="7">
         <choose>
          <fn name="exists">
           <varRef name="contexti" slot="3"/>
          </fn>
          <check card="1" diag="3|0|XTTE0570|namespace-context-item">
           <varRef name="contexti" slot="3"/>
          </check>
          <true/>
          <treat as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|namespace-context-item">
           <check card="1" diag="3|0|XTTE0570|namespace-context-item">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="getXForm"/>
             <arrayBlock/>
            </ifCall>
           </check>
          </treat>
         </choose>
         <let line="2996" var="value" as="xs:string" slot="5" eval="7">
          <treat line="2997" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|value">
           <check card="1" diag="3|0|XTTE0570|value">
            <cvUntyped to="xs:string">
             <data>
              <evaluate dxns="">
               <ufCall role="xpath" line="2958" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="4">
                <choose>
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="this-output" slot="2"/>
                  <str val="@value"/>
                 </ifCall>
                 <treat line="2959" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|xpath">
                  <check card="1" diag="3|0|XTTE0570|xpath">
                   <cvUntyped to="xs:string">
                    <data>
                     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                      <varRef name="this-output" slot="2"/>
                      <str val="@value"/>
                     </ifCall>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <ifCall line="2961" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="this-output" slot="2"/>
                  <str val="@ref"/>
                 </ifCall>
                 <treat line="2962" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|xpath">
                  <check card="1" diag="3|0|XTTE0570|xpath">
                   <cvUntyped to="xs:string">
                    <data>
                     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                      <varRef name="this-output" slot="2"/>
                      <str val="@ref"/>
                     </ifCall>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <true/>
                 <str val=""/>
                </choose>
               </ufCall>
               <varRef role="cxt" name="contexti" slot="3"/>
               <varRef role="nsCxt" name="namespace-context-item" slot="4"/>
               <str role="sa" val="no"/>
               <map role="wp" size="0"/>
              </evaluate>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <let line="3000" var="associated-form-control" as="node()?" slot="6" eval="7">
           <check card="?" diag="3|0|XTTE0570|associated-form-control">
            <slash>
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
             <fn name="key">
              <str val="Q{http://saxon.sf.net/}kk103"/>
              <varRef name="this-key" slot="1"/>
              <dot type="document-node()"/>
             </fn>
            </slash>
           </check>
           <choose line="3003">
            <fn name="exists">
             <varRef name="associated-form-control" slot="6"/>
            </fn>
            <resultDoc line="3004" global="#&#xD;&#xA;#Fri Oct 19 10:15:24 BST 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Fri Oct 19 10:15:24 BST 2018&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
             <fn role="href" name="concat">
              <str val="#"/>
              <varRef name="this-key" slot="1"/>
             </fn>
             <valueOf role="content" line="3005">
              <varRef name="value" slot="5"/>
             </valueOf>
            </resultDoc>
           </choose>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </forEach>
   </let>
  </template>
 </co>
 <co id="20" binds="3">
  <function name="Q{http://www.w3.org/2002/xforms}checkRelevantFields" line="521" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="13">
   <arg name="refElement" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="524" var="pendingUpdatesi" as="map(xs:string, xs:string)?" slot="1" eval="7">
    <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|pendingUpdatesi">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
      <check card="1" diag="0|0||ixsl:call">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
      </check>
      <str val="getPendingUpdates"/>
      <arrayBlock/>
     </ifCall>
    </treat>
    <let line="527" var="updatesi" as="map(xs:string, xs:string)?" slot="2" eval="7">
     <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|updatesi">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getUpdates"/>
       <arrayBlock/>
      </ifCall>
     </treat>
     <let line="530" var="relevantMap" as="map(xs:string, xs:string)" slot="3" eval="7">
      <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|relevantMap">
       <check card="1" diag="3|0|XTTE0570|relevantMap">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="getRelevantMap"/>
         <arrayBlock/>
        </ifCall>
       </check>
      </treat>
      <let line="531" var="mapKeys" as="xs:anyAtomicType*" slot="4" eval="3">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
        <varRef name="relevantMap" slot="3"/>
       </ifCall>
       <sequence line="561">
        <forEach>
         <sequence line="534">
          <forEach>
           <varRef name="mapKeys" slot="4"/>
           <choose line="535">
            <fn name="matches">
             <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
              <varRef name="relevantMap" slot="3"/>
              <dot type="xs:anyAtomicType"/>
             </ifCall>
             <varRef name="refElement" slot="0"/>
             <str val=""/>
            </fn>
            <dot line="536" type="xs:anyAtomicType"/>
           </choose>
          </forEach>
          <forEach line="525">
           <choose>
            <fn name="exists">
             <varRef name="pendingUpdatesi" slot="1"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
             <check card="1" diag="0|0||map:keys">
              <varRef name="pendingUpdatesi" slot="1"/>
             </check>
            </ifCall>
           </choose>
           <let line="542" var="keyi" as="xs:string?" slot="5" eval="7">
            <lastOf>
             <fn name="tokenize">
              <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:tokenize">
               <cvUntyped to="xs:string">
                <dot type="xs:anyAtomicType"/>
               </cvUntyped>
              </treat>
              <str val="/"/>
              <str val=""/>
             </fn>
            </lastOf>
            <let line="544" var="vv:v0" as="xs:string" slot="6" eval="13">
             <check card="1" diag="0|1||fn:matches">
              <varRef name="keyi" slot="5"/>
             </check>
             <forEach line="543">
              <varRef name="mapKeys" slot="4"/>
              <choose line="544">
               <fn name="matches">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="relevantMap" slot="3"/>
                 <dot type="xs:anyAtomicType"/>
                </ifCall>
                <varRef name="vv:v0" slot="6"/>
                <str val=""/>
               </fn>
               <dot line="545" type="xs:anyAtomicType"/>
              </choose>
             </forEach>
            </let>
           </let>
          </forEach>
          <forEach line="528">
           <choose>
            <fn name="exists">
             <varRef name="updatesi" slot="2"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
             <check card="1" diag="0|0||map:keys">
              <varRef name="updatesi" slot="2"/>
             </check>
            </ifCall>
           </choose>
           <let line="551" var="keyi" as="xs:string?" slot="7" eval="7">
            <lastOf>
             <fn name="tokenize">
              <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:tokenize">
               <cvUntyped to="xs:string">
                <dot type="xs:anyAtomicType"/>
               </cvUntyped>
              </treat>
              <str val="/"/>
              <str val=""/>
             </fn>
            </lastOf>
            <let line="553" var="vv:v1" as="xs:string" slot="8" eval="13">
             <check card="1" diag="0|1||fn:matches">
              <varRef name="keyi" slot="7"/>
             </check>
             <forEach line="552">
              <varRef name="mapKeys" slot="4"/>
              <choose line="553">
               <fn name="matches">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="relevantMap" slot="3"/>
                 <dot type="xs:anyAtomicType"/>
                </ifCall>
                <varRef name="vv:v1" slot="8"/>
                <str val=""/>
               </fn>
               <dot line="554" type="xs:anyAtomicType"/>
              </choose>
             </forEach>
            </let>
           </let>
          </forEach>
         </sequence>
         <let line="562" var="keyi" as="xs:anyAtomicType" slot="9" eval="7">
          <dot type="xs:anyAtomicType"/>
          <let line="563" var="context" as="node()*" slot="10" eval="8">
           <slash>
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            <fn name="key">
             <str val="Q{http://saxon.sf.net/}kk102"/>
             <varRef name="keyi" slot="9"/>
             <dot type="document-node()"/>
            </fn>
           </slash>
           <let line="564" var="updatedInstanceXML4" as="element()?" slot="11" eval="7">
            <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
             <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:getInstance-JS">
              <cvUntyped to="xs:string">
               <varRef name="keyi" slot="9"/>
              </cvUntyped>
             </treat>
            </ufCall>
            <let line="566" var="relevantCheck" as="xs:boolean" slot="12" eval="7">
             <treat line="567" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantCheck">
              <check card="1" diag="3|0|XTTE0570|relevantCheck">
               <cvUntyped to="xs:boolean">
                <data>
                 <evaluate dxns="">
                  <fn role="xpath" name="concat">
                   <dot type="xs:anyAtomicType"/>
                   <str val="/"/>
                   <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                    <varRef name="relevantMap" slot="3"/>
                    <dot type="xs:anyAtomicType"/>
                   </ifCall>
                  </fn>
                  <varRef role="cxt" name="updatedInstanceXML4" slot="11"/>
                  <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
                   <varRef name="updatedInstanceXML4" slot="11"/>
                  </check>
                  <str role="sa" val="no"/>
                  <map role="wp" size="0"/>
                 </evaluate>
                </data>
               </cvUntyped>
              </check>
             </treat>
             <choose line="570">
              <varRef name="relevantCheck" slot="12"/>
              <ifCall line="573" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
               <str val="style.display"/>
               <str val="inline"/>
               <check card="1" diag="0|2||ixsl:set-property">
                <conditionalSort>
                 <fn name="exists">
                  <tail start="2">
                   <varRef name="context" slot="10"/>
                  </tail>
                 </fn>
                 <docOrder intra="1">
                  <slash>
                   <varRef name="context" slot="10"/>
                   <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
                  </slash>
                 </docOrder>
                </conditionalSort>
               </check>
              </ifCall>
              <true/>
              <ifCall line="576" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
               <str val="style.display"/>
               <str val="none"/>
               <check card="1" diag="0|2||ixsl:set-property">
                <conditionalSort>
                 <fn name="exists">
                  <tail start="2">
                   <varRef name="context" slot="10"/>
                  </tail>
                 </fn>
                 <docOrder intra="1">
                  <slash>
                   <varRef name="context" slot="10"/>
                   <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
                  </slash>
                 </docOrder>
                </conditionalSort>
               </check>
              </ifCall>
             </choose>
            </let>
           </let>
          </let>
         </let>
        </forEach>
        <ifCall line="581" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="clearPendingUpdates"/>
         <arrayBlock/>
        </ifCall>
        <ifCall line="582" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="clearUpdates"/>
         <arrayBlock/>
        </ifCall>
       </sequence>
      </let>
     </let>
    </let>
   </let>
  </function>
 </co>
 <co id="38" vis="PUBLIC" binds="">
  <globalParam name="Q{}xform-html-id" type="xs:string" line="58" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="xForm"/>
  </globalParam>
 </co>
 <co id="39" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}random" line="93" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:double" slots="0">
   <check role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="94" card="1" diag="3|0|XTTE0570|randomNumber">
    <convert from="xs:anyAtomicType" to="xs:double" flags="p">
     <cvUntyped to="xs:double">
      <data>
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="Math.random"/>
        <arrayBlock/>
       </ifCall>
      </data>
     </cvUntyped>
    </convert>
   </check>
  </function>
 </co>
 <co id="19" binds="3 40 3 28">
  <template name="Q{}xforms-recalculate" flags="os" line="3407" module="saxon-xforms.xsl" slots="3">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3408" var="instance-keys" as="item()?" slot="0" eval="8">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="getInstanceKeys"/>
     <arrayBlock/>
    </ifCall>
    <forEach line="3409">
     <varRef name="instance-keys" slot="0"/>
     <let line="3410" var="refz" as="xs:string" slot="1" eval="8">
      <fn name="concat">
       <str val="instance('"/>
       <atomSing card="?" diag="0|1||fn:concat">
        <dot/>
       </atomSing>
       <str val="')/"/>
      </fn>
      <sequence line="3411">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <atomSing diag="0|0||map:entry">
         <dot/>
        </atomSing>
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="6">
         <varRef name="refz" slot="1"/>
        </ufCall>
       </ifCall>
       <let line="3414" var="updatedInstanceXML" as="element()" slot="2" eval="7">
        <treat line="3415" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
         <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
          <applyT mode="Q{}binding-calculation-initial" bSlot="1">
           <check role="select" line="3413" card="1" diag="3|0|XTTE0570|instanceXML">
            <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="2" eval="6">
             <varRef name="refz" slot="1"/>
            </ufCall>
           </check>
           <withParam name="Q{}instance-id" as="item()">
            <dot line="3416"/>
           </withParam>
          </applyT>
         </check>
        </treat>
        <sequence line="3420">
         <message>
          <sequence role="select">
           <valueOf>
            <str val="[xforms-recalculate] updated instance: "/>
           </valueOf>
           <valueOf>
            <fn name="serialize">
             <varRef name="updatedInstanceXML" slot="2"/>
            </fn>
           </valueOf>
          </sequence>
          <str role="terminate" val="no"/>
          <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
         </message>
         <ifCall line="3422" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
          <check card="1" diag="0|0||ixsl:call">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
          </check>
          <str val="setInstance"/>
          <arrayBlock>
           <dot/>
           <varRef name="updatedInstanceXML" slot="2"/>
          </arrayBlock>
         </ifCall>
         <callT line="3423" name="refreshOutputs-JS" bSlot="3" flags="t"/>
        </sequence>
       </let>
      </sequence>
     </let>
    </forEach>
   </let>
  </template>
 </co>
 <co id="41" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-file" type="xs:string?" line="60" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <empty/>
  </globalParam>
 </co>
 <co id="42" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations" line="2602" module="saxon-xforms.xsl" eval="7" flags="pU" as="element()" slots="1">
   <arg name="this" as="element()"/>
   <compElem role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2604">
    <fn role="name" name="name">
     <varRef name="this" slot="0"/>
    </fn>
    <sequence role="content" line="2605">
     <namespace flags="l">
      <str role="name" val="xforms"/>
      <str role="select" val="http://www.w3.org/2002/xforms"/>
     </namespace>
     <forEach line="2606">
      <filter flags="b">
       <filter flags="b">
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <fn name="boolean">
         <fn name="namespace-uri">
          <dot type="element()"/>
         </fn>
        </fn>
       </filter>
       <fn name="not">
        <gc op="=" card="N:1" comp="CCC">
         <sequence>
          <slash>
           <fn name="reverse">
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </fn>
           <fn name="namespace-uri">
            <dot type="element()"/>
           </fn>
          </slash>
          <slash>
           <fn name="reverse">
            <axis name="preceding" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </fn>
           <fn name="namespace-uri">
            <dot type="element()"/>
           </fn>
          </slash>
         </sequence>
         <fn name="namespace-uri">
          <dot type="element()"/>
         </fn>
        </gc>
       </fn>
      </filter>
      <namespace line="2609" flags="l">
       <fn role="name" line="2608" name="substring-before">
        <fn name="name">
         <dot type="element()"/>
        </fn>
        <str val=":"/>
       </fn>
       <convert role="select" from="xs:anyURI" to="xs:string">
        <fn line="2607" name="namespace-uri">
         <dot type="element()"/>
        </fn>
       </convert>
      </namespace>
     </forEach>
     <copyOf line="2611" flags="vc">
      <sequence>
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </slash>
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </slash>
      </sequence>
     </copyOf>
    </sequence>
   </compElem>
  </function>
 </co>
 <co id="43" binds="3 37 14 44 4 45 18">
  <template name="Q{}xforms-submit" flags="os" line="3491" module="saxon-xforms.xsl" slots="15">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3492">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="3494" var="submission" as="map(*)" slot="1" eval="7">
     <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|submission">
      <check card="1" diag="3|0|XTTE0570|submission">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getSubmission"/>
        <arrayBlock>
         <fn name="string">
          <slash simple="1">
           <varRef name="form-control" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
          </slash>
         </fn>
        </arrayBlock>
       </ifCall>
      </check>
     </treat>
     <let line="3495" var="actions" as="map(*)?" slot="2" eval="7">
      <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getAction"/>
        <arrayBlock>
         <fn name="string">
          <slash simple="1">
           <varRef name="form-control" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
          </slash>
         </fn>
        </arrayBlock>
       </ifCall>
      </treat>
      <sequence line="3497">
       <message>
        <sequence role="select">
         <valueOf>
          <str val="[xforms-submit] Submitting: "/>
         </valueOf>
         <valueOf>
          <fn name="serialize">
           <varRef name="submission" slot="1"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <let line="3499" var="refi" as="xs:string?" slot="3" eval="7">
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="?" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
             <varRef name="submission" slot="1"/>
             <str val="@ref"/>
            </ifCall>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="3501" var="instance-id" as="xs:string" slot="4" eval="7">
         <choose line="3503">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="submission" slot="1"/>
           <str val="@instance"/>
          </ifCall>
          <treat line="3504" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|instance-id">
           <check card="1" diag="3|0|XTTE0570|instance-id">
            <cvUntyped to="xs:string">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <varRef name="submission" slot="1"/>
               <str val="@instance"/>
              </ifCall>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <true/>
          <str val="saxon-forms-default"/>
         </choose>
         <let line="3515" var="instanceXML" as="element()" slot="5" eval="7">
          <choose>
           <varRef name="refi" slot="3"/>
           <check card="1" diag="3|0|XTTE0570|instanceXML">
            <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
             <check card="1" diag="0|0||xforms:getInstance-JS">
              <varRef name="refi" slot="3"/>
             </check>
            </ufCall>
           </check>
           <true/>
           <check card="1" diag="3|0|XTTE0570|instanceXML">
            <ufCall name="Q{http://www.w3.org/2002/xforms}instance" tailCall="false" bSlot="1" eval="6">
             <varRef name="instance-id" slot="4"/>
            </ufCall>
           </check>
          </choose>
          <let line="3517" var="updatedInstanceXML" as="element()" slot="6" eval="7">
           <treat line="3518" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
            <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
             <applyT mode="Q{}form-check-initial" bSlot="2">
              <varRef role="select" name="instanceXML" slot="5"/>
              <withParam name="Q{}instance-id" as="xs:string">
               <varRef line="3519" name="instance-id" slot="4"/>
              </withParam>
             </applyT>
            </check>
           </treat>
           <let line="3523" var="required-fieldsi" as="element()*" slot="7" eval="8">
            <filter flags="b">
             <slash simple="1">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
              <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <fn name="exists">
              <axis name="attribute" nodeTest="attribute(Q{}data-required)" jsTest="return item.name==='data-required'"/>
             </fn>
            </filter>
            <let line="3525" var="required-fields-check" as="element()*" slot="8" eval="3">
             <ufCall name="Q{http://www.w3.org/2002/xforms}check-required-fields" tailCall="false" bSlot="3" eval="6">
              <varRef name="updatedInstanceXML" slot="6"/>
             </ufCall>
             <choose line="3529">
              <fn name="empty">
               <varRef name="required-fields-check" slot="8"/>
              </fn>
              <let line="3530" var="requestBodyXML" as="element()" slot="9" eval="7">
               <choose line="3532">
                <varRef name="refi" slot="3"/>
                <treat line="3533" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|requestBodyXML">
                 <check card="1" diag="3|0|XTTE0570|requestBodyXML">
                  <evaluate dxns="">
                   <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="4" eval="7">
                    <check card="1" diag="0|0||xforms:impose">
                     <varRef name="refi" slot="3"/>
                    </check>
                   </ufCall>
                   <varRef role="cxt" name="instanceXML" slot="5"/>
                   <varRef role="nsCxt" name="instanceXML" slot="5"/>
                   <str role="sa" val="no"/>
                   <map role="wp" size="0"/>
                  </evaluate>
                 </check>
                </treat>
                <true/>
                <varRef line="3536" name="instanceXML" slot="5"/>
               </choose>
               <let line="3550" var="method" as="xs:string" slot="10" eval="7">
                <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|method">
                 <check card="1" diag="3|0|XTTE0570|method">
                  <cvUntyped to="xs:string">
                   <data>
                    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                     <varRef name="submission" slot="1"/>
                     <str val="@method"/>
                    </ifCall>
                   </data>
                  </cvUntyped>
                 </check>
                </treat>
                <let line="3552" var="serialization" as="xs:string?" slot="11" eval="7">
                 <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|serialization">
                  <check card="?" diag="3|0|XTTE0570|serialization">
                   <cvUntyped to="xs:string">
                    <data>
                     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                      <varRef name="submission" slot="1"/>
                      <str val="@serialization"/>
                     </ifCall>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <let line="3554" var="query-parameters" as="xs:string?" slot="12" eval="7">
                  <choose line="3555">
                   <and op="and">
                    <fn name="exists">
                     <varRef name="serialization" slot="11"/>
                    </fn>
                    <gc op="=" card="1:1" comp="CCC">
                     <varRef name="serialization" slot="11"/>
                     <str val="application/x-www-form-urlencoded"/>
                    </gc>
                   </and>
                   <fn line="3563" name="string-join">
                    <forEach line="3557">
                     <slash simple="1">
                      <varRef name="requestBodyXML" slot="9"/>
                      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                     </slash>
                     <fn line="3558" name="concat">
                      <fn name="name">
                       <dot type="element()"/>
                      </fn>
                      <str val="="/>
                      <fn name="string">
                       <dot type="element()"/>
                      </fn>
                     </fn>
                    </forEach>
                    <str val="&amp;"/>
                   </fn>
                  </choose>
                  <let line="3567" var="href-base" as="xs:string" slot="13" eval="7">
                   <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|href-base">
                    <check card="1" diag="3|0|XTTE0570|href-base">
                     <cvUntyped to="xs:string">
                      <data>
                       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                        <varRef name="submission" slot="1"/>
                        <str val="@resource"/>
                       </ifCall>
                      </data>
                     </cvUntyped>
                    </check>
                   </treat>
                   <sequence line="3598">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}schedule-action" type="item()*">
                     <int val="0"/>
                     <empty/>
                     <callT name="HTTPsubmit" bSlot="5">
                      <withParam name="Q{}instance-id" flags="c" as="xs:string">
                       <varRef line="3599" name="instance-id" slot="4"/>
                      </withParam>
                      <withParam name="Q{}targetref" flags="c" as="xs:string?">
                       <treat line="3600" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|targetref">
                        <check card="?" diag="8|0|XTTE0590|targetref">
                         <cvUntyped to="xs:string">
                          <data>
                           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                            <varRef name="submission" slot="1"/>
                            <str val="@targetref"/>
                           </ifCall>
                          </data>
                         </cvUntyped>
                        </check>
                       </treat>
                      </withParam>
                      <withParam name="Q{}replace" flags="c" as="xs:string?">
                       <treat line="3601" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|replace">
                        <check card="?" diag="8|0|XTTE0590|replace">
                         <cvUntyped to="xs:string">
                          <data>
                           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                            <varRef name="submission" slot="1"/>
                            <str val="@replace"/>
                           </ifCall>
                          </data>
                         </cvUntyped>
                        </check>
                       </treat>
                      </withParam>
                     </callT>
                     <ifCall line="3585" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                      <sequence>
                       <choose>
                        <vc op="ne" onEmpty="1" comp="CCC">
                         <fn name="upper-case">
                          <varRef name="method" slot="10"/>
                         </fn>
                         <str val="GET"/>
                        </vc>
                        <ifCall line="3586" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                         <str val="body"/>
                         <doc line="3546" validation="preserve">
                          <doc flags="l">
                           <varRef name="requestBodyXML" slot="9"/>
                          </doc>
                         </doc>
                        </ifCall>
                       </choose>
                       <ifCall line="3588" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                        <str val="method"/>
                        <varRef name="method" slot="10"/>
                       </ifCall>
                       <ifCall line="3589" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                        <str val="href"/>
                        <choose line="3571">
                         <fn name="exists">
                          <varRef name="query-parameters" slot="12"/>
                         </fn>
                         <fn line="3572" name="concat">
                          <varRef name="href-base" slot="13"/>
                          <str val="?"/>
                          <varRef name="query-parameters" slot="12"/>
                         </fn>
                         <true/>
                         <varRef line="3575" name="href-base" slot="13"/>
                        </choose>
                       </ifCall>
                       <ifCall line="3590" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                        <str val="media-type"/>
                        <treat line="3580" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|mediatype">
                         <check card="1" diag="3|0|XTTE0570|mediatype">
                          <cvUntyped to="xs:string">
                           <data>
                            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                             <varRef name="submission" slot="1"/>
                             <str val="@mediatype"/>
                            </ifCall>
                           </data>
                          </cvUntyped>
                         </check>
                        </treat>
                       </ifCall>
                      </sequence>
                      <map size="2">
                       <str val="duplicates"/>
                       <str val="reject"/>
                       <str val="duplicates-error-code"/>
                       <str val="XTDE3365"/>
                      </map>
                     </ifCall>
                    </ifCall>
                    <forEach line="3605">
                     <varRef name="actions" slot="2"/>
                     <let line="3606" var="action-map" as="map(*)" slot="14" eval="7">
                      <dot type="map(*)"/>
                      <choose line="3609">
                       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
                        <varRef name="action-map" slot="14"/>
                        <str val="@event"/>
                       </ifCall>
                       <choose line="3610">
                        <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                         <data>
                          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                           <varRef name="action-map" slot="14"/>
                           <str val="@event"/>
                          </ifCall>
                         </data>
                         <str val="xforms-submit-done"/>
                        </gc>
                        <callT line="3611" name="applyActions" bSlot="6" flags="t">
                         <withParam name="Q{}action-map" flags="t" as="item()">
                          <varRef line="3612" name="action-map" slot="14"/>
                         </withParam>
                         <withParam name="Q{}nodeset" flags="t" as="xs:string">
                          <check line="3613" card="1" diag="8|0|XTTE0590|nodeset">
                           <varRef name="refi" slot="3"/>
                          </check>
                         </withParam>
                         <withParam name="Q{}instanceXML" flags="t" as="element()">
                          <varRef line="3614" name="instanceXML" slot="5"/>
                         </withParam>
                        </callT>
                       </choose>
                      </choose>
                     </let>
                    </forEach>
                   </sequence>
                  </let>
                 </let>
                </let>
               </let>
              </let>
              <true/>
              <ifCall line="3627" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="alert"/>
               <arrayBlock>
                <fn name="serialize">
                 <doc line="3622" flags="t" validation="preserve">
                  <forEach>
                   <varRef name="required-fields-check" slot="8"/>
                   <valueOf line="3624" flags="l">
                    <fn name="concat">
                     <str val="Value error see: "/>
                     <fn name="serialize">
                      <slash line="3623" simple="1">
                       <dot type="element()"/>
                       <axis line="3624" name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
                      </slash>
                     </fn>
                     <str val="&#xA;"/>
                    </fn>
                   </valueOf>
                  </forEach>
                 </doc>
                </fn>
               </arrayBlock>
              </ifCall>
             </choose>
            </let>
           </let>
          </let>
         </let>
        </let>
       </let>
      </sequence>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="7" binds="3 46 41">
  <template name="Q{}xforms-rebuild" flags="os" line="3383" module="saxon-xforms.xsl" slots="2">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3384" var="instanceDocs" as="map(xs:anyAtomicType, element()?)" slot="0" eval="8">
    <let line="3385" var="instance-keys" as="item()?" slot="1" eval="8">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
      <check card="1" diag="0|0||ixsl:call">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
      </check>
      <str val="getInstanceKeys"/>
      <arrayBlock/>
     </ifCall>
     <ifCall line="3387" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
      <forEach>
       <varRef name="instance-keys" slot="1"/>
       <ifCall line="3389" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <atomSing diag="0|0||map:entry">
         <dot/>
        </atomSing>
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="8">
         <fn line="3388" name="concat">
          <str val="instance('"/>
          <atomSing card="?" diag="0|1||fn:concat">
           <dot/>
          </atomSing>
          <str val="')/"/>
         </fn>
        </ufCall>
       </ifCall>
      </forEach>
      <map size="2">
       <str val="duplicates"/>
       <str val="reject"/>
       <str val="duplicates-error-code"/>
       <str val="XTDE3365"/>
      </map>
     </ifCall>
    </let>
    <callT line="3394" name="xformsjs-main" bSlot="1" flags="t">
     <withParam name="Q{}xforms-file" flags="c" as="xs:string?">
      <gVarRef line="3395" name="Q{}xforms-file" bSlot="2"/>
     </withParam>
     <withParam name="Q{}instance-docs" flags="c" as="map(*)">
      <varRef line="3396" name="instanceDocs" slot="0"/>
     </withParam>
    </callT>
   </let>
  </template>
 </co>
 <co id="27" binds="">
  <mode name="Q{}set-field" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="1" flags="s" line="2584" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:textarea" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='textarea'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2585">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <ifCall line="2587" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:textarea"/>
      <str val="value"/>
     </ifCall>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="1" flags="s" line="2576" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:select" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='select'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2577">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <forEach line="2579">
      <filter flags="b">
       <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='option';"/>
       <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="value" slot="0"/>
        </data>
        <attVal name="Q{}value" chk="0"/>
       </gc>
      </filter>
      <ifCall line="2580" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
       <str val="selected"/>
       <true/>
       <dot type="element(Q{}option)"/>
      </ifCall>
     </forEach>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="1" flags="s" line="2555" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:input" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='input'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2556">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <forEach line="2559">
      <dot type="*:input"/>
      <choose line="2561">
       <and op="and">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
        </fn>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}type" chk="0"/>
         <str val="checkbox"/>
        </gc>
       </and>
       <ifCall line="2562" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
        <str val="checked"/>
        <choose>
         <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="value" slot="0"/>
          </data>
          <str val="true"/>
         </gc>
         <check card="?" diag="0|1||ixsl:set-property">
          <varRef name="value" slot="0"/>
         </check>
         <true/>
         <str val=""/>
        </choose>
        <dot type="*:input"/>
       </ifCall>
       <true/>
       <ifCall line="2565" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
        <str val="value"/>
        <check card="?" diag="0|1||ixsl:set-property">
         <varRef name="value" slot="0"/>
        </check>
        <dot type="*:input"/>
       </ifCall>
      </choose>
     </forEach>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="47" binds="">
  <globalVariable name="Q{}xforms-actions" type="xs:string+" line="84" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&gt;=1;};">
   <literal count="15">
    <str val="setvalue"/>
    <str val="insert"/>
    <str val="delete"/>
    <str val="setindex"/>
    <str val="toggle"/>
    <str val="setfocus"/>
    <str val="dispatch"/>
    <str val="rebuild"/>
    <str val="recalculate"/>
    <str val="revalidate"/>
    <str val="refresh"/>
    <str val="reset"/>
    <str val="load"/>
    <str val="send"/>
    <str val="message"/>
   </literal>
  </globalVariable>
 </co>
 <co id="48" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}foo" line="68" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:boolean" slots="1">
   <arg name="num" as="xs:integer"/>
   <compareToInt role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="71" op="lt" val="5">
    <varRef name="num" slot="0"/>
   </compareToInt>
  </function>
 </co>
 <co id="49" binds="49 4 49 49">
  <mode name="Q{}binding-calculation" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="9" flags="s" line="2393" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2394">
     <param name="Q{}curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="2395" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <param line="2396" name="Q{}calculationMap" slot="2" flags="ti" as="map(xs:string, xs:string)">
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|calculationMap">
       <check card="1" diag="8|0|XTTE0590|calculationMap">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="2402" var="updatedPath" as="xs:string" slot="3" eval="7">
      <choose>
       <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="position" slot="1"/>
        </data>
        <int val="0"/>
       </gc>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="name">
         <dot type="element()"/>
        </fn>
        <str val="["/>
        <atomSing card="?" diag="0|3||fn:concat">
         <varRef name="position" slot="1"/>
        </atomSing>
        <str val="]"/>
       </fn>
       <true/>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="name">
         <dot type="element()"/>
        </fn>
       </fn>
      </choose>
      <copy line="2407" flags="cin">
       <sequence role="content">
        <applyT mode="Q{}binding-calculation" bSlot="0">
         <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <withParam name="Q{}curPath" as="xs:string">
          <fn line="2408" name="concat">
           <varRef name="updatedPath" slot="3"/>
           <str val="/"/>
          </fn>
         </withParam>
        </applyT>
        <choose line="2417">
         <fn name="exists">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="calculationMap" slot="2"/>
           <varRef name="updatedPath" slot="3"/>
          </ifCall>
         </fn>
         <evaluate line="2421" dxns="">
          <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="1" eval="7">
           <check line="2419" card="1" diag="3|0|XTTE0570|calculationXPath">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
             <varRef name="calculationMap" slot="2"/>
             <varRef name="updatedPath" slot="3"/>
            </ifCall>
           </check>
          </ufCall>
          <dot role="cxt" type="element()"/>
          <dot role="nsCxt" type="element()"/>
          <str role="sa" val="no"/>
          <map role="wp" size="0"/>
         </evaluate>
         <true/>
         <valueOf line="2431" flags="l">
          <fn name="normalize-space">
           <fn name="string-join">
            <data>
             <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
            </data>
            <str val=""/>
           </fn>
          </fn>
         </valueOf>
        </choose>
        <forEachGroup line="2436" algorithm="by">
         <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <fn role="key" name="local-name">
          <dot type="element()"/>
         </fn>
         <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
         <let role="content" line="2438" var="updatedChildPath" as="xs:string" slot="4" eval="8">
          <fn name="concat">
           <varRef name="updatedPath" slot="3"/>
           <str val="/"/>
           <check card="?" diag="0|2||fn:concat">
            <currentGroupingKey/>
           </check>
          </fn>
          <let line="2443" var="vv:v0" as="xs:string" slot="5" eval="13">
           <fn name="concat">
            <varRef name="updatedChildPath" slot="4"/>
            <str val="["/>
           </fn>
           <let var="dataRefWithFilter" as="element()*" slot="6" eval="8">
            <filter flags="b">
             <slash simple="1">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
              <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <fn name="starts-with">
              <cvUntyped to="xs:string">
               <attVal name="Q{}data-ref" chk="0"/>
              </cvUntyped>
              <varRef name="vv:v0" slot="5"/>
             </fn>
            </filter>
            <choose line="2446">
             <or op="or">
              <fn name="exists">
               <tail start="2">
                <currentGroup/>
               </tail>
              </fn>
              <fn name="exists">
               <varRef name="dataRefWithFilter" slot="6"/>
              </fn>
             </or>
             <let line="2449" var="vv:v1" as="xs:string" slot="7" eval="13">
              <fn name="concat">
               <varRef name="updatedPath" slot="3"/>
               <str val="/"/>
              </fn>
              <forEach line="2447">
               <currentGroup/>
               <applyT line="2448" mode="Q{}binding-calculation" bSlot="2">
                <dot role="select"/>
                <withParam name="Q{}curPath" as="xs:string">
                 <varRef line="2449" name="vv:v1" slot="7"/>
                </withParam>
                <withParam name="Q{}position" as="xs:integer">
                 <fn line="2450" name="position"/>
                </withParam>
               </applyT>
              </forEach>
             </let>
             <true/>
             <let line="2458" var="vv:v2" as="xs:string" slot="8" eval="13">
              <fn name="concat">
               <varRef name="updatedPath" slot="3"/>
               <str val="/"/>
              </fn>
              <forEach line="2456">
               <currentGroup/>
               <applyT line="2457" mode="Q{}binding-calculation" bSlot="3">
                <dot role="select"/>
                <withParam name="Q{}curPath" as="xs:string">
                 <varRef line="2458" name="vv:v2" slot="8"/>
                </withParam>
               </applyT>
              </forEach>
             </let>
            </choose>
           </let>
          </let>
         </let>
        </forEachGroup>
       </sequence>
      </copy>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="50" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-cache-id" type="item()*" line="55" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="xforms-cache"/>
  </globalParam>
 </co>
 <co id="4" binds="51">
  <function name="Q{http://www.w3.org/2002/xforms}impose" line="19" module="xforms-function-library.xsl" eval="8" flags="pU" as="xs:string" slots="3">
   <arg name="input" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="33" var="vv:v0" as="xs:anyAtomicType*" slot="1" eval="4">
    <data>
     <gVarRef name="Q{}xform-functions" bSlot="0"/>
    </data>
    <let line="49" var="parts2" as="xs:string*" slot="2" eval="8">
     <analyzeString line="54">
      <fn role="select" line="30" name="string-join">
       <analyzeString>
        <varRef role="select" name="input" slot="0"/>
        <str role="regex" val="\i\c*\("/>
        <str role="flags" val=""/>
        <choose role="matching" line="33">
         <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <varRef name="vv:v0" slot="1"/>
          <fn name="substring-before">
           <dot type="xs:string"/>
           <str val="("/>
          </fn>
         </gc>
         <fn line="34" name="concat">
          <str val="xforms:"/>
          <dot type="xs:string"/>
         </fn>
         <true/>
         <dot line="37" type="xs:string"/>
        </choose>
        <dot role="nonMatching" line="42" type="xs:string"/>
       </analyzeString>
      </fn>
      <str role="regex" val="(^\s*|[^\i\c\]])/\i\c*(/)"/>
      <str role="flags" val=""/>
      <sequence role="matching" line="56">
       <fn name="regex-group">
        <int val="1"/>
       </fn>
       <fn line="57" name="regex-group">
        <int val="2"/>
       </fn>
      </sequence>
      <dot role="nonMatching" line="60" type="xs:string"/>
     </analyzeString>
     <fn line="65" name="string-join">
      <varRef name="parts2" slot="2"/>
     </fn>
    </let>
   </let>
  </function>
 </co>
 <co id="51" binds="">
  <globalVariable name="Q{}xform-functions" type="item()+" line="17" module="xforms-function-library.xsl" visibility="PRIVATE" jsAcceptor="return val;" jsCardCheck="function c(n) {return n&gt;=1;};">
   <sequence ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="17">
    <literal count="5">
     <str val="instance"/>
     <str val="index"/>
     <str val="avg"/>
     <str val="foo"/>
     <str val="current-date"/>
    </literal>
    <slash simple="1">
     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
      <dot flags="a"/>
     </treat>
     <axis name="child" nodeTest="element(Q{}random)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='random';"/>
    </slash>
   </sequence>
  </globalVariable>
 </co>
 <co id="44" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}check-required-fields" line="746" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="3">
   <arg name="instanceXML" as="element()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="749" var="required-fieldsi" as="element()*" slot="1" eval="8">
    <filter flags="b">
     <slash simple="1">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
      <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </slash>
     <fn name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-required)" jsTest="return item.name==='data-required'"/>
     </fn>
    </filter>
    <forEach line="751">
     <varRef name="required-fieldsi" slot="1"/>
     <let line="753" var="resulti" as="document-node()" slot="2" eval="7">
      <doc line="756" validation="preserve">
       <evaluate dxns="">
        <fn role="xpath" name="concat">
         <str val="boolean(normalize-space("/>
         <attVal name="Q{}data-ref" chk="0"/>
         <str val="))"/>
         <str val="="/>
         <attVal name="Q{}data-ref" chk="0"/>
         <str val="/"/>
         <attVal name="Q{}data-required" chk="0"/>
        </fn>
        <varRef role="cxt" name="instanceXML" slot="0"/>
        <varRef role="nsCxt" name="instanceXML" slot="0"/>
        <str role="sa" val="no"/>
        <map role="wp" size="0"/>
       </evaluate>
      </doc>
      <choose line="762">
       <vc op="eq" onEmpty="0" comp="CCC">
        <cast as="xs:string" emptiable="0">
         <data>
          <varRef name="resulti" slot="2"/>
         </data>
        </cast>
        <str val="false"/>
       </vc>
       <dot type="element()"/>
      </choose>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id="52" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}index" line="75" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:integer" slots="2">
   <arg name="repeatID" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="77" var="element" as="node()*" slot="1" eval="8">
    <slash>
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
     <fn name="key">
      <str val="Q{http://saxon.sf.net/}kk103"/>
      <varRef name="repeatID" slot="0"/>
      <dot type="document-node()"/>
     </fn>
    </slash>
    <choose line="79">
     <fn name="empty">
      <varRef name="element" slot="1"/>
     </fn>
     <int val="0"/>
     <fn line="83" name="exists">
      <conditionalSort>
       <fn name="exists">
        <tail start="2">
         <varRef name="element" slot="1"/>
        </tail>
       </fn>
       <docOrder intra="1">
        <slash>
         <varRef name="element" slot="1"/>
         <axis name="attribute" nodeTest="attribute(Q{}data-count)" jsTest="return item.name==='data-count'"/>
        </slash>
       </docOrder>
      </conditionalSort>
     </fn>
     <check line="84" card="1" diag="5|0|XTTE0780|xforms:index">
      <cast as="xs:integer" emptiable="1">
       <atomSing card="?" diag="2|0||cast as">
        <conditionalSort>
         <fn name="exists">
          <tail start="2">
           <varRef name="element" slot="1"/>
          </tail>
         </fn>
         <docOrder intra="1">
          <slash>
           <varRef name="element" slot="1"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-count)" jsTest="return item.name==='data-count'"/>
          </slash>
         </docOrder>
        </conditionalSort>
       </atomSing>
      </cast>
     </check>
     <true/>
     <int val="0"/>
    </choose>
   </let>
  </function>
 </co>
 <co id="9" binds="9">
  <mode name="Q{}delete-node" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="1" flags="s" line="1625" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1626">
     <param name="Q{}delete-node" slot="0" flags="ti" as="node()">
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|delete-node">
       <check card="1" diag="8|0|XTTE0590|delete-node">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <choose line="1629">
      <is op="is">
       <dot type="element()"/>
       <varRef name="delete-node" slot="0"/>
      </is>
      <message line="1630">
       <sequence role="select">
        <valueOf>
         <str val="[delete-node mode] Found! "/>
        </valueOf>
        <valueOf>
         <fn name="serialize">
          <varRef name="delete-node" slot="0"/>
         </fn>
        </valueOf>
       </sequence>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
      <true/>
      <copy line="1643" flags="cin">
       <sequence role="content">
        <copyOf flags="vc">
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        </copyOf>
        <applyT line="1644" mode="Q{}delete-node" bSlot="0">
         <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        </applyT>
       </sequence>
      </copy>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="13" binds="">
  <mode name="Q{}get-field" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="0" flags="s" line="2548" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:textarea" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='textarea'"/>
    <ifCall role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2551" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
     <dot type="*:textarea"/>
     <str val="value"/>
    </ifCall>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="2543" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:select" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='select'"/>
    <ifCall role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2545" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
     <check card="?" diag="0|0||ixsl:get">
      <filter flags="b">
       <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='option';"/>
       <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
          <dot type="element(Q{}option)"/>
          <str val="selected"/>
         </ifCall>
        </data>
        <true/>
       </gc>
      </filter>
     </check>
     <str val="value"/>
    </ifCall>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="0" flags="s" line="2529" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:input" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='input'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2533">
     <and op="and">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
      </fn>
      <gc op="=" card="1:1" comp="CCC">
       <attVal name="Q{}type" chk="0"/>
       <str val="checkbox"/>
      </gc>
     </and>
     <ifCall line="2534" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:input"/>
      <str val="checked"/>
     </ifCall>
     <true/>
     <ifCall line="2537" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:input"/>
      <str val="value"/>
     </ifCall>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="11" binds="46 38 53 54 55 21 56 11 36 11 54 55 56 11 54 55 21 4 42 56 11 36 11 54 55 21 11 11 54 55 21 56 54 55 21 42 4 4 36 11 11 11 11 11">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="0" flags="s" line="900" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="901" name="xformsjs-main" bSlot="0" flags="t">
     <withParam name="Q{}xforms-doc" flags="c" as="document-node()">
      <dot line="902" type="document-node()"/>
     </withParam>
     <withParam name="Q{}xFormsId" flags="c" as="xs:string">
      <gVarRef line="903" name="Q{}xform-html-id" bSlot="1"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="17" rank="2" minImp="0" slots="1" flags="s" line="1791" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2002/xforms}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2002/xforms'"/>
     <gc ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1791" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <literal count="15">
       <str val="setvalue"/>
       <str val="insert"/>
       <str val="delete"/>
       <str val="setindex"/>
       <str val="toggle"/>
       <str val="setfocus"/>
       <str val="dispatch"/>
       <str val="rebuild"/>
       <str val="recalculate"/>
       <str val="revalidate"/>
       <str val="refresh"/>
       <str val="reset"/>
       <str val="load"/>
       <str val="send"/>
       <str val="message"/>
      </literal>
      <fn name="local-name">
       <dot type="Q{http://www.w3.org/2002/xforms}*"/>
      </fn>
     </gc>
    </p.withPredicate>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1801" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1802" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1803" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1815">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1816" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="1" minImp="0" slots="0" flags="s" line="1297" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="s" line="891" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="6" flags="s" line="1307" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}select1)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='select1';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1308">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1311" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element()"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="1317" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="1318" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="3">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="1319" type="element()"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="1324" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="1325" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="4">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1326" type="element()"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="1327" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="1332" var="instanceField" as="node()?" slot="4" eval="7">
         <treat line="1333" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
          <check card="?" diag="3|0|XTTE0570|instanceField">
           <callT name="getReferencedInstanceField" bSlot="5">
            <withParam name="Q{}refi" flags="c" as="xs:string">
             <varRef line="1334" name="refi" slot="3"/>
            </withParam>
           </callT>
          </check>
         </treat>
         <let line="1339" var="actions" as="map(*)*" slot="5" eval="8">
          <treat line="1340" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
           <callT name="setActions" bSlot="6">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1341" type="element()"/>
            </withParam>
            <withParam name="Q{}nodeset" flags="t" as="xs:string">
             <varRef line="1342" name="refi" slot="3"/>
            </withParam>
           </callT>
          </treat>
          <sequence line="1346">
           <choose>
            <fn name="exists">
             <varRef name="actions" slot="5"/>
            </fn>
            <ifCall line="1347" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="addAction"/>
             <arrayBlock>
              <varRef name="myid" slot="1"/>
              <varRef name="actions" slot="5"/>
             </arrayBlock>
            </ifCall>
           </choose>
           <elem line="1364" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
            <sequence>
             <att name="class" flags="l">
              <str val="xforms-select"/>
             </att>
             <applyT line="1365" bSlot="7">
              <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
             </applyT>
             <elem line="1368" name="select" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
              <sequence>
               <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="8" eval="7">
                <dot type="element()"/>
               </ufCall>
               <copyOf line="1369" flags="vc">
                <except op="except">
                 <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                 <docOrder intra="1">
                  <sequence>
                   <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
                   <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
                   <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
                  </sequence>
                 </docOrder>
                </except>
               </copyOf>
               <att line="1371" name="data-ref" flags="l">
                <varRef name="refi" slot="3"/>
               </att>
               <att line="1372" name="data-element" flags="l">
                <lastOf line="1362">
                 <fn name="tokenize">
                  <varRef name="refi" slot="3"/>
                  <str val="/"/>
                  <str val=""/>
                 </fn>
                </lastOf>
               </att>
               <choose line="1374">
                <and op="and">
                 <fn name="exists">
                  <varRef name="bindingi" slot="2"/>
                 </fn>
                 <fn name="exists">
                  <slash simple="1">
                   <varRef name="bindingi" slot="2"/>
                   <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                  </slash>
                 </fn>
                </and>
                <att line="1375" name="data-constraint" flags="l">
                 <convert from="xs:untypedAtomic" to="xs:string">
                  <data>
                   <slash simple="1">
                    <varRef name="bindingi" slot="2"/>
                    <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                   </slash>
                  </data>
                 </convert>
                </att>
               </choose>
               <choose line="1378">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <fn name="local-name">
                  <dot type="element()"/>
                 </fn>
                 <str val="select"/>
                </vc>
                <sequence line="1381">
                 <att name="multiple" flags="l">
                  <str val="true"/>
                 </att>
                 <att name="size" flags="l">
                  <convert from="xs:integer" to="xs:string">
                   <fn name="count">
                    <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                   </fn>
                  </convert>
                 </att>
                </sequence>
               </choose>
               <choose line="1384">
                <fn name="exists">
                 <varRef name="actions" slot="5"/>
                </fn>
                <att line="1385" name="data-action" flags="l">
                 <varRef name="myid" slot="1"/>
                </att>
               </choose>
               <applyT line="1388" bSlot="9">
                <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                <withParam name="Q{}selectedValue" as="xs:string">
                 <choose line="1353">
                  <fn name="exists">
                   <varRef name="instanceField" slot="4"/>
                  </fn>
                  <cvUntyped line="1354" to="xs:string">
                   <cast as="xs:untypedAtomic" emptiable="0">
                    <fn name="string">
                     <convert from="xs:anyAtomicType" to="xs:string">
                      <data>
                       <varRef name="instanceField" slot="4"/>
                      </data>
                     </convert>
                    </fn>
                   </cast>
                  </cvUntyped>
                  <true/>
                  <str val=""/>
                 </choose>
                </withParam>
               </applyT>
              </sequence>
             </elem>
            </sequence>
           </elem>
          </sequence>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="16" rank="1" minImp="0" slots="6" flags="s" line="1717" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}trigger)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='trigger';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1718">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1721" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="1724" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="1725" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="10">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="1726" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="1731" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="1732" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="11">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1733" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="1734" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="1739" var="actions" as="map(*)*" slot="4" eval="8">
         <treat line="1740" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
          <callT name="setActions" bSlot="12">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1741" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
           </withParam>
           <withParam name="Q{}nodeset" flags="t" as="xs:string">
            <varRef line="1742" name="refi" slot="3"/>
           </withParam>
          </callT>
         </treat>
         <sequence line="1746">
          <choose>
           <fn name="exists">
            <varRef name="actions" slot="4"/>
           </fn>
           <ifCall line="1747" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="addAction"/>
            <arrayBlock>
             <varRef name="myid" slot="1"/>
             <varRef name="actions" slot="4"/>
            </arrayBlock>
           </ifCall>
          </choose>
          <let line="1750" var="innerbody" as="document-node()" slot="5" eval="7">
           <doc line="1752" validation="preserve">
            <choose>
             <fn name="exists">
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
             </fn>
             <applyT line="1753" bSlot="13">
              <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
             </applyT>
             <true/>
             <valueOf line="1755" flags="l">
              <str val="&#160;"/>
             </valueOf>
            </choose>
           </doc>
           <elem line="1759" name="span" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
            <sequence>
             <att name="style" flags="l">
              <str val="display:'inline'"/>
             </att>
             <compElem line="1770" flags="l">
              <choose role="name" line="1762">
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}appearance" chk="0"/>
                <str val="minimal"/>
               </gc>
               <str val="a"/>
               <true/>
               <str val="button"/>
              </choose>
              <sequence role="content" line="1771">
               <choose>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}appearance" chk="0"/>
                 <str val="minimal"/>
                </gc>
                <att line="1772" name="type" flags="l">
                 <str val="button"/>
                </att>
               </choose>
               <att line="1775" name="data-ref" flags="l">
                <varRef name="refi" slot="3"/>
               </att>
               <att line="1776" name="data-action" flags="l">
                <varRef name="myid" slot="1"/>
               </att>
               <copyOf line="1777" flags="vc">
                <varRef name="innerbody" slot="5"/>
               </copyOf>
              </sequence>
             </compElem>
            </sequence>
           </elem>
          </let>
         </sequence>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1791" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='script';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1801" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1802" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1803" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1815">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1816" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1791" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='action';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1801" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1802" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1803" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1815">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1816" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="5" rank="1" minImp="0" slots="9" flags="s" line="1050" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='input';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1051">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1054" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="1060" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="1061" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="14">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="1062" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="1067" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="1068" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="15">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1069" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="1070" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="1075" var="instanceField" as="node()?" slot="4" eval="7">
         <treat line="1076" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
          <check card="?" diag="3|0|XTTE0570|instanceField">
           <callT name="getReferencedInstanceField" bSlot="16">
            <withParam name="Q{}refi" flags="c" as="xs:string">
             <varRef line="1077" name="refi" slot="3"/>
            </withParam>
           </callT>
          </check>
         </treat>
         <let line="1089" var="relevantVar" as="xs:boolean" slot="5" eval="7">
          <choose line="1091">
           <and op="and">
            <and op="and">
             <fn name="exists">
              <varRef name="bindingi" slot="2"/>
             </fn>
             <fn name="exists">
              <slash simple="1">
               <varRef name="bindingi" slot="2"/>
               <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
              </slash>
             </fn>
            </and>
            <fn name="exists">
             <varRef name="instanceField" slot="4"/>
            </fn>
           </and>
           <treat line="1092" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantVar">
            <check card="1" diag="3|0|XTTE0570|relevantVar">
             <cvUntyped to="xs:boolean">
              <data>
               <evaluate dxns="">
                <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="17" eval="4">
                 <check card="1" diag="0|0||xforms:impose">
                  <cvUntyped to="xs:string">
                   <data>
                    <slash simple="1">
                     <varRef name="bindingi" slot="2"/>
                     <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                    </slash>
                   </data>
                  </cvUntyped>
                 </check>
                </ufCall>
                <varRef role="cxt" name="instanceField" slot="4"/>
                <choose role="nsCxt" line="1084">
                 <fn name="exists">
                  <varRef name="instanceField" slot="4"/>
                 </fn>
                 <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|namespace-context-item">
                  <check card="1" diag="3|0|XTTE0570|namespace-context-item">
                   <varRef name="instanceField" slot="4"/>
                  </check>
                 </treat>
                 <true/>
                 <ufCall name="Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations" tailCall="false" bSlot="18" eval="4">
                  <check card="1" diag="0|0||xforms:addNamespaceDeclarations">
                   <slash simple="1">
                    <root/>
                    <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                   </slash>
                  </check>
                 </ufCall>
                </choose>
                <str role="sa" val="no"/>
                <map role="wp" size="0"/>
               </evaluate>
              </data>
             </cvUntyped>
            </check>
           </treat>
           <true/>
           <true/>
          </choose>
          <let line="1101" var="actions" as="map(*)*" slot="6" eval="8">
           <treat line="1102" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
            <callT name="setActions" bSlot="19">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1103" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string">
              <varRef line="1104" name="refi" slot="3"/>
             </withParam>
            </callT>
           </treat>
           <sequence line="1108">
            <choose>
             <fn name="exists">
              <varRef name="actions" slot="6"/>
             </fn>
             <ifCall line="1109" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="addAction"/>
              <arrayBlock>
               <varRef name="myid" slot="1"/>
               <varRef name="actions" slot="6"/>
              </arrayBlock>
             </ifCall>
            </choose>
            <elem line="1114" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
             <sequence>
              <att name="class" flags="l">
               <str val="xforms-input"/>
              </att>
              <att line="1115" name="style" flags="l">
               <choose>
                <varRef name="relevantVar" slot="5"/>
                <str val="display:block"/>
                <true/>
                <str val="display:none"/>
               </choose>
              </att>
              <applyT line="1117" bSlot="20">
               <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
              </applyT>
              <let line="1119" var="hints" as="text()*" slot="7" eval="3">
               <slash>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
                <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
               </slash>
               <elem line="1124" name="input" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
                <sequence>
                 <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="21" eval="7">
                  <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
                 </ufCall>
                 <att line="1126" name="data-ref" flags="l">
                  <varRef name="refi" slot="3"/>
                 </att>
                 <att line="1127" name="data-element" flags="l">
                  <lastOf line="1121">
                   <fn name="tokenize">
                    <varRef name="refi" slot="3"/>
                    <str val="/"/>
                    <str val=""/>
                   </fn>
                  </lastOf>
                 </att>
                 <choose line="1129">
                  <and op="and">
                   <fn name="exists">
                    <varRef name="bindingi" slot="2"/>
                   </fn>
                   <fn name="exists">
                    <slash simple="1">
                     <varRef name="bindingi" slot="2"/>
                     <axis name="attribute" nodeTest="attribute(Q{}required)" jsTest="return item.name==='required'"/>
                    </slash>
                   </fn>
                  </and>
                  <att line="1130" name="data-required" flags="l">
                   <convert from="xs:untypedAtomic" to="xs:string">
                    <data>
                     <slash simple="1">
                      <varRef name="bindingi" slot="2"/>
                      <axis name="attribute" nodeTest="attribute(Q{}required)" jsTest="return item.name==='required'"/>
                     </slash>
                    </data>
                   </convert>
                  </att>
                 </choose>
                 <choose line="1132">
                  <and op="and">
                   <fn name="exists">
                    <varRef name="bindingi" slot="2"/>
                   </fn>
                   <fn name="exists">
                    <slash simple="1">
                     <varRef name="bindingi" slot="2"/>
                     <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                    </slash>
                   </fn>
                  </and>
                  <att line="1133" name="data-constraint" flags="l">
                   <convert from="xs:untypedAtomic" to="xs:string">
                    <data>
                     <slash simple="1">
                      <varRef name="bindingi" slot="2"/>
                      <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                     </slash>
                    </data>
                   </convert>
                  </att>
                 </choose>
                 <choose line="1135">
                  <fn name="exists">
                   <varRef name="actions" slot="6"/>
                  </fn>
                  <att line="1136" name="data-action" flags="l">
                   <varRef name="myid" slot="1"/>
                  </att>
                 </choose>
                 <choose line="1139">
                  <and op="and">
                   <fn name="exists">
                    <varRef name="bindingi" slot="2"/>
                   </fn>
                   <fn name="exists">
                    <slash simple="1">
                     <varRef name="bindingi" slot="2"/>
                     <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                    </slash>
                   </fn>
                  </and>
                  <att line="1140" name="data-relevant" flags="l">
                   <convert from="xs:untypedAtomic" to="xs:string">
                    <data>
                     <slash simple="1">
                      <varRef name="bindingi" slot="2"/>
                      <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                     </slash>
                    </data>
                   </convert>
                  </att>
                 </choose>
                 <let line="1143" var="input-value" as="xs:string" slot="8" eval="7">
                  <choose line="1145">
                   <fn name="exists">
                    <varRef name="instanceField" slot="4"/>
                   </fn>
                   <cvUntyped line="1146" to="xs:string">
                    <cast as="xs:untypedAtomic" emptiable="0">
                     <fn name="string">
                      <convert from="xs:anyAtomicType" to="xs:string">
                       <data>
                        <varRef name="instanceField" slot="4"/>
                       </data>
                      </convert>
                     </fn>
                    </cast>
                   </cvUntyped>
                   <true/>
                   <str val=""/>
                  </choose>
                  <sequence line="1160">
                   <choose>
                    <choose>
                     <fn name="exists">
                      <varRef name="bindingi" slot="2"/>
                     </fn>
                     <vc op="eq" comp="EQC">
                      <cast as="xs:QName" emptiable="1">
                       <data>
                        <slash simple="1">
                         <varRef name="bindingi" slot="2"/>
                         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                        </slash>
                       </data>
                      </cast>
                      <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="date"/>
                     </vc>
                     <true/>
                     <false/>
                    </choose>
                    <sequence line="1161">
                     <att name="data-type" flags="l">
                      <str val="date"/>
                     </att>
                     <att line="1163" name="type" flags="l">
                      <str val="date"/>
                     </att>
                     <att line="1165" name="value" flags="l">
                      <varRef name="input-value" slot="8"/>
                     </att>
                    </sequence>
                    <choose line="1172">
                     <fn name="exists">
                      <varRef name="bindingi" slot="2"/>
                     </fn>
                     <vc op="eq" comp="EQC">
                      <cast as="xs:QName" emptiable="1">
                       <data>
                        <slash simple="1">
                         <varRef name="bindingi" slot="2"/>
                         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                        </slash>
                       </data>
                      </cast>
                      <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="time"/>
                     </vc>
                     <true/>
                     <false/>
                    </choose>
                    <sequence line="1173">
                     <att name="data-type" flags="l">
                      <str val="time"/>
                     </att>
                     <att line="1175" name="type" flags="l">
                      <str val="time"/>
                     </att>
                     <att line="1178" name="value" flags="l">
                      <varRef name="input-value" slot="8"/>
                     </att>
                    </sequence>
                    <choose line="1185">
                     <fn name="exists">
                      <varRef name="bindingi" slot="2"/>
                     </fn>
                     <vc op="eq" comp="EQC">
                      <cast as="xs:QName" emptiable="1">
                       <data>
                        <slash simple="1">
                         <varRef name="bindingi" slot="2"/>
                         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                        </slash>
                       </data>
                      </cast>
                      <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="boolean"/>
                     </vc>
                     <true/>
                     <false/>
                    </choose>
                    <sequence line="1186">
                     <att name="data-type" flags="l">
                      <str val="checkbox"/>
                     </att>
                     <att line="1188" name="type" flags="l">
                      <str val="checkbox"/>
                     </att>
                     <choose line="1193">
                      <fn name="exists">
                       <varRef name="instanceField" slot="4"/>
                      </fn>
                      <choose line="1194">
                       <and op="and">
                        <varRef name="input-value" slot="8"/>
                        <cast as="xs:boolean" emptiable="0">
                         <varRef name="input-value" slot="8"/>
                        </cast>
                       </and>
                       <att line="1195" name="checked" flags="l">
                        <varRef name="input-value" slot="8"/>
                       </att>
                      </choose>
                     </choose>
                    </sequence>
                    <true/>
                    <sequence line="1201">
                     <choose>
                      <varRef name="relevantVar" slot="5"/>
                      <att line="1202" name="type" flags="l">
                       <str val="text"/>
                      </att>
                     </choose>
                     <att line="1204" name="value" flags="l">
                      <varRef name="input-value" slot="8"/>
                     </att>
                    </sequence>
                   </choose>
                   <choose line="1208">
                    <fn name="exists">
                     <varRef name="hints" slot="7"/>
                    </fn>
                    <att line="1209" name="title" flags="l">
                     <fn name="string-join">
                      <convert from="xs:untypedAtomic" to="xs:string">
                       <data>
                        <mergeAdj>
                         <varRef name="hints" slot="7"/>
                        </mergeAdj>
                       </data>
                      </convert>
                      <str val=" "/>
                     </fn>
                    </att>
                   </choose>
                   <choose line="1211">
                    <fn name="exists">
                     <axis name="attribute" nodeTest="attribute(Q{}size)" jsTest="return item.name==='size'"/>
                    </fn>
                    <att line="1212" name="size" flags="l">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <attVal name="Q{}size" chk="0"/>
                     </convert>
                    </att>
                   </choose>
                  </sequence>
                 </let>
                </sequence>
               </elem>
              </let>
             </sequence>
            </elem>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="s" line="881" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
    <applyT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="882" flags="t" bSlot="22">
     <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="14" rank="1" minImp="0" slots="6" flags="s" line="1494" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}repeat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='repeat';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1495">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1504" var="bindingi" as="node()?" slot="1" eval="7">
      <treat line="1505" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
       <check card="?" diag="3|0|XTTE0570|bindingi">
        <callT name="getBinding" bSlot="23">
         <withParam name="Q{}this" flags="c" as="element()">
          <dot line="1506" type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
         </withParam>
        </callT>
       </check>
      </treat>
      <let line="1511" var="refi" as="xs:string" slot="2" eval="7">
       <treat line="1512" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
        <check card="1" diag="3|0|XTTE0570|refi">
         <cvUntyped to="xs:string">
          <data>
           <callT name="getDataRef" bSlot="24">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1513" type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
            </withParam>
            <withParam name="Q{}bindingi" flags="c" as="node()?">
             <varRef line="1514" name="bindingi" slot="1"/>
            </withParam>
           </callT>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line="1520" var="selectedRepeatVar" as="element()*" slot="3" eval="8">
        <treat line="1522" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|selectedRepeatVar">
         <callT name="getReferencedInstanceField" bSlot="25">
          <withParam name="Q{}refi" flags="c" as="xs:string">
           <varRef line="1523" name="refi" slot="2"/>
          </withParam>
         </callT>
        </treat>
        <sequence line="1530">
         <message>
          <choose role="select">
           <fn name="exists">
            <varRef name="selectedRepeatVar" slot="3"/>
           </fn>
           <sequence>
            <valueOf>
             <str val="&#xA;                    [xforms:repeat] ref = "/>
            </valueOf>
            <varRef line="1531" name="refi" slot="2"/>
            <valueOf>
             <str val="&#xA;                    count = "/>
            </valueOf>
            <fn line="1532" name="count">
             <varRef name="selectedRepeatVar" slot="3"/>
            </fn>
           </sequence>
           <true/>
           <sequence line="1534">
            <valueOf>
             <str val="[xforms:repeat] No repeat found for ref "/>
            </valueOf>
            <varRef name="refi" slot="2"/>
           </sequence>
          </choose>
          <str role="terminate" val="no"/>
          <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
         </message>
         <choose line="1538">
          <fn name="exists">
           <varRef name="selectedRepeatVar" slot="3"/>
          </fn>
          <elem line="1540" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
           <sequence>
            <att name="data-repeatable-context" flags="l">
             <varRef name="refi" slot="2"/>
            </att>
            <att line="1541" name="data-count" flags="l">
             <convert from="xs:integer" to="xs:string">
              <fn name="count">
               <varRef name="selectedRepeatVar" slot="3"/>
              </fn>
             </convert>
            </att>
            <att line="1542" name="id" flags="l">
             <choose line="1498">
              <fn name="exists">
               <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
              </fn>
              <check card="1" diag="3|0|XTTE0570|myid">
               <cvUntyped to="xs:string">
                <attVal name="Q{}id" chk="0"/>
               </cvUntyped>
              </check>
              <true/>
              <fn name="concat">
               <fn name="generate-id">
                <dot type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
               </fn>
               <str val="-"/>
               <varRef name="position" slot="0"/>
              </fn>
             </choose>
            </att>
            <let line="1543" var="xf-repeat" as="element(Q{http://www.w3.org/2002/xforms}repeat)" slot="4" eval="7">
             <dot type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
             <let line="1546" var="vv:v0" as="element()*" slot="5" eval="4">
              <slash simple="1">
               <varRef name="xf-repeat" slot="4"/>
               <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
              <forEach line="1544">
               <varRef name="selectedRepeatVar" slot="3"/>
               <elem line="1545" name="div" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
                <sequence>
                 <att name="data-repeat-item" flags="l">
                  <str val="true"/>
                 </att>
                 <applyT line="1546" bSlot="26">
                  <varRef role="select" name="vv:v0" slot="5"/>
                  <withParam name="Q{}position" as="xs:integer">
                   <fn line="1548" name="position"/>
                  </withParam>
                  <withParam name="Q{}nodeset" flags="t" as="xs:string">
                   <fn line="1547" name="concat">
                    <varRef name="refi" slot="2"/>
                    <str val="["/>
                    <fn name="position"/>
                    <str val="]"/>
                   </fn>
                  </withParam>
                 </applyT>
                </sequence>
               </elem>
              </forEach>
             </let>
            </let>
           </sequence>
          </elem>
         </choose>
        </sequence>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="s" line="917" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='html';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="919" name="html" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
     <sequence>
      <copyOf flags="vc">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </copyOf>
      <elem line="921" name="head" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
       <sequence>
        <copyOf flags="vc">
         <union op="|">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <slash>
           <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
         </union>
        </copyOf>
        <elem line="922" name="meta" nsuri="" flags="l">
         <sequence>
          <att name="http-equiv" flags="l">
           <str val="Content-Type"/>
          </att>
          <att name="content" flags="l">
           <str val="text/html;charset=utf-8"/>
          </att>
         </sequence>
        </elem>
        <forEach line="924">
         <union op="|">
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
         </union>
         <elem line="926" name="meta" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
          <copyOf flags="vc">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </copyOf>
         </elem>
        </forEach>
        <copyOf line="931" flags="vc">
         <axis name="child" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
        </copyOf>
       </sequence>
      </elem>
      <elem line="934" name="body" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
       <applyT bSlot="27">
        <slash role="select">
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='body';"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </applyT>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="s" line="917" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/1999/xhtml}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='html';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="919" name="html" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
     <sequence>
      <copyOf flags="vc">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </copyOf>
      <elem line="921" name="head" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
       <sequence>
        <copyOf flags="vc">
         <union op="|">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <slash>
           <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
         </union>
        </copyOf>
        <elem line="922" name="meta" nsuri="" flags="l">
         <sequence>
          <att name="http-equiv" flags="l">
           <str val="Content-Type"/>
          </att>
          <att name="content" flags="l">
           <str val="text/html;charset=utf-8"/>
          </att>
         </sequence>
        </elem>
        <forEach line="924">
         <union op="|">
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
         </union>
         <elem line="926" name="meta" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
          <copyOf flags="vc">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </copyOf>
         </elem>
        </forEach>
        <copyOf line="931" flags="vc">
         <axis name="child" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
        </copyOf>
       </sequence>
      </elem>
      <elem line="934" name="body" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
       <applyT bSlot="27">
        <slash role="select">
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='body';"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </applyT>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="2.0" seq="6" rank="3" minImp="0" slots="6" flags="s" line="1229" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}textarea)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='textarea';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1230">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1236" var="bindingi" as="node()?" slot="1" eval="7">
      <treat line="1237" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
       <check card="?" diag="3|0|XTTE0570|bindingi">
        <callT name="getBinding" bSlot="28">
         <withParam name="Q{}this" flags="c" as="element()">
          <dot line="1238" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
         </withParam>
        </callT>
       </check>
      </treat>
      <let line="1243" var="refi" as="xs:string" slot="2" eval="7">
       <treat line="1244" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
        <check card="1" diag="3|0|XTTE0570|refi">
         <cvUntyped to="xs:string">
          <data>
           <callT name="getDataRef" bSlot="29">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1245" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
            </withParam>
            <withParam name="Q{}bindingi" flags="c" as="node()?">
             <varRef line="1246" name="bindingi" slot="1"/>
            </withParam>
           </callT>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line="1251" var="instanceField" as="node()?" slot="3" eval="7">
        <treat line="1252" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
         <check card="?" diag="3|0|XTTE0570|instanceField">
          <callT name="getReferencedInstanceField" bSlot="30">
           <withParam name="Q{}refi" flags="c" as="xs:string">
            <varRef line="1253" name="refi" slot="2"/>
           </withParam>
          </callT>
         </check>
        </treat>
        <let line="1258" var="actions" as="map(*)*" slot="4" eval="8">
         <treat line="1259" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
          <callT name="setActions" bSlot="31">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1260" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
           </withParam>
           <withParam name="Q{}nodeset" flags="t" as="xs:string">
            <varRef line="1261" name="refi" slot="2"/>
           </withParam>
          </callT>
         </treat>
         <sequence line="1265">
          <choose>
           <fn name="exists">
            <varRef name="actions" slot="4"/>
           </fn>
           <ifCall line="1266" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="addAction"/>
            <arrayBlock>
             <choose line="1233">
              <fn name="exists">
               <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
              </fn>
              <check card="1" diag="3|0|XTTE0570|myid">
               <cvUntyped to="xs:string">
                <attVal name="Q{}id" chk="0"/>
               </cvUntyped>
              </check>
              <true/>
              <fn name="concat">
               <fn name="generate-id">
                <dot type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
               </fn>
               <str val="-"/>
               <varRef name="position" slot="0"/>
              </fn>
             </choose>
             <varRef name="actions" slot="4"/>
            </arrayBlock>
           </ifCall>
          </choose>
          <let line="1271" var="hints" as="text()*" slot="5" eval="3">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </slash>
           <elem line="1274" name="textarea" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
            <sequence>
             <copyOf flags="vc">
              <filter flags="b">
               <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
               <vc op="ne" comp="CCC">
                <fn name="local-name">
                 <dot type="attribute()"/>
                </fn>
                <str val="ref"/>
               </vc>
              </filter>
             </copyOf>
             <att line="1275" name="data-element" flags="l">
              <lastOf line="1269">
               <fn name="tokenize">
                <varRef name="refi" slot="2"/>
                <str val="/"/>
                <str val=""/>
               </fn>
              </lastOf>
             </att>
             <att line="1276" name="data-ref" flags="l">
              <varRef name="refi" slot="2"/>
             </att>
             <choose line="1278">
              <fn name="exists">
               <varRef name="instanceField" slot="3"/>
              </fn>
              <valueOf line="1279" flags="l">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <varRef name="instanceField" slot="3"/>
                </data>
               </convert>
              </valueOf>
              <true/>
              <sequence line="1281">
               <valueOf flags="Sl">
                <str val=""/>
               </valueOf>
               <valueOf flags="l">
                <str val="&#160; "/>
               </valueOf>
              </sequence>
             </choose>
             <choose line="1284">
              <fn name="exists">
               <varRef name="hints" slot="5"/>
              </fn>
              <att line="1285" name="title" flags="l">
               <fn name="string-join">
                <convert from="xs:untypedAtomic" to="xs:string">
                 <data>
                  <mergeAdj>
                   <varRef name="hints" slot="5"/>
                  </mergeAdj>
                 </data>
                </convert>
                <str val=" "/>
               </fn>
              </att>
             </choose>
            </sequence>
           </elem>
          </let>
         </sequence>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="4" rank="1" minImp="0" slots="8" flags="s" line="948" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}output)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='output';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="949">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="952" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}output)"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="956" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="957" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="32">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="958" type="element(Q{http://www.w3.org/2002/xforms}output)"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="963" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="964" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="33">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="965" type="element(Q{http://www.w3.org/2002/xforms}output)"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="966" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="971" var="instanceField" as="node()?" slot="4" eval="7">
         <treat line="972" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
          <check card="?" diag="3|0|XTTE0570|instanceField">
           <callT name="getReferencedInstanceField" bSlot="34">
            <withParam name="Q{}refi" flags="c" as="xs:string">
             <varRef line="973" name="refi" slot="3"/>
            </withParam>
           </callT>
          </check>
         </treat>
         <let line="984" var="namespace-context-item" as="element()" slot="5" eval="7">
          <choose>
           <fn name="exists">
            <varRef name="instanceField" slot="4"/>
           </fn>
           <choose>
            <fn name="exists">
             <filter flags="b">
              <varRef name="instanceField" slot="4"/>
              <fn name="exists">
               <axis name="self" nodeTest="text()" jsTest="return item.nodeType===3;"/>
              </fn>
             </filter>
            </fn>
            <check card="1" diag="3|0|XTTE0570|namespace-context-item">
             <slash simple="1">
              <varRef name="instanceField" slot="4"/>
              <axis name="parent" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
            </check>
            <true/>
            <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|namespace-context-item">
             <check card="1" diag="3|0|XTTE0570|namespace-context-item">
              <varRef name="instanceField" slot="4"/>
             </check>
            </treat>
           </choose>
           <true/>
           <ufCall name="Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations" tailCall="false" bSlot="35" eval="4">
            <check card="1" diag="0|0||xforms:addNamespaceDeclarations">
             <slash simple="1">
              <root/>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
            </check>
           </ufCall>
          </choose>
          <let line="986" var="valueExecuted" as="xs:string" slot="6" eval="7">
           <choose line="988">
            <fn name="exists">
             <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
            </fn>
            <evaluate line="989" as="xs:string" dxns="">
             <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="36" eval="7">
              <check card="1" diag="0|0||xforms:impose">
               <cvUntyped to="xs:string">
                <attVal name="Q{}value" chk="0"/>
               </cvUntyped>
              </check>
             </ufCall>
             <varRef role="cxt" name="instanceField" slot="4"/>
             <varRef role="nsCxt" name="namespace-context-item" slot="5"/>
             <str role="sa" val="no"/>
             <map role="wp" size="0"/>
            </evaluate>
            <true/>
            <cvUntyped line="992" to="xs:string">
             <cast as="xs:untypedAtomic" emptiable="0">
              <fn name="string">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <varRef name="instanceField" slot="4"/>
                </data>
               </convert>
              </fn>
             </cast>
            </cvUntyped>
           </choose>
           <let line="998" var="relevantVar" as="xs:boolean" slot="7" eval="7">
            <choose line="1000">
             <and op="and">
              <and op="and">
               <fn name="exists">
                <varRef name="bindingi" slot="2"/>
               </fn>
               <fn name="exists">
                <slash simple="1">
                 <varRef name="bindingi" slot="2"/>
                 <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                </slash>
               </fn>
              </and>
              <fn name="exists">
               <varRef name="instanceField" slot="4"/>
              </fn>
             </and>
             <treat line="1001" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantVar">
              <check card="1" diag="3|0|XTTE0570|relevantVar">
               <cvUntyped to="xs:boolean">
                <data>
                 <evaluate dxns="">
                  <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="37" eval="4">
                   <check card="1" diag="0|0||xforms:impose">
                    <cvUntyped to="xs:string">
                     <data>
                      <slash simple="1">
                       <varRef name="bindingi" slot="2"/>
                       <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                      </slash>
                     </data>
                    </cvUntyped>
                   </check>
                  </ufCall>
                  <varRef role="cxt" name="instanceField" slot="4"/>
                  <varRef role="nsCxt" name="namespace-context-item" slot="5"/>
                  <str role="sa" val="no"/>
                  <map role="wp" size="0"/>
                 </evaluate>
                </data>
               </cvUntyped>
              </check>
             </treat>
             <true/>
             <true/>
            </choose>
            <sequence line="1013">
             <elem name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
              <sequence>
               <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="38" eval="7">
                <dot type="element(Q{http://www.w3.org/2002/xforms}output)"/>
               </ufCall>
               <applyT line="1015" bSlot="39">
                <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
               </applyT>
               <elem line="1018" name="span" nsuri="" flags="l">
                <sequence>
                 <att name="id" flags="l">
                  <varRef name="myid" slot="1"/>
                 </att>
                 <att line="1019" name="style" flags="l">
                  <choose>
                   <varRef name="relevantVar" slot="7"/>
                   <str val="display:inline"/>
                   <true/>
                   <str val="display:none"/>
                  </choose>
                 </att>
                 <att line="1020" name="data-ref" flags="l">
                  <varRef name="refi" slot="3"/>
                 </att>
                 <varRef line="1022" name="valueExecuted" slot="6"/>
                </sequence>
               </elem>
              </sequence>
             </elem>
             <ifCall line="1039" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="addOutput"/>
              <arrayBlock>
               <varRef name="myid" slot="1"/>
               <ifCall line="1029" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                <sequence>
                 <choose>
                  <varRef name="refi" slot="3"/>
                  <ifCall line="1030" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                   <str val="@ref"/>
                   <varRef name="refi" slot="3"/>
                  </ifCall>
                 </choose>
                 <choose line="1033">
                  <fn name="exists">
                   <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
                  </fn>
                  <ifCall line="1034" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                   <str val="@value"/>
                   <cast as="xs:string" emptiable="1">
                    <attVal name="Q{}value" chk="0"/>
                   </cast>
                  </ifCall>
                 </choose>
                </sequence>
                <map size="2">
                 <str val="duplicates"/>
                 <str val="reject"/>
                 <str val="duplicates-error-code"/>
                 <str val="XTDE3365"/>
                </map>
               </ifCall>
              </arrayBlock>
             </ifCall>
            </sequence>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="12" rank="1" minImp="0" slots="1" flags="s" line="1444" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1445">
     <param name="Q{}selectedValue" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|selectedValue">
       <check card="1" diag="8|0|XTTE0590|selectedValue">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <elem line="1447" name="option" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
      <sequence>
       <att name="value" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='value';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </att>
       <choose line="1448">
        <gc op="=" card="1:1" comp="CCC">
         <varRef name="selectedValue" slot="0"/>
         <cast as="xs:string" emptiable="1">
          <atomSing card="?" diag="2|0||cast as">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='value';"/>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </slash>
          </atomSing>
         </cast>
        </gc>
        <att line="1449" name="selected" flags="l">
         <varRef name="selectedValue" slot="0"/>
        </att>
       </choose>
       <valueOf line="1452" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1791" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}hide)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hide';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1801" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1802" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1803" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1815">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1816" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="15" rank="1" minImp="0" slots="2" flags="s" line="1565" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}submit)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='submit';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1566">
     <param name="Q{}submissions" slot="0" flags="t" as="map(xs:string, map(*))">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, map(*))" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <let line="1568" var="innerbody" as="document-node()" slot="1" eval="7">
      <doc line="1569" validation="preserve">
       <applyT bSlot="40">
        <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
       </applyT>
      </doc>
      <choose line="1573">
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}appearance" chk="0"/>
        <str val="minimal"/>
       </gc>
       <elem line="1575" name="a" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
        <copyOf flags="vc">
         <varRef name="innerbody" slot="1"/>
        </copyOf>
       </elem>
       <true/>
       <elem line="1579" name="button" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
        <sequence>
         <att name="type" flags="l">
          <str val="button"/>
         </att>
         <copyOf line="1580" flags="vc">
          <filter flags="b">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
           <vc op="ne" comp="CCC">
            <fn name="local-name">
             <dot type="attribute()"/>
            </fn>
            <str val="submission"/>
           </vc>
          </filter>
         </copyOf>
         <choose line="1581">
          <and op="and">
           <fn name="exists">
            <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
           </fn>
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <varRef name="submissions" slot="0"/>
            <atomSing diag="0|1||map:contains">
             <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
            </atomSing>
           </ifCall>
          </and>
          <att line="1582" name="data-submit" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}submission" chk="0"/>
           </convert>
          </att>
         </choose>
         <copyOf line="1584" flags="vc">
          <varRef name="innerbody" slot="1"/>
         </copyOf>
        </sequence>
       </elem>
      </choose>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="6" flags="s" line="1307" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='select';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1308">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1311" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element()"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="1317" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="1318" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="3">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="1319" type="element()"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="1324" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="1325" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="4">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1326" type="element()"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="1327" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="1332" var="instanceField" as="node()?" slot="4" eval="7">
         <treat line="1333" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
          <check card="?" diag="3|0|XTTE0570|instanceField">
           <callT name="getReferencedInstanceField" bSlot="5">
            <withParam name="Q{}refi" flags="c" as="xs:string">
             <varRef line="1334" name="refi" slot="3"/>
            </withParam>
           </callT>
          </check>
         </treat>
         <let line="1339" var="actions" as="map(*)*" slot="5" eval="8">
          <treat line="1340" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
           <callT name="setActions" bSlot="6">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1341" type="element()"/>
            </withParam>
            <withParam name="Q{}nodeset" flags="t" as="xs:string">
             <varRef line="1342" name="refi" slot="3"/>
            </withParam>
           </callT>
          </treat>
          <sequence line="1346">
           <choose>
            <fn name="exists">
             <varRef name="actions" slot="5"/>
            </fn>
            <ifCall line="1347" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="addAction"/>
             <arrayBlock>
              <varRef name="myid" slot="1"/>
              <varRef name="actions" slot="5"/>
             </arrayBlock>
            </ifCall>
           </choose>
           <elem line="1364" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
            <sequence>
             <att name="class" flags="l">
              <str val="xforms-select"/>
             </att>
             <applyT line="1365" bSlot="7">
              <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
             </applyT>
             <elem line="1368" name="select" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
              <sequence>
               <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="8" eval="7">
                <dot type="element()"/>
               </ufCall>
               <copyOf line="1369" flags="vc">
                <except op="except">
                 <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                 <docOrder intra="1">
                  <sequence>
                   <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
                   <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
                   <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
                  </sequence>
                 </docOrder>
                </except>
               </copyOf>
               <att line="1371" name="data-ref" flags="l">
                <varRef name="refi" slot="3"/>
               </att>
               <att line="1372" name="data-element" flags="l">
                <lastOf line="1362">
                 <fn name="tokenize">
                  <varRef name="refi" slot="3"/>
                  <str val="/"/>
                  <str val=""/>
                 </fn>
                </lastOf>
               </att>
               <choose line="1374">
                <and op="and">
                 <fn name="exists">
                  <varRef name="bindingi" slot="2"/>
                 </fn>
                 <fn name="exists">
                  <slash simple="1">
                   <varRef name="bindingi" slot="2"/>
                   <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                  </slash>
                 </fn>
                </and>
                <att line="1375" name="data-constraint" flags="l">
                 <convert from="xs:untypedAtomic" to="xs:string">
                  <data>
                   <slash simple="1">
                    <varRef name="bindingi" slot="2"/>
                    <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                   </slash>
                  </data>
                 </convert>
                </att>
               </choose>
               <choose line="1378">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <fn name="local-name">
                  <dot type="element()"/>
                 </fn>
                 <str val="select"/>
                </vc>
                <sequence line="1381">
                 <att name="multiple" flags="l">
                  <str val="true"/>
                 </att>
                 <att name="size" flags="l">
                  <convert from="xs:integer" to="xs:string">
                   <fn name="count">
                    <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                   </fn>
                  </convert>
                 </att>
                </sequence>
               </choose>
               <choose line="1384">
                <fn name="exists">
                 <varRef name="actions" slot="5"/>
                </fn>
                <att line="1385" name="data-action" flags="l">
                 <varRef name="myid" slot="1"/>
                </att>
               </choose>
               <applyT line="1388" bSlot="9">
                <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                <withParam name="Q{}selectedValue" as="xs:string">
                 <choose line="1353">
                  <fn name="exists">
                   <varRef name="instanceField" slot="4"/>
                  </fn>
                  <cvUntyped line="1354" to="xs:string">
                   <cast as="xs:untypedAtomic" emptiable="0">
                    <fn name="string">
                     <convert from="xs:anyAtomicType" to="xs:string">
                      <data>
                       <varRef name="instanceField" slot="4"/>
                      </data>
                     </convert>
                    </fn>
                   </cast>
                  </cvUntyped>
                  <true/>
                  <str val=""/>
                 </choose>
                </withParam>
               </applyT>
              </sequence>
             </elem>
            </sequence>
           </elem>
          </sequence>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="1" minImp="0" slots="0" flags="s" line="1426" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1429" name="label" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
     <choose>
      <fn name="exists">
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </fn>
      <applyT line="1430" bSlot="41">
       <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </applyT>
      <true/>
      <valueOf flags="l">
       <str val="&#160;"/>
      </valueOf>
     </choose>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="13" rank="1" minImp="0" slots="1" flags="s" line="1462" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}group)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='group';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1464" var="refi" as="xs:string?" slot="0" eval="7">
     <choose line="1466">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
      </fn>
      <cvUntyped to="xs:string">
       <attVal name="Q{}nodeset" chk="0"/>
      </cvUntyped>
      <fn line="1467" name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
      </fn>
      <cvUntyped line="1467" to="xs:string">
       <attVal name="Q{}ref" chk="0"/>
      </cvUntyped>
     </choose>
     <elem line="1473" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
      <sequence>
       <choose>
        <fn name="exists">
         <varRef name="refi" slot="0"/>
        </fn>
        <att line="1474" name="data-group-ref" flags="l">
         <varRef name="refi" slot="0"/>
        </att>
       </choose>
       <choose line="1476">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
        </fn>
        <att line="1477" name="id" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}id" chk="0"/>
         </convert>
        </att>
       </choose>
       <applyT line="1479" bSlot="42">
        <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <withParam name="Q{}nodeset" flags="t" as="xs:string?">
         <choose line="1480">
          <fn name="exists">
           <varRef name="refi" slot="0"/>
          </fn>
          <varRef name="refi" slot="0"/>
          <true/>
          <str val=""/>
         </choose>
        </withParam>
       </applyT>
      </sequence>
     </elem>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1791" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}unload)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='unload';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1801" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1802" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1803" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1815">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1816" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1791" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}show)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='show';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1801" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1802" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1803" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1815">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1816" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="9" rank="0" minImp="0" slots="0" flags="s" line="1405" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1407" flags="cin">
     <applyT role="content" bSlot="43">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="2" minImp="0" slots="0" flags="s" line="1416" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===3;"/>
     <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1416" name="ancestor" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="9" rank="0" minImp="0" slots="0" flags="s" line="1405" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
    <copy role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1407" flags="cin">
     <applyT role="content" bSlot="43">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="55" binds="1">
  <template name="Q{}getDataRef" flags="os" line="2854" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2855">
    <param name="Q{}this" slot="0" flags="r" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="2856" name="Q{}nodeset" slot="1" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="2857" name="Q{}bindingi" slot="2" as="node()?">
     <empty role="select"/>
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|bindingi">
      <check card="?" diag="8|0|XTTE0590|bindingi">
       <supplied slot="2"/>
      </check>
     </treat>
    </param>
    <let line="2865" var="this-ref" as="xs:string?" slot="3" eval="7">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
       </slash>
      </fn>
      <fn name="normalize-space">
       <cast as="xs:string" emptiable="1">
        <data>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
         </slash>
        </data>
       </cast>
      </fn>
      <fn name="exists">
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
       </slash>
      </fn>
      <fn name="normalize-space">
       <cast as="xs:string" emptiable="1">
        <data>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </slash>
        </data>
       </cast>
      </fn>
     </choose>
     <choose line="2869">
      <fn name="exists">
       <varRef name="bindingi" slot="2"/>
      </fn>
      <cvUntyped line="2880" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <choose>
           <fn name="exists">
            <slash simple="1">
             <varRef name="bindingi" slot="2"/>
             <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
            </slash>
           </fn>
           <data>
            <slash simple="1">
             <varRef name="bindingi" slot="2"/>
             <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
            </slash>
           </data>
           <true/>
           <data>
            <slash simple="1">
             <varRef name="bindingi" slot="2"/>
             <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
            </slash>
           </data>
          </choose>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </cvUntyped>
      <fn line="2882" name="exists">
       <varRef name="this-ref" slot="3"/>
      </fn>
      <ufCall line="2883" name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
       <varRef name="nodeset" slot="1"/>
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <varRef name="this-ref" slot="3"/>
       </check>
      </ufCall>
      <true/>
      <cvUntyped line="2886" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <varRef name="nodeset" slot="1"/>
       </cast>
      </cvUntyped>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id="57" binds="">
  <mode name="Q{}xforms-action" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="2" rank="0" minImp="0" slots="1" flags="s" line="1929" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}setvalue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='setvalue';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1930">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <elem line="1933" name="setvalue" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
      <sequence>
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
        </fn>
        <att line="1935" name="value" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <cast as="xs:untypedAtomic" emptiable="0">
           <fn name="string">
            <convert from="xs:untypedAtomic" to="xs:string">
             <attVal name="Q{}value" chk="0"/>
            </convert>
           </fn>
          </cast>
         </convert>
        </att>
       </choose>
       <choose line="1938">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </fn>
        <elem line="1941" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1942" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1945" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}ref" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1950">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </fn>
        <elem line="1953" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1954" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1957" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}nodeset" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1963">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </fn>
        <elem line="1965" name="position" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}position" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1968">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </fn>
        <elem line="1970" name="at" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}at" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1973">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </fn>
        <elem line="1975" name="if" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}if" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1978">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </fn>
        <elem line="1980" name="while" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}while" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1984">
        <fn name="exists">
         <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
        </fn>
        <elem line="1986" name="value" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <dot type="element(Q{http://www.w3.org/2002/xforms}setvalue)"/>
           </data>
          </convert>
         </valueOf>
        </elem>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="1" flags="s" line="1827" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}insert)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='insert';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1828">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <elem line="1830" name="insert" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
      <sequence>
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </fn>
        <elem line="1833" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1834" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1837" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}ref" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1842">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </fn>
        <elem line="1845" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1846" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1849" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}nodeset" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1855">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </fn>
        <elem line="1857" name="position" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}position" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1860">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </fn>
        <elem line="1862" name="at" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}at" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1865">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </fn>
        <elem line="1867" name="if" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}if" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1870">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </fn>
        <elem line="1872" name="while" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}while" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="1" flags="s" line="1878" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}delete)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='delete';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1879">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <elem line="1881" name="delete" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
      <sequence>
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </fn>
        <elem line="1884" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1885" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1888" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}ref" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1893">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </fn>
        <elem line="1896" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1897" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1900" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}nodeset" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1906">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </fn>
        <elem line="1908" name="position" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}position" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1911">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </fn>
        <elem line="1913" name="at" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}at" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1916">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </fn>
        <elem line="1918" name="if" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}if" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1921">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </fn>
        <elem line="1923" name="while" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}while" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="0" minImp="0" slots="1" flags="s" line="1993" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}reset)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='reset';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1994">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <elem line="1996" name="reset" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
      <sequence>
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </fn>
        <elem line="1999" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="2000" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="2003" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}ref" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="2008">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </fn>
        <elem line="2011" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="2012" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="2015" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}nodeset" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="2021">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </fn>
        <elem line="2023" name="position" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}position" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="2026">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </fn>
        <elem line="2028" name="at" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}at" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="2031">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </fn>
        <elem line="2033" name="if" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}if" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="2036">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </fn>
        <elem line="2038" name="while" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}while" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="2041">
        <fn name="exists">
         <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
        </fn>
        <elem line="2043" name="event" nsuri="" flags="l">
         <valueOf flags="l">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </valueOf>
        </elem>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="30" binds="18">
  <template name="Q{}applyNestedActions" flags="os" line="3145" module="saxon-xforms.xsl" slots="2">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3146">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3147" name="Q{}action-name" slot="1" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|action-name">
      <check card="1" diag="8|0|XTTE0590|action-name">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <choose line="3149">
     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
      <varRef name="action-map" slot="0"/>
      <varRef name="action-name" slot="1"/>
     </ifCall>
     <forEach line="3154">
      <ifCall line="3150" name="Q{http://www.w3.org/2005/xpath-functions/array}flatten" type="item()*">
       <treat as="array(map(*))" jsTest="function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isArray(item) &amp;&amp; SaxonJS.U.ForArray(item.value).every(function(seq){return c(seq.length) &amp;&amp; SaxonJS.U.ForArray(seq).every(v)});" diag="3|0|XTTE0570|actionsArray">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}find" type="function(*)">
         <varRef name="action-map" slot="0"/>
         <varRef name="action-name" slot="1"/>
        </ifCall>
       </treat>
      </ifCall>
      <callT line="3155" name="applyActions" bSlot="0"/>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="6" binds="22">
  <function name="Q{http://www.w3.org/2002/xforms}setInstance-JS" line="2747" module="saxon-xforms.xsl" eval="7" flags="pU" as="empty-sequence()" slots="2">
   <arg name="ref" as="xs:string"/>
   <arg name="updatedInstance" as="element()"/>
   <check role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2755" card="°" diag="5|0|XTTE0780|xforms:setInstance-JS">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="setInstance"/>
     <arrayBlock>
      <check line="2753" card="1" diag="3|0|XTTE0570|this-instance-id">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
         <varRef name="ref" slot="0"/>
        </ufCall>
        <str val="instance-id"/>
       </ifCall>
      </check>
      <varRef name="updatedInstance" slot="1"/>
     </arrayBlock>
    </ifCall>
   </check>
  </function>
 </co>
 <co id="3" binds="37 22">
  <function name="Q{http://www.w3.org/2002/xforms}getInstance-JS" line="2722" module="saxon-xforms.xsl" eval="7" flags="pU" as="element()?" slots="1">
   <arg name="ref" as="xs:string"/>
   <tailCallLoop role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2726">
    <choose>
     <fn name="not">
      <varRef name="ref" slot="0"/>
     </fn>
     <treat line="2727" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="5|0|XTTE0780|xforms:getInstance-JS">
      <message>
       <valueOf role="select">
        <str val="[xforms:getInstance-JS] Empty ref supplied, no instance will be returned"/>
       </valueOf>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
     </treat>
     <true/>
     <ufCall line="2732" name="Q{http://www.w3.org/2002/xforms}instance" tailCall="foreign" bSlot="0" eval="7">
      <check line="2730" card="1" diag="3|0|XTTE0570|this-instance-id">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="1" eval="6">
         <varRef name="ref" slot="0"/>
        </ufCall>
        <str val="instance-id"/>
       </ifCall>
      </check>
     </ufCall>
    </choose>
   </tailCallLoop>
  </function>
 </co>
 <co id="22" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getInstanceMap" line="2685" module="saxon-xforms.xsl" eval="8" flags="pU" as="map(xs:string, xs:string)" slots="3">
   <arg name="nodeset" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2706" var="vv:v0" as="map(xs:string, xs:string)+" slot="1" eval="4">
    <sequence>
     <map size="1">
      <str val="instance-id"/>
      <str val="saxon-forms-default"/>
     </map>
     <ifCall line="2707" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
      <str val="xpath"/>
      <fn name="normalize-space">
       <varRef name="nodeset" slot="0"/>
      </fn>
     </ifCall>
    </sequence>
    <ifCall line="2690" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
     <analyzeString>
      <fn role="select" name="normalize-space">
       <varRef name="nodeset" slot="0"/>
      </fn>
      <str role="regex" val="^instance\s*\(\s*'(.*)'\s*\)\s*(/\s*(.*)|)$"/>
      <str role="flags" val=""/>
      <let role="matching" line="2692" var="xpath" as="xs:string" slot="2" eval="7">
       <choose line="2694">
        <fn name="regex-group">
         <int val="2"/>
        </fn>
        <fn line="2695" name="regex-group">
         <int val="3"/>
        </fn>
        <true/>
        <str val=""/>
       </choose>
       <sequence line="2702">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
         <str val="instance-id"/>
         <fn name="regex-group">
          <int val="1"/>
         </fn>
        </ifCall>
        <ifCall line="2703" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
         <str val="xpath"/>
         <varRef name="xpath" slot="2"/>
        </ifCall>
       </sequence>
      </let>
      <varRef role="nonMatching" line="2706" name="vv:v0" slot="1"/>
     </analyzeString>
     <map size="2">
      <str val="duplicates"/>
      <str val="reject"/>
      <str val="duplicates-error-code"/>
      <str val="XTDE3365"/>
     </map>
    </ifCall>
   </let>
  </function>
 </co>
 <co id="2" binds="22">
  <function name="Q{http://www.w3.org/2002/xforms}getInstanceId" line="2672" module="saxon-xforms.xsl" eval="8" flags="pU" as="xs:string" slots="1">
   <arg name="nodeset" as="xs:string"/>
   <cvUntyped role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2675" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="string">
      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
       <ufCall line="2674" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
        <varRef name="nodeset" slot="0"/>
       </ufCall>
       <str val="instance-id"/>
      </ifCall>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="58" binds="">
  <globalVariable name="Q{}debugMode" type="xs:boolean" line="62" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <true/>
  </globalVariable>
 </co>
 <co id="59" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getWhileStatement" line="644" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:string?" slots="3">
   <arg name="map" as="map(*)"/>
   <choose role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="647">
    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
     <varRef name="map" slot="0"/>
     <str val="@while"/>
    </ifCall>
    <treat line="648" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getWhileStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getWhileStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="map" slot="0"/>
         <str val="@while"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
    <true/>
    <treat line="651" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getWhileStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getWhileStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:get">
          <check card="1" diag="0|0||map:get">
           <let var="vv:LHS631030076" as="map(*)" slot="1" eval="1">
            <varRef name="map" slot="0"/>
            <for var="vv:STAR727399423" as="xs:anyAtomicType" slot="2">
             <ifCall role="in" name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
              <varRef name="vv:LHS631030076" slot="1"/>
             </ifCall>
             <ifCall role="return" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
              <varRef name="vv:LHS631030076" slot="1"/>
              <varRef name="vv:STAR727399423" slot="2"/>
             </ifCall>
            </for>
           </let>
          </check>
         </treat>
         <str val="@while"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </choose>
  </function>
 </co>
 <co id="60" binds="3 14 2 18">
  <template name="Q{}DOMActivate" flags="os" line="3640" module="saxon-xforms.xsl" slots="6">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3641">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="3643" var="actions" as="map(*)?" slot="1" eval="7">
     <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getAction"/>
       <arrayBlock>
        <fn name="string">
         <slash simple="1">
          <varRef name="form-control" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
         </slash>
        </fn>
       </arrayBlock>
      </ifCall>
     </treat>
     <let line="3645" var="refi" as="attribute(Q{}data-ref)?" slot="2" eval="8">
      <slash simple="1">
       <varRef name="form-control" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
      </slash>
      <let line="3648" var="instanceXML" as="element()?" slot="3" eval="7">
       <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
        <check card="1" diag="0|0||xforms:getInstance-JS">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="refi" slot="2"/>
          </data>
         </cvUntyped>
        </check>
       </ufCall>
       <let line="3650" var="updatedInstanceXML" as="element()?" slot="4" eval="7">
        <choose line="3651">
         <fn name="exists">
          <varRef name="instanceXML" slot="3"/>
         </fn>
         <treat line="3652" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
          <check card="?" diag="3|0|XTTE0570|updatedInstanceXML">
           <applyT mode="Q{}form-check-initial" bSlot="1">
            <varRef role="select" name="instanceXML" slot="3"/>
            <withParam name="Q{}instance-id" as="xs:string">
             <ufCall line="3646" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="2" eval="7">
              <check card="1" diag="0|0||xforms:getInstanceId">
               <cvUntyped to="xs:string">
                <data>
                 <varRef name="refi" slot="2"/>
                </data>
               </cvUntyped>
              </check>
             </ufCall>
            </withParam>
           </applyT>
          </check>
         </treat>
        </choose>
        <forEach line="3658">
         <varRef name="actions" slot="1"/>
         <let line="3659" var="action-map" as="map(*)" slot="5" eval="7">
          <dot type="map(*)"/>
          <choose line="3662">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <varRef name="action-map" slot="5"/>
            <str val="@event"/>
           </ifCall>
           <choose line="3663">
            <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <varRef name="action-map" slot="5"/>
               <str val="@event"/>
              </ifCall>
             </data>
             <str val="DOMActivate"/>
            </gc>
            <callT line="3664" name="applyActions" bSlot="3" flags="t">
             <withParam name="Q{}action-map" flags="t" as="item()">
              <varRef line="3665" name="action-map" slot="5"/>
             </withParam>
             <withParam name="Q{}instanceXML" flags="t" as="element()?">
              <varRef line="3666" name="updatedInstanceXML" slot="4"/>
             </withParam>
            </callT>
           </choose>
          </choose>
         </let>
        </forEach>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="56" binds="11">
  <template name="Q{}setActions" flags="os" line="3021" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3022">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <applyT line="3024" flags="t" bSlot="0">
     <union role="select" op="|">
      <union op="|">
       <union op="|">
        <union op="|">
         <union op="|">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='action';"/>
          </slash>
          <filter flags="b">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="child" nodeTest="Q{http://www.w3.org/2002/xforms}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2002/xforms'"/>
           </slash>
           <gc op="=" card="N:1" comp="CCC">
            <literal count="15">
             <str val="setvalue"/>
             <str val="insert"/>
             <str val="delete"/>
             <str val="setindex"/>
             <str val="toggle"/>
             <str val="setfocus"/>
             <str val="dispatch"/>
             <str val="rebuild"/>
             <str val="recalculate"/>
             <str val="revalidate"/>
             <str val="refresh"/>
             <str val="reset"/>
             <str val="load"/>
             <str val="send"/>
             <str val="message"/>
            </literal>
            <fn name="local-name">
             <dot type="Q{http://www.w3.org/2002/xforms}*"/>
            </fn>
           </gc>
          </filter>
         </union>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}show)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='show';"/>
         </slash>
        </union>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hide)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hide';"/>
        </slash>
       </union>
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='script';"/>
       </slash>
      </union>
      <slash simple="1">
       <varRef name="this" slot="0"/>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}unload)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='unload';"/>
      </slash>
     </union>
    </applyT>
   </sequence>
  </template>
 </co>
 <co id="61" binds="">
  <template name="Q{}serverError" flags="os" line="870" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="871">
    <param name="Q{}responseMap" slot="0" flags="i" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|responseMap">
      <check card="1" diag="8|0|XTTE0590|responseMap">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="872">
     <sequence role="select">
      <valueOf>
       <str val="Server side error HTTP response - "/>
      </valueOf>
      <valueOf>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="responseMap" slot="0"/>
          <str val="status"/>
         </ifCall>
        </atomSing>
        <str val=" "/>
        <atomSing card="?" diag="0|2||fn:concat">
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="responseMap" slot="0"/>
          <str val="message"/>
         </ifCall>
        </atomSing>
       </fn>
      </valueOf>
     </sequence>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="62" binds="63">
  <function name="Q{http://www.w3.org/2002/xforms}convert-xml-to-jxml" line="2075" module="saxon-xforms.xsl" eval="7" flags="pU" as="node()" slots="2">
   <arg name="xinstance" as="node()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2077" var="rep-xml" as="document-node()" slot="1" eval="7">
    <doc line="2079" validation="preserve">
     <elem name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl">
      <applyT mode="Q{}json-xml" bSlot="0">
       <varRef role="select" name="xinstance" slot="0"/>
      </applyT>
     </elem>
    </doc>
    <varRef line="2082" name="rep-xml" slot="1"/>
   </let>
  </function>
 </co>
 <co id="53" binds="10">
  <template name="Q{}setAction" flags="os" line="3167" module="saxon-xforms.xsl" slots="2">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3168">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3169" name="Q{}nodeset" slot="1" flags="t">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <ifCall line="3172" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
     <sequence>
      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
       <str val="name"/>
       <fn name="local-name">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
         <dot flags="a"/>
        </treat>
       </fn>
      </ifCall>
      <choose line="3174">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
        </slash>
       </fn>
       <ifCall line="3175" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@value"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="3177">
       <and op="and">
        <fn name="empty">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
         </slash>
        </fn>
        <fn name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
         </slash>
        </fn>
       </and>
       <ifCall line="3178" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="value"/>
        <fn name="string">
         <dot flags="a"/>
        </fn>
       </ifCall>
      </choose>
      <ifCall line="3181" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
       <str val="@ref"/>
       <choose line="3183">
        <fn name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </slash>
        </fn>
        <fn line="3184" name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </slash>
        </fn>
        <fn line="3186" name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
         </slash>
        </fn>
        <fn line="3187" name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
         </slash>
        </fn>
        <true/>
        <str val=""/>
       </choose>
      </ifCall>
      <choose line="3200">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </slash>
       </fn>
       <ifCall line="3201" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@position"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="3203">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </slash>
       </fn>
       <ifCall line="3204" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@at"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="3208">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </slash>
       </fn>
       <ifCall line="3209" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@if"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="3213">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </slash>
       </fn>
       <ifCall line="3214" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@while"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="3217">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
        </slash>
       </fn>
       <ifCall line="3218" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@event"/>
        <fn name="string">
         <check card="?" diag="0|0||fn:string">
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
          </slash>
         </check>
        </fn>
       </ifCall>
      </choose>
      <choose line="3220">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
        </slash>
       </fn>
       <ifCall line="3221" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@submission"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <treat line="3224" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="18|0|XTTE3375|">
       <forEachGroup algorithm="by">
        <slash role="select" simple="1">
         <varRef name="this" slot="0"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <fn role="key" name="local-name">
         <dot type="element()"/>
        </fn>
        <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
        <applyT role="content" line="3225" mode="Q{}xforms-action-map" bSlot="0">
         <dot role="select" type="element()"/>
        </applyT>
       </forEachGroup>
      </treat>
     </sequence>
     <map size="2">
      <str val="duplicates"/>
      <str val="reject"/>
      <str val="duplicates-error-code"/>
      <str val="XTDE3365"/>
     </map>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id="64" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}check-constraints-on-fields" line="768" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="4">
   <arg name="updatedInstanceXML" as="document-node()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="771" var="constraint-fieldsi" as="element()*" slot="1" eval="8">
    <filter flags="b">
     <slash simple="1">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
      <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </slash>
     <fn name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-constraint)" jsTest="return item.name==='data-constraint'"/>
     </fn>
    </filter>
    <forEach line="775">
     <varRef name="constraint-fieldsi" slot="1"/>
     <let line="776" var="contexti" as="node()" slot="2" eval="7">
      <treat line="777" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|contexti">
       <check card="1" diag="3|0|XTTE0570|contexti">
        <evaluate dxns="">
         <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
          <cvUntyped to="xs:string">
           <attVal name="Q{}data-ref" chk="0"/>
          </cvUntyped>
         </check>
         <varRef role="cxt" name="updatedInstanceXML" slot="0"/>
         <varRef role="nsCxt" name="updatedInstanceXML" slot="0"/>
         <str role="sa" val="no"/>
         <map role="wp" size="0"/>
        </evaluate>
       </check>
      </treat>
      <let line="780" var="resulti" as="xs:boolean" slot="3" eval="7">
       <treat line="783" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|resulti">
        <check card="1" diag="3|0|XTTE0570|resulti">
         <cvUntyped to="xs:boolean">
          <data>
           <evaluate dxns="">
            <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
             <cvUntyped to="xs:string">
              <attVal name="Q{}data-constraint" chk="0"/>
             </cvUntyped>
            </check>
            <varRef role="cxt" name="contexti" slot="2"/>
            <varRef role="nsCxt" name="contexti" slot="2"/>
            <str role="sa" val="no"/>
            <map role="wp" size="0"/>
           </evaluate>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <choose line="791">
        <fn name="not">
         <varRef name="resulti" slot="3"/>
        </fn>
        <dot type="element()"/>
       </choose>
      </let>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id="40" binds="49">
  <mode name="Q{}binding-calculation-initial" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="2361" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2362">
     <param name="Q{}instance-id" slot="0" as="xs:string">
      <str role="select" val="saxon-forms-default"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
       <check card="1" diag="8|0|XTTE0590|instance-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="2364" var="calculationMap" as="map(xs:string, xs:string)" slot="1" eval="7">
      <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|calculationMap">
       <check card="1" diag="3|0|XTTE0570|calculationMap">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="getCalculationMap"/>
         <arrayBlock/>
        </ifCall>
       </check>
      </treat>
      <copy line="2378" flags="cin">
       <applyT role="content" mode="Q{}binding-calculation" bSlot="0">
        <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <withParam name="Q{}curPath" as="xs:string">
         <choose line="2368">
          <vc op="eq" onEmpty="0" comp="CCC">
           <varRef name="instance-id" slot="0"/>
           <str val="saxon-forms-default"/>
          </vc>
          <str val=""/>
          <true/>
          <cvUntyped line="2372" to="xs:string">
           <cast as="xs:untypedAtomic" emptiable="0">
            <fn name="concat">
             <str val="instance('"/>
             <varRef name="instance-id" slot="0"/>
             <str val="')/"/>
            </fn>
           </cast>
          </cvUntyped>
         </choose>
        </withParam>
        <withParam name="Q{}calculationMap" flags="t" as="map(xs:string, xs:string)">
         <varRef line="2380" name="calculationMap" slot="1"/>
        </withParam>
       </applyT>
      </copy>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="65" binds="17 17">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onchange" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="s" line="600" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="601" name="xforms-value-changed" bSlot="0" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="602" type="element(Q{}input)"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="s" line="610" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='select';"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="611" name="xforms-value-changed" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="612" type="element(Q{}select)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="46" binds="38 42 66 50 50 67 11">
  <template name="Q{}xformsjs-main" flags="os" line="100" module="saxon-xforms.xsl" slots="21">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="500" var="vv:v1" as="item()" slot="5" eval="13">
    <check card="1" diag="0|0||ixsl:call">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
    </check>
    <let line="470" var="vv:v0" as="item()" slot="6" eval="13">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <sequence line="101">
      <param name="Q{}xforms-doc" slot="0" as="document-node()?">
       <empty role="select"/>
       <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|xforms-doc">
        <check card="?" diag="8|0|XTTE0590|xforms-doc">
         <supplied slot="0"/>
        </check>
       </treat>
      </param>
      <param line="102" name="Q{}xforms-file" slot="1" as="xs:string?">
       <empty role="select"/>
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xforms-file">
        <check card="?" diag="8|0|XTTE0590|xforms-file">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="1"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <param line="111" name="Q{}instance-xml" slot="2" as="document-node()*">
       <empty role="select"/>
       <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|instance-xml">
        <supplied slot="2"/>
       </treat>
      </param>
      <param line="112" name="Q{}instance-docs" slot="3" as="map(*)?">
       <empty role="select"/>
       <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|instance-docs">
        <check card="?" diag="8|0|XTTE0590|instance-docs">
         <supplied slot="3"/>
        </check>
       </treat>
      </param>
      <param line="114" name="Q{}xFormsId" slot="4" as="xs:string">
       <gVarRef role="select" name="Q{}xform-html-id" bSlot="0"/>
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xFormsId">
        <check card="1" diag="8|0|XTTE0590|xFormsId">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="4"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <let line="122" var="xforms-doci" as="document-node()?" slot="7" eval="7">
       <choose>
        <fn name="empty">
         <varRef name="xforms-doc" slot="0"/>
        </fn>
        <fn name="doc">
         <varRef name="xforms-file" slot="1"/>
        </fn>
        <true/>
        <varRef name="xforms-doc" slot="0"/>
       </choose>
       <let line="124" var="xform" as="element(Q{http://www.w3.org/2002/xforms}xform)" slot="8" eval="7">
        <treat as="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';" diag="3|0|XTTE0570|xform">
         <ufCall name="Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations" tailCall="false" bSlot="1" eval="4">
          <check card="1" diag="0|0||xforms:addNamespaceDeclarations">
           <slash simple="1">
            <varRef name="xforms-doci" slot="7"/>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
          </check>
         </ufCall>
        </treat>
        <let line="128" var="xforms-instances" as="map(xs:string, element())" slot="9" eval="7">
         <choose line="130">
          <fn name="empty">
           <varRef name="instance-docs" slot="3"/>
          </fn>
          <treat line="133" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|xforms-instances">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
            <choose>
             <fn name="empty">
              <varRef name="instance-xml" slot="2"/>
             </fn>
             <forEach line="134">
              <slash>
               <slash>
                <slash simple="1">
                 <varRef name="xforms-doci" slot="7"/>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                </slash>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
              </slash>
              <let line="135" var="instance-with-explicit-namespaces" as="element()" slot="10" eval="7">
               <treat line="136" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|instance-with-explicit-namespaces">
                <check card="1" diag="3|0|XTTE0570|instance-with-explicit-namespaces">
                 <applyT mode="Q{}namespace-fix" bSlot="2">
                  <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                 </applyT>
                </check>
               </treat>
               <ifCall line="145" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                <check card="1" diag="0|0||map:entry">
                 <cast as="xs:string" emptiable="1">
                  <choose>
                   <fn name="exists">
                    <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                   </fn>
                   <attVal name="Q{}id" chk="0"/>
                   <true/>
                   <str val="saxon-forms-default"/>
                  </choose>
                 </cast>
                </check>
                <varRef name="instance-with-explicit-namespaces" slot="10"/>
               </ifCall>
              </let>
             </forEach>
             <true/>
             <ifCall line="155" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
              <check card="1" diag="0|0||map:entry">
               <cast as="xs:string" emptiable="1">
                <choose>
                 <fn name="exists">
                  <slash>
                   <conditionalSort>
                    <fn name="exists">
                     <tail start="2">
                      <varRef name="instance-xml" slot="2"/>
                     </tail>
                    </fn>
                    <docOrder intra="0">
                     <slash>
                      <varRef name="instance-xml" slot="2"/>
                      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                     </slash>
                    </docOrder>
                   </conditionalSort>
                   <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                  </slash>
                 </fn>
                 <atomSing card="?" diag="2|0||cast as">
                  <slash>
                   <conditionalSort>
                    <fn name="exists">
                     <tail start="2">
                      <varRef name="instance-xml" slot="2"/>
                     </tail>
                    </fn>
                    <docOrder intra="0">
                     <slash>
                      <varRef name="instance-xml" slot="2"/>
                      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                     </slash>
                    </docOrder>
                   </conditionalSort>
                   <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                  </slash>
                 </atomSing>
                 <true/>
                 <str val="saxon-forms-default"/>
                </choose>
               </cast>
              </check>
              <conditionalSort>
               <fn name="exists">
                <tail start="2">
                 <varRef name="instance-xml" slot="2"/>
                </tail>
               </fn>
               <docOrder intra="0">
                <slash>
                 <varRef name="instance-xml" slot="2"/>
                 <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                </slash>
               </docOrder>
              </conditionalSort>
             </ifCall>
            </choose>
            <map size="2">
             <str val="duplicates"/>
             <str val="reject"/>
             <str val="duplicates-error-code"/>
             <str val="XTDE3365"/>
            </map>
           </ifCall>
          </treat>
          <true/>
          <treat line="161" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|xforms-instances">
           <check card="1" diag="3|0|XTTE0570|xforms-instances">
            <varRef name="instance-docs" slot="3"/>
           </check>
          </treat>
         </choose>
         <let line="167" var="default-instance" as="element()" slot="11" eval="7">
          <choose line="169">
           <fn name="empty">
            <varRef name="instance-docs" slot="3"/>
           </fn>
           <choose line="171">
            <fn name="exists">
             <filter flags="b">
              <slash>
               <slash>
                <slash simple="1">
                 <varRef name="xforms-doci" slot="7"/>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                </slash>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
              </slash>
              <fn name="empty">
               <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
              </fn>
             </filter>
            </fn>
            <check line="172" card="1" diag="3|0|XTTE0570|default-instance">
             <slash>
              <slash>
               <slash>
                <slash simple="1">
                 <varRef name="xforms-doci" slot="7"/>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                </slash>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <first>
                <filter flags="b">
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
                 <fn name="empty">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </fn>
                </filter>
               </first>
              </slash>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
            </check>
            <true/>
            <check line="175" card="1" diag="3|0|XTTE0570|default-instance">
             <slash>
              <slash>
               <slash>
                <slash simple="1">
                 <varRef name="xforms-doci" slot="7"/>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                </slash>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <first>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
               </first>
              </slash>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
            </check>
           </choose>
           <true/>
           <treat line="181" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|default-instance">
            <check card="1" diag="3|0|XTTE0570|default-instance">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="getDefaultInstance"/>
              <arrayBlock/>
             </ifCall>
            </check>
           </treat>
          </choose>
          <let line="187" var="bindings" as="map(xs:string, element(Q{http://www.w3.org/2002/xforms}bind))" slot="12" eval="8">
           <ifCall line="189" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
            <forEach>
             <slash>
              <slash>
               <slash simple="1">
                <varRef name="xforms-doci" slot="7"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
              </slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}bind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='bind';"/>
             </slash>
             <ifCall line="196" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
              <check card="1" diag="0|0||map:entry">
               <cast as="xs:string" emptiable="1">
                <choose>
                 <fn name="exists">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </fn>
                 <attVal name="Q{}id" chk="0"/>
                 <true/>
                 <attVal name="Q{}nodeset" chk="0"/>
                </choose>
               </cast>
              </check>
              <dot type="element(Q{http://www.w3.org/2002/xforms}bind)"/>
             </ifCall>
            </forEach>
            <map size="2">
             <str val="duplicates"/>
             <str val="reject"/>
             <str val="duplicates-error-code"/>
             <str val="XTDE3365"/>
            </map>
           </ifCall>
           <let line="210" var="bindingKeys" as="xs:anyAtomicType*" slot="13" eval="3">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
             <varRef name="bindings" slot="12"/>
            </ifCall>
            <let line="212" var="RelevantBindings" as="map(xs:string, xs:string)" slot="14" eval="7">
             <treat line="214" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|RelevantBindings">
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
               <forEach>
                <varRef name="bindingKeys" slot="13"/>
                <let line="215" var="bindingNode" as="element(Q{http://www.w3.org/2002/xforms}bind)" slot="15" eval="7">
                 <check card="1" diag="3|0|XTTE0570|bindingNode">
                  <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                   <varRef name="bindings" slot="12"/>
                   <cast as="xs:string" emptiable="0">
                    <dot type="xs:anyAtomicType"/>
                   </cast>
                  </ifCall>
                 </check>
                 <choose line="217">
                  <fn name="exists">
                   <filter flags="b">
                    <varRef name="bindingNode" slot="15"/>
                    <fn name="exists">
                     <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                    </fn>
                   </filter>
                  </fn>
                  <ifCall line="219" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                   <check line="218" card="1" diag="3|0|XTTE0570|keyi">
                    <cast as="xs:string" emptiable="1">
                     <data>
                      <slash simple="1">
                       <varRef name="bindingNode" slot="15"/>
                       <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
                      </slash>
                     </data>
                    </cast>
                   </check>
                   <cast as="xs:string" emptiable="1">
                    <data>
                     <slash simple="1">
                      <varRef name="bindingNode" slot="15"/>
                      <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                     </slash>
                    </data>
                   </cast>
                  </ifCall>
                 </choose>
                </let>
               </forEach>
               <map size="2">
                <str val="duplicates"/>
                <str val="reject"/>
                <str val="duplicates-error-code"/>
                <str val="XTDE3365"/>
               </map>
              </ifCall>
             </treat>
             <sequence line="225">
              <message>
               <sequence role="select">
                <valueOf>
                 <str val="[xformsjs-main] RelevantBindings = "/>
                </valueOf>
                <fn name="serialize">
                 <varRef name="RelevantBindings" slot="14"/>
                </fn>
               </sequence>
               <str role="terminate" val="no"/>
               <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
              </message>
              <let line="228" var="CalculationBindings" as="map(xs:string, xs:string)" slot="16" eval="7">
               <treat line="230" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|CalculationBindings">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                 <forEach>
                  <varRef name="bindingKeys" slot="13"/>
                  <let line="231" var="bindingNode" as="element(Q{http://www.w3.org/2002/xforms}bind)" slot="17" eval="7">
                   <check card="1" diag="3|0|XTTE0570|bindingNode">
                    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                     <varRef name="bindings" slot="12"/>
                     <cast as="xs:string" emptiable="0">
                      <dot type="xs:anyAtomicType"/>
                     </cast>
                    </ifCall>
                   </check>
                   <choose line="233">
                    <fn name="exists">
                     <filter flags="b">
                      <varRef name="bindingNode" slot="17"/>
                      <fn name="exists">
                       <axis name="attribute" nodeTest="attribute(Q{}calculate)" jsTest="return item.name==='calculate'"/>
                      </fn>
                     </filter>
                    </fn>
                    <ifCall line="235" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                     <check line="234" card="1" diag="3|0|XTTE0570|keyi">
                      <cast as="xs:string" emptiable="1">
                       <data>
                        <slash simple="1">
                         <varRef name="bindingNode" slot="17"/>
                         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
                        </slash>
                       </data>
                      </cast>
                     </check>
                     <cast as="xs:string" emptiable="1">
                      <data>
                       <slash simple="1">
                        <varRef name="bindingNode" slot="17"/>
                        <axis name="attribute" nodeTest="attribute(Q{}calculate)" jsTest="return item.name==='calculate'"/>
                       </slash>
                      </data>
                     </cast>
                    </ifCall>
                   </choose>
                  </let>
                 </forEach>
                 <map size="2">
                  <str val="duplicates"/>
                  <str val="reject"/>
                  <str val="duplicates-error-code"/>
                  <str val="XTDE3365"/>
                 </map>
                </ifCall>
               </treat>
               <sequence line="241">
                <message>
                 <sequence role="select">
                  <valueOf>
                   <str val="[xformsjs-main] CalculationBindings = "/>
                  </valueOf>
                  <fn name="serialize">
                   <varRef name="CalculationBindings" slot="16"/>
                  </fn>
                 </sequence>
                 <str role="terminate" val="no"/>
                 <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
                </message>
                <choose line="247">
                 <gc op="=" card="M:N" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                  <data>
                   <slash>
                    <slash simple="1">
                     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                     <axis name="descendant" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
                    </slash>
                    <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                   </slash>
                  </data>
                  <data>
                   <gVarRef name="Q{}xforms-cache-id" bSlot="3"/>
                  </data>
                 </gc>
                 <sequence line="248">
                  <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setXFormsDoc"/>
                   <arrayBlock>
                    <varRef name="xforms-doc" slot="0"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="249" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setXForm"/>
                   <arrayBlock>
                    <varRef name="xform" slot="8"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="250" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setXFormsID"/>
                   <arrayBlock>
                    <varRef name="xFormsId" slot="4"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="251" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setRelevantMap"/>
                   <arrayBlock>
                    <varRef name="RelevantBindings" slot="14"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="252" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setCalculationMap"/>
                   <arrayBlock>
                    <varRef name="CalculationBindings" slot="16"/>
                   </arrayBlock>
                  </ifCall>
                 </sequence>
                 <true/>
                 <sequence line="263">
                  <forEach>
                   <slash simple="1">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                    <axis name="descendant" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
                   </slash>
                   <resultDoc line="272" global="#&#xD;&#xA;#Fri Oct 19 10:15:24 BST 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Fri Oct 19 10:15:24 BST 2018&#xD;&#xA;">
                    <str role="href" val="?."/>
                    <elem role="content" line="273" name="script" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
                     <sequence>
                      <att name="type" flags="l">
                       <str val="text/javascript"/>
                      </att>
                      <att name="id" flags="l">
                       <fn name="string-join">
                        <convert from="xs:anyAtomicType" to="xs:string">
                         <data>
                          <mergeAdj>
                           <gVarRef name="Q{}xforms-cache-id" bSlot="4"/>
                          </mergeAdj>
                         </data>
                        </convert>
                        <str val=" "/>
                       </fn>
                      </att>
                      <valueOf flags="l">
                       <str val="                &#xA;                            var XFormsDoc = null;&#xA;                            var XForm = null;&#xA;                            var defaultInstanceDoc = null;&#xA;                            &#xA;                            // MD 2018: OND's suggestion for multiple instances&#xA;                            var instanceDocs = {};&#xA;                            &#xA;                            var pendingUpdatesMap = null;&#xA;                            var updatesMap = null;&#xA;                            var XFormsID = '"/>
                      </valueOf>
                      <valueOf line="283" flags="l">
                       <varRef name="xFormsId" slot="4"/>
                      </valueOf>
                      <valueOf flags="l">
                       <str val="';&#xA;                            var actions = {};&#xA;                            var submissions = {};&#xA;                            var outputs = {};&#xA;                            var relevantMap = {};&#xA;                            var calculationMap = {};&#xA;                            &#xA;                            var getCurrentDate = function(){&#xA;                                var today = new Date();&#xA;                                var dd = today.getDate();&#xA;                                var mm = today.getMonth()+1; //January is 0!&#xA;                                var yyyy = today.getFullYear();&#xA;                            &#xA;                                if(dd &lt; 10) {&#xA;                                    dd = '0' + dd;&#xA;                                } &#xA;                            &#xA;                                if(mm &lt; 10) {&#xA;                                    mm = '0' + mm;&#xA;                                } &#xA;                            &#xA;                                today = yyyy + '-' + mm + '-' + dd;&#xA;                                return today;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setXFormsDoc = function(doc) {&#xA;                                XFormsDoc = doc;&#xA;                            }&#xA;                            &#xA;                            var getXFormsDoc = function() {&#xA;                                return XFormsDoc;&#xA;                            }&#xA;                            &#xA;                            var setXForm = function(element) {&#xA;                                XForm = element;&#xA;                            }&#xA;                            &#xA;                            var getXForm = function() {&#xA;                                return XForm;&#xA;                            }&#xA;                            &#xA;                            var setXFormsID = function(id) {&#xA;                                XFormsID = id;&#xA;                            }&#xA;                            &#xA;                            var getXFormsID = function() {&#xA;                                return XFormsID;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setInstance = function(name, value) {&#xA;                                instanceDocs[name] = value;&#xA;                            } &#xA;                            &#xA;                            var getInstance = function(name) {&#xA;                                return instanceDocs[name];&#xA;                            }&#xA;                            &#xA;                            &#xA;                            //[OND] Maybe we can just set the key-&gt; value without having to copy the entire instanceDocs object.&#xA;                            var updateInstance = function(instanceDocs, key, value){&#xA;                                instanceDocs[key] = value;&#xA;                                return instanceDocs;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setDefaultInstance = function(doc) {&#xA;                                defaultInstanceDoc = doc;&#xA;                            }&#xA;                            &#xA;                            var getDefaultInstance = function() {&#xA;                                return defaultInstanceDoc;&#xA;                            }&#xA;                            &#xA;                           &#xA;                            var getInstanceKeys = function() {&#xA;                                return Object.keys(instanceDocs);&#xA;                            }&#xA;                            &#xA;                            var setPendingUpdates = function(map1) {&#xA;                                pendingUpdatesMap = map1;&#xA;                            }&#xA;                            &#xA;                            var clearPendingUpdates = function() {&#xA;                                pendingUpdatesMap = null;&#xA;                            }&#xA;                            &#xA;                            var getPendingUpdates = function() {&#xA;                                return pendingUpdatesMap;&#xA;                            }&#xA;                            &#xA;                            var setUpdates = function(map1) {&#xA;                                updatesMap = map1;&#xA;                            }&#xA;                            &#xA;                            var clearUpdates = function() {&#xA;                                updatesMap = null;&#xA;                            }&#xA;                            &#xA;                            var getUpdates = function() {&#xA;                                return updatesMap;&#xA;                            }&#xA;                            &#xA;                            var addAction = function(name, value){&#xA;                                actions[name] = value;&#xA;                            }&#xA;&#xA;                            var getAction = function(name){&#xA;                                return actions[name];&#xA;                            }&#xA;                            &#xA;                            var updateAction = function(actioni, key, value){&#xA;                                actioni[key] = value;&#xA;                                return actioni;&#xA;                            }&#xA;                            &#xA;                            var addSubmission = function(name, value){&#xA;                                submissions[name] = value;&#xA;                            }&#xA;                            &#xA;                            var getSubmission = function(name){&#xA;                                return submissions[name];&#xA;                            }     &#xA;                            &#xA;                            var addOutput = function(name, value){&#xA;                                outputs[name] = value;&#xA;                            }&#xA;                            &#xA;                            var getOutput = function(name){&#xA;                                return outputs[name];&#xA;                            }&#xA;                            &#xA;                            var getOutputKeys = function() {&#xA;                                return Object.keys(outputs);&#xA;                            }&#xA;                            &#xA;                            var setRelevantMap = function(map1) {&#xA;                                relevantMap = map1;                            &#xA;                            }&#xA;                            &#xA;                            var getRelevantMap = function() {&#xA;                                return relevantMap;&#xA;                            }&#xA;                            &#xA;  &#xA;                            var setCalculationMap = function(map1) {&#xA;                                calculationMap = map1;                            &#xA;                            }&#xA;  &#xA;                            var getCalculationMap = function() {&#xA;                                return calculationMap;&#xA;                            }&#xA;  &#xA;                            var startTime = function(name) {&#xA;                                console.time(name);&#xA;                            }&#xA;                            &#xA;                            var endTime = function(name) {&#xA;                                console.timeEnd(name);&#xA;                            }&#xA;                            &#xA;                        "/>
                      </valueOf>
                     </sequence>
                    </elem>
                   </resultDoc>
                  </forEach>
                  <ifCall line="449" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setXFormsDoc"/>
                   <arrayBlock>
                    <varRef name="xforms-doc" slot="0"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="450" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setXForm"/>
                   <arrayBlock>
                    <varRef name="xform" slot="8"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="451" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setDefaultInstance"/>
                   <arrayBlock>
                    <varRef name="default-instance" slot="11"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="452" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setRelevantMap"/>
                   <arrayBlock>
                    <varRef name="RelevantBindings" slot="14"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="453" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setCalculationMap"/>
                   <arrayBlock>
                    <varRef name="CalculationBindings" slot="16"/>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="458" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setPendingUpdates"/>
                   <arrayBlock>
                    <treat line="455" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||pendingInstanceUpdates">
                     <map size="0"/>
                    </treat>
                   </arrayBlock>
                  </ifCall>
                  <ifCall line="459" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                   <check card="1" diag="0|0||ixsl:call">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                   </check>
                   <str val="setUpdates"/>
                   <arrayBlock>
                    <treat line="456" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||instanceUpdates">
                     <map size="0"/>
                    </treat>
                   </arrayBlock>
                  </ifCall>
                 </sequence>
                </choose>
                <forEach line="468">
                 <treat line="466" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|instanceKeys">
                  <cvUntyped to="xs:string">
                   <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
                    <varRef name="xforms-instances" slot="9"/>
                   </ifCall>
                  </cvUntyped>
                 </treat>
                 <ifCall line="470" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <varRef name="vv:v0" slot="6"/>
                  <str val="setInstance"/>
                  <arrayBlock>
                   <dot type="xs:string"/>
                   <check line="469" card="1" diag="3|0|XTTE0570|instance">
                    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                     <varRef name="xforms-instances" slot="9"/>
                     <dot type="xs:string"/>
                    </ifCall>
                   </check>
                  </arrayBlock>
                 </ifCall>
                </forEach>
                <let line="475" var="submissions" as="map(xs:string, map(*))" slot="18" eval="8">
                 <ifCall line="477" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                  <forEach>
                   <slash>
                    <slash>
                     <slash simple="1">
                      <varRef name="xforms-doci" slot="7"/>
                      <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                     </slash>
                     <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
                    </slash>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}submission)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='submission';"/>
                   </slash>
                   <let line="481" var="map-key" as="xs:string" slot="19" eval="7">
                    <choose>
                     <fn name="exists">
                      <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                     </fn>
                     <check card="1" diag="3|0|XTTE0570|map-key">
                      <cast as="xs:string" emptiable="1">
                       <attVal name="Q{}id" chk="0"/>
                      </cast>
                     </check>
                     <true/>
                     <str val="saxon-forms-default-submission"/>
                    </choose>
                    <let line="482" var="map-value" as="map(*)" slot="20" eval="7">
                     <treat line="483" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|map-value">
                      <check card="1" diag="3|0|XTTE0570|map-value">
                       <callT name="setSubmission" bSlot="5">
                        <withParam name="Q{}this" flags="c" as="element()">
                         <dot line="484" type="element(Q{http://www.w3.org/2002/xforms}submission)"/>
                        </withParam>
                        <withParam name="Q{}submission-id" flags="c" as="xs:string">
                         <varRef line="485" name="map-key" slot="19"/>
                        </withParam>
                       </callT>
                      </check>
                     </treat>
                     <ifCall line="488" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                      <varRef name="map-key" slot="19"/>
                      <varRef name="map-value" slot="20"/>
                     </ifCall>
                    </let>
                   </let>
                  </forEach>
                  <map size="2">
                   <str val="duplicates"/>
                   <str val="reject"/>
                   <str val="duplicates-error-code"/>
                   <str val="XTDE3365"/>
                  </map>
                 </ifCall>
                 <sequence line="497">
                  <forEach>
                   <treat line="495" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|submissionKeys">
                    <cvUntyped to="xs:string">
                     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
                      <varRef name="submissions" slot="18"/>
                     </ifCall>
                    </cvUntyped>
                   </treat>
                   <sequence line="499">
                    <message>
                     <sequence role="select">
                      <valueOf>
                       <str val="Setting submission with ID '"/>
                      </valueOf>
                      <valueOf>
                       <dot type="xs:string"/>
                      </valueOf>
                      <valueOf flags="S">
                       <str val="'"/>
                      </valueOf>
                     </sequence>
                     <str role="terminate" val="no"/>
                     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
                    </message>
                    <ifCall line="500" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                     <varRef name="vv:v1" slot="5"/>
                     <str val="addSubmission"/>
                     <arrayBlock>
                      <dot type="xs:string"/>
                      <check line="498" card="1" diag="3|0|XTTE0570|submission">
                       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                        <varRef name="submissions" slot="18"/>
                        <dot type="xs:string"/>
                       </ifCall>
                      </check>
                     </arrayBlock>
                    </ifCall>
                   </sequence>
                  </forEach>
                  <resultDoc line="507" global="#&#xD;&#xA;#Fri Oct 19 10:15:24 BST 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Fri Oct 19 10:15:24 BST 2018&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
                   <fn role="href" name="concat">
                    <str val="#"/>
                    <varRef name="xFormsId" slot="4"/>
                   </fn>
                   <applyT role="content" line="508" bSlot="6">
                    <slash role="select" simple="1">
                     <varRef name="xforms-doci" slot="7"/>
                     <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                    </slash>
                    <withParam name="Q{}instances" flags="t" as="map(xs:string, element())">
                     <varRef line="509" name="xforms-instances" slot="9"/>
                    </withParam>
                    <withParam name="Q{}bindings" flags="t" as="map(xs:string, node())">
                     <varRef line="510" name="bindings" slot="12"/>
                    </withParam>
                    <withParam name="Q{}submissions" flags="t" as="map(xs:string, map(*))">
                     <varRef line="511" name="submissions" slot="18"/>
                    </withParam>
                    <withParam name="Q{}nodeset" flags="t" as="xs:string">
                     <str val=""/>
                    </withParam>
                   </applyT>
                  </resultDoc>
                 </sequence>
                </let>
               </sequence>
              </let>
             </sequence>
            </let>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </sequence>
    </let>
   </let>
  </template>
 </co>
 <co id="66" binds="66">
  <mode name="Q{}namespace-fix" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="1" flags="s" line="2516" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2517" var="current-namespace" as="xs:anyURI" slot="0" eval="8">
     <fn name="namespace-uri">
      <dot type="element()"/>
     </fn>
     <compElem line="2519">
      <convert role="name" from="xs:QName" to="xs:string">
       <fn line="2518" name="QName">
        <varRef name="current-namespace" slot="0"/>
        <fn name="name">
         <dot type="element()"/>
        </fn>
       </fn>
      </convert>
      <convert role="namespace" from="xs:anyURI" to="xs:string">
       <varRef name="current-namespace" slot="0"/>
      </convert>
      <sequence role="content" line="2520">
       <namespace flags="l">
        <str role="name" val="xforms"/>
        <str role="select" val="http://www.w3.org/2002/xforms"/>
       </namespace>
       <applyT line="2522" mode="Q{}namespace-fix" bSlot="0">
        <sequence role="select">
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        </sequence>
       </applyT>
      </sequence>
     </compElem>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="45" binds="61 6 7">
  <template name="Q{}HTTPsubmit" cxt="map(*)" jsTest="return SaxonJS.U.isMap(item)" flags="s" line="820" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="826">
    <param name="Q{}instance-id" slot="0" as="xs:string">
     <str role="select" val="saxon-forms-default"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
      <check card="1" diag="8|0|XTTE0590|instance-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="827" name="Q{}targetref" slot="1" as="xs:string?">
     <empty role="select"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|targetref">
      <check card="?" diag="8|0|XTTE0590|targetref">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="828" name="Q{}replace" slot="2" as="xs:string?">
     <empty role="select"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|replace">
      <check card="?" diag="8|0|XTTE0590|replace">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="832" var="responseXML" as="document-node()" slot="3" eval="7">
     <treat as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="3|0|XTTE0570|responseXML">
      <check card="1" diag="3|0|XTTE0570|responseXML">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <dot type="map(*)"/>
        <str val="body"/>
       </ifCall>
      </check>
     </treat>
     <choose line="835">
      <fn name="empty">
       <varRef name="responseXML" slot="3"/>
      </fn>
      <callT line="836" name="serverError" bSlot="0" flags="t">
       <withParam name="Q{}responseMap" flags="c" as="map(*)">
        <dot line="837" type="map(*)"/>
       </withParam>
      </callT>
      <gc line="849" op="=" card="1:1" comp="CCC">
       <varRef name="replace" slot="2"/>
       <str val="instance"/>
      </gc>
      <sequence line="850">
       <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="1" eval="8 4">
        <fn line="830" name="concat">
         <str val="instance('"/>
         <varRef name="instance-id" slot="0"/>
         <str val="')/"/>
        </fn>
        <check card="1" diag="0|1||xforms:setInstance-JS">
         <slash simple="1">
          <varRef name="responseXML" slot="3"/>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
        </check>
       </ufCall>
       <callT line="852" name="xforms-rebuild" bSlot="2"/>
       <message line="853">
        <sequence role="select">
         <valueOf>
          <str val="[HTTPsubmit] response body: "/>
         </valueOf>
         <valueOf>
          <fn name="serialize">
           <varRef name="responseXML" slot="3"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
      </sequence>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id="37" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}instance" line="111" module="xforms-function-library.xsl" eval="7" flags="pU" as="element()?" slots="1">
   <arg name="instance-id" as="xs:string"/>
   <treat role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="113" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="5|0|XTTE0780|xforms:instance">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="getInstance"/>
     <arrayBlock>
      <varRef name="instance-id" slot="0"/>
     </arrayBlock>
    </ifCall>
   </treat>
  </function>
 </co>
 <co id="68" binds="60 43">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onclick" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="1" rank="0" minImp="0" slots="0" flags="s" line="1700" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <fn ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1700" name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
     </fn>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1702" name="DOMActivate" bSlot="0" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="1703" type="element(Q{}button)"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="803" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <fn ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="803" name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
     </fn>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="805" name="xforms-submit" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="806" type="element(Q{}button)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="67" binds="54 55 56 10">
  <template name="Q{}setSubmission" flags="os" line="3241" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3242">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3243" name="Q{}submission-id" slot="1" flags="i" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|submission-id">
      <check card="1" diag="8|0|XTTE0590|submission-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3246" var="bindingi" as="node()?" slot="2" eval="7">
     <treat line="3247" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
      <check card="?" diag="3|0|XTTE0570|bindingi">
       <callT name="getBinding" bSlot="0">
        <withParam name="Q{}this" flags="c" as="element()">
         <varRef line="3248" name="this" slot="0"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <let line="3253" var="refi" as="xs:string" slot="3" eval="7">
      <treat line="3254" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
       <check card="1" diag="3|0|XTTE0570|refi">
        <cvUntyped to="xs:string">
         <data>
          <callT name="getDataRef" bSlot="1">
           <withParam name="Q{}this" flags="c" as="element()">
            <varRef line="3255" name="this" slot="0"/>
           </withParam>
           <withParam name="Q{}bindingi" flags="c" as="node()?">
            <varRef line="3256" name="bindingi" slot="2"/>
           </withParam>
          </callT>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3261" var="actions" as="map(*)*" slot="4" eval="8">
       <treat line="3262" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
        <callT name="setActions" bSlot="2">
         <withParam name="Q{}this" flags="c" as="element()">
          <treat line="3263" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
           <dot flags="a"/>
          </treat>
         </withParam>
         <withParam name="Q{}nodeset" flags="t" as="xs:string">
          <varRef line="3264" name="refi" slot="3"/>
         </withParam>
        </callT>
       </treat>
       <sequence line="3268">
        <choose>
         <fn name="exists">
          <varRef name="actions" slot="4"/>
         </fn>
         <ifCall line="3269" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
          <check card="1" diag="0|0||ixsl:call">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
          </check>
          <str val="addAction"/>
          <arrayBlock>
           <varRef name="submission-id" slot="1"/>
           <varRef name="actions" slot="4"/>
          </arrayBlock>
         </ifCall>
        </choose>
        <ifCall line="3274" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
         <sequence>
          <choose>
           <fn name="exists">
            <varRef name="refi" slot="3"/>
           </fn>
           <ifCall line="3275" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@ref"/>
            <varRef name="refi" slot="3"/>
           </ifCall>
          </choose>
          <choose line="3278">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}resource)" jsTest="return item.name==='resource'"/>
            </slash>
           </fn>
           <ifCall line="3279" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@resource"/>
            <cast as="xs:string" emptiable="1">
             <data>
              <slash simple="1">
               <varRef name="this" slot="0"/>
               <axis name="attribute" nodeTest="attribute(Q{}resource)" jsTest="return item.name==='resource'"/>
              </slash>
             </data>
            </cast>
           </ifCall>
          </choose>
          <choose line="3281">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}mode)" jsTest="return item.name==='mode'"/>
            </slash>
           </fn>
           <ifCall line="3282" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@mode"/>
            <cast as="xs:string" emptiable="1">
             <data>
              <slash simple="1">
               <varRef name="this" slot="0"/>
               <axis name="attribute" nodeTest="attribute(Q{}mode)" jsTest="return item.name==='mode'"/>
              </slash>
             </data>
            </cast>
           </ifCall>
          </choose>
          <ifCall line="3285" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@method"/>
           <choose line="3287">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}method)" jsTest="return item.name==='method'"/>
             </slash>
            </fn>
            <fn line="3288" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}method)" jsTest="return item.name==='method'"/>
             </slash>
            </fn>
            <true/>
            <str val="POST"/>
           </choose>
          </ifCall>
          <choose line="3297">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}validate)" jsTest="return item.name==='validate'"/>
            </slash>
           </fn>
           <ifCall line="3298" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@validate"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}validate)" jsTest="return item.name==='validate'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3300">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
            </slash>
           </fn>
           <ifCall line="3301" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@relevant"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3303">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}serialization)" jsTest="return item.name==='serialization'"/>
            </slash>
           </fn>
           <ifCall line="3304" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@serialization"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}serialization)" jsTest="return item.name==='serialization'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3306">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}version)" jsTest="return item.name==='version'"/>
            </slash>
           </fn>
           <ifCall line="3307" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@version"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}version)" jsTest="return item.name==='version'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3309">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}indent)" jsTest="return item.name==='indent'"/>
            </slash>
           </fn>
           <ifCall line="3310" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@indent"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}indent)" jsTest="return item.name==='indent'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <ifCall line="3314" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@mediatype"/>
           <choose line="3316">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}mediatype)" jsTest="return item.name==='mediatype'"/>
             </slash>
            </fn>
            <fn line="3317" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}mediatype)" jsTest="return item.name==='mediatype'"/>
             </slash>
            </fn>
            <true/>
            <str val="text/plain"/>
           </choose>
          </ifCall>
          <choose line="3327">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}encoding)" jsTest="return item.name==='encoding'"/>
            </slash>
           </fn>
           <ifCall line="3328" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@encoding"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}encoding)" jsTest="return item.name==='encoding'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3330">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}omit-xml-declaration)" jsTest="return item.name==='omit-xml-declaration'"/>
            </slash>
           </fn>
           <ifCall line="3331" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@omit-xml-declaration"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}omit-xml-declaration)" jsTest="return item.name==='omit-xml-declaration'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3333">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}standalone)" jsTest="return item.name==='standalone'"/>
            </slash>
           </fn>
           <ifCall line="3334" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@standalone"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}standalone)" jsTest="return item.name==='standalone'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3336">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}cdata-section-elements)" jsTest="return item.name==='cdata-section-elements'"/>
            </slash>
           </fn>
           <ifCall line="3337" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@cdata-section-elements"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}cdata-section-elements)" jsTest="return item.name==='cdata-section-elements'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <ifCall line="3340" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@replace"/>
           <choose line="3342">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}replace)" jsTest="return item.name==='replace'"/>
             </slash>
            </fn>
            <fn line="3343" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}replace)" jsTest="return item.name==='replace'"/>
             </slash>
            </fn>
            <true/>
            <str val="all"/>
           </choose>
          </ifCall>
          <choose line="3354">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}instance)" jsTest="return item.name==='instance'"/>
            </slash>
           </fn>
           <ifCall line="3355" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@instance"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}instance)" jsTest="return item.name==='instance'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3357">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}targetref)" jsTest="return item.name==='targetref'"/>
            </slash>
           </fn>
           <ifCall line="3358" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@targetref"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}targetref)" jsTest="return item.name==='targetref'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3360">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}separator)" jsTest="return item.name==='separator'"/>
            </slash>
           </fn>
           <ifCall line="3361" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@separator"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}separator)" jsTest="return item.name==='separator'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3363">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}includenamespaceprefixes)" jsTest="return item.name==='includenamespaceprefixes'"/>
            </slash>
           </fn>
           <ifCall line="3364" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@includenamespaceprefixes"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}includenamespaceprefixes)" jsTest="return item.name==='includenamespaceprefixes'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <treat line="3367" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="18|0|XTTE3375|">
           <forEachGroup algorithm="by">
            <slash role="select" simple="1">
             <varRef name="this" slot="0"/>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <fn role="key" name="local-name">
             <dot type="element()"/>
            </fn>
            <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
            <applyT role="content" line="3368" mode="Q{}xforms-action-map" bSlot="3">
             <dot role="select" type="element()"/>
            </applyT>
           </forEachGroup>
          </treat>
         </sequence>
         <map size="2">
          <str val="duplicates"/>
          <str val="reject"/>
          <str val="duplicates-error-code"/>
          <str val="XTDE3365"/>
         </map>
        </ifCall>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="69" binds="33 17">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onkeyup" onNo="TC" flags="W" patternSlots="1">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="589" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
     <and ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="589" op="and">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
      </fn>
      <ufCall name="Q{http://www.w3.org/2002/xforms}hasClass" tailCall="false" bSlot="0">
       <check card="1" diag="0|0||xforms:hasClass">
        <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
       </check>
       <str val="incremental"/>
      </ufCall>
     </and>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="591" name="xforms-value-changed" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="592" type="element(Q{}input)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="54" binds="70">
  <template name="Q{}getBinding" flags="os" line="2793" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2794">
    <param name="Q{}this" slot="0" flags="r" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="2795" name="Q{}bindings" slot="1" flags="t" as="map(xs:string, node())">
     <map role="select" size="0"/>
     <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
      <check card="1" diag="8|0|XTTE0590|bindings">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <let line="2797" var="ref-binding" as="xs:string" slot="2" eval="7">
     <treat line="2798" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|ref-binding">
      <check card="1" diag="3|0|XTTE0570|ref-binding">
       <cvUntyped to="xs:string">
        <data>
         <callT name="getBindingRef" bSlot="0">
          <withParam name="Q{}this" flags="c" as="element()">
           <treat line="2799" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
            <dot flags="a"/>
           </treat>
          </withParam>
         </callT>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line="2803" var="binding" as="element()?" slot="3" eval="7">
      <choose line="2808">
       <fn name="empty">
        <varRef name="ref-binding" slot="2"/>
       </fn>
       <empty/>
       <true/>
       <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|binding">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="bindings" slot="1"/>
         <varRef name="ref-binding" slot="2"/>
        </ifCall>
       </treat>
      </choose>
      <choose line="2812">
       <fn name="exists">
        <varRef name="binding" slot="3"/>
       </fn>
       <sequence line="2813">
        <message>
         <sequence role="select">
          <valueOf>
           <str val="[getBinding for "/>
          </valueOf>
          <valueOf>
           <fn name="name">
            <varRef name="this" slot="0"/>
           </fn>
          </valueOf>
          <valueOf>
           <str val="] Binding found: "/>
          </valueOf>
          <valueOf>
           <fn name="serialize">
            <varRef name="binding" slot="3"/>
           </fn>
          </valueOf>
         </sequence>
         <str role="terminate" val="no"/>
         <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
        </message>
        <varRef line="2814" name="binding" slot="3"/>
       </sequence>
      </choose>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="71" binds="">
  <globalVariable name="Q{}default-instance-id" type="xs:string" line="64" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="saxon-forms-default"/>
  </globalVariable>
 </co>
 <co id="70" binds="">
  <template name="Q{}getBindingRef" flags="os" line="2825" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2826">
    <param name="Q{}this" slot="0" flags="r" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <choose line="2833">
     <fn name="exists">
      <slash simple="1">
       <varRef name="this" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}bind)" jsTest="return item.name==='bind'"/>
      </slash>
     </fn>
     <valueOf line="2834">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}bind)" jsTest="return item.name==='bind'"/>
        </slash>
       </data>
      </convert>
     </valueOf>
     <fn line="2837" name="exists">
      <slash simple="1">
       <varRef name="this" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
      </slash>
     </fn>
     <valueOf line="2838">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </slash>
       </data>
      </convert>
     </valueOf>
     <true/>
     <valueOf line="2841" flags="S">
      <str val=""/>
     </valueOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="72" binds="">
  <globalVariable name="Q{}debugTiming" type="xs:boolean" line="63" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <false/>
  </globalVariable>
 </co>
 <co id="32" binds="32 32 32">
  <mode name="Q{}jxml-xml" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="2" flags="s" line="2204" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:array" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='array'"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2205" var="keyVar" as="attribute(Q{}key)?" slot="0" eval="8">
     <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     <let line="2208" var="vv:v0" as="xs:string" slot="1" eval="13">
      <fn name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <varRef name="keyVar" slot="0"/>
        </data>
       </convert>
      </fn>
      <forEach line="2207">
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       <compElem line="2208">
        <varRef role="name" name="vv:v0" slot="1"/>
        <applyT role="content" line="2209" mode="Q{}jxml-xml" bSlot="0">
         <dot role="select" type="element()"/>
        </applyT>
       </compElem>
      </forEach>
     </let>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="2190" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:number" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='number'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2192">
     <fn name="starts-with">
      <cvUntyped to="xs:string">
       <attVal name="Q{}key" chk="0"/>
      </cvUntyped>
      <str val="@"/>
     </fn>
     <compAtt line="2193">
      <fn role="name" name="substring">
       <cvUntyped to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </cvUntyped>
       <int val="2"/>
      </fn>
      <fn role="select" name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <mergeAdj>
          <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </compAtt>
     <true/>
     <compElem line="2196">
      <fn role="name" name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </convert>
      </fn>
      <valueOf role="content" line="2197" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </compElem>
    </choose>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="2190" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:string" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='string'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2192">
     <fn name="starts-with">
      <cvUntyped to="xs:string">
       <attVal name="Q{}key" chk="0"/>
      </cvUntyped>
      <str val="@"/>
     </fn>
     <compAtt line="2193">
      <fn role="name" name="substring">
       <cvUntyped to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </cvUntyped>
       <int val="2"/>
      </fn>
      <fn role="select" name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <mergeAdj>
          <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </compAtt>
     <true/>
     <compElem line="2196">
      <fn role="name" name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </convert>
      </fn>
      <valueOf role="content" line="2197" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </compElem>
    </choose>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="0" flags="s" line="2166" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:map" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='map'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2168">
     <fn name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     </fn>
     <applyT line="2170" mode="Q{}jxml-xml" flags="t" bSlot="1">
      <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </applyT>
     <fn line="2175" name="starts-with">
      <cvUntyped to="xs:string">
       <attVal name="Q{}key" chk="0"/>
      </cvUntyped>
      <str val="@"/>
     </fn>
     <compAtt line="2176">
      <fn role="name" name="substring">
       <cvUntyped to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </cvUntyped>
       <int val="2"/>
      </fn>
      <convert role="select" from="xs:untypedAtomic" to="xs:string">
       <data>
        <dot type="*:map"/>
       </data>
      </convert>
     </compAtt>
     <true/>
     <compElem line="2179">
      <fn role="name" name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </convert>
      </fn>
      <applyT role="content" line="2180" mode="Q{}jxml-xml" bSlot="2">
       <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </applyT>
     </compElem>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="23" binds="">
  <template name="Q{}getInstance" flags="os" as="element()?" line="2768" module="saxon-xforms.xsl" slots="2">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2769">
    <param name="Q{}instance-id" slot="0" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
      <check card="1" diag="8|0|XTTE0590|instance-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="2770" name="Q{}instances" slot="1" flags="ti" as="map(xs:string, element())">
     <treat role="conversion" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|instances">
      <check card="1" diag="8|0|XTTE0590|instances">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <choose line="2774">
     <varRef name="instance-id" slot="0"/>
     <ifCall line="2775" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
      <varRef name="instances" slot="1"/>
      <varRef name="instance-id" slot="0"/>
     </ifCall>
     <true/>
     <copyOf line="2779" flags="vc">
      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
       <varRef name="instances" slot="1"/>
       <str val="saxon-forms-default"/>
      </ifCall>
     </copyOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="63" binds="63 63 63">
  <mode name="Q{}json-xml" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="2086" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2091">
     <fn name="exists">
      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </fn>
     <forEachGroup line="2092" algorithm="by">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </sequence>
      <fn role="key" name="local-name">
       <dot type="node()"/>
      </fn>
      <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
      <choose role="content" line="2094">
       <fn name="exists">
        <tail start="2">
         <currentGroup/>
        </tail>
       </fn>
       <elem line="2097" name="array" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
        <sequence>
         <att name="key" flags="l">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <currentGroupingKey/>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <forEach line="2098">
          <currentGroup/>
          <elem line="2101" name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl">
           <applyT mode="Q{}json-xml" bSlot="0">
            <dot role="select"/>
           </applyT>
          </elem>
         </forEach>
        </sequence>
       </elem>
       <filter line="2108" flags="b">
        <currentGroup/>
        <fn name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|12|XPTY0020|">
           <dot/>
          </treat>
          <axis name="self" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         </slash>
        </fn>
       </filter>
       <elem line="2113" name="string" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
        <sequence>
         <att name="key" flags="l">
          <fn name="concat">
           <str val="@"/>
           <check card="?" diag="0|1||fn:concat">
            <currentGroupingKey/>
           </check>
          </fn>
         </att>
         <valueOf line="2114" flags="l">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <dot type="node()"/>
           </data>
          </convert>
         </valueOf>
        </sequence>
       </elem>
       <fn line="2119" name="exists">
        <slash>
         <currentGroup/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </fn>
       <elem line="2122" name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
        <sequence>
         <att name="key" flags="l">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <currentGroupingKey/>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <applyT line="2123" mode="Q{}json-xml" bSlot="1">
          <currentGroup role="select"/>
         </applyT>
        </sequence>
       </elem>
       <true/>
       <applyT line="2128" mode="Q{}json-xml" bSlot="2">
        <currentGroup role="select"/>
       </applyT>
      </choose>
     </forEachGroup>
     <fn line="2134" name="matches">
      <cvUntyped to="xs:string">
       <data>
        <dot type="element()"/>
       </data>
      </cvUntyped>
      <str val="^[0-9]+$"/>
      <str val=""/>
     </fn>
     <elem line="2136" name="number" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
      <sequence>
       <att name="key" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </att>
       <valueOf line="2137" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <mergeAdj>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </mergeAdj>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
     <true/>
     <elem line="2142" name="string" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
      <sequence>
       <att name="key" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </att>
       <valueOf line="2143" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <mergeAdj>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </mergeAdj>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </choose>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{http://saxon.sf.net/}kk101" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1659" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <data ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1659">
   <axis name="child" nodeTest="element(Q{}data-action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='data-action';"/>
  </data>
 </key>
 <key name="Q{http://saxon.sf.net/}kk102" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2285" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <attVal ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="-1" name="Q{}data-ref" chk="0"/>
 </key>
 <key name="Q{http://saxon.sf.net/}kk103" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3000" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <attVal ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="-1" name="Q{}id" chk="0"/>
 </key>
 <output>
  <property name="indent" value="no"/>
  <property name="doctype-system" value="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"/>
  <property name="encoding" value="utf-8"/>
  <property name="doctype-public" value="-//W3C//DTD XHTML 1.0 Transitional//EN"/>
  <property name="omit-xml-declaration" value="no"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="html"/>
 </output>
 <decimalFormat/>
</package><?Σ 533044a6?>